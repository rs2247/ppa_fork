(function() {
  'use strict';

  var globals = typeof global === 'undefined' ? self : global;
  if (typeof globals.require === 'function') return;

  var modules = {};
  var cache = {};
  var aliases = {};
  var has = {}.hasOwnProperty;

  var expRe = /^\.\.?(\/|$)/;
  var expand = function(root, name) {
    var results = [], part;
    var parts = (expRe.test(name) ? root + '/' + name : name).split('/');
    for (var i = 0, length = parts.length; i < length; i++) {
      part = parts[i];
      if (part === '..') {
        results.pop();
      } else if (part !== '.' && part !== '') {
        results.push(part);
      }
    }
    return results.join('/');
  };

  var dirname = function(path) {
    return path.split('/').slice(0, -1).join('/');
  };

  var localRequire = function(path) {
    return function expanded(name) {
      var absolute = expand(dirname(path), name);
      return globals.require(absolute, path);
    };
  };

  var initModule = function(name, definition) {
    var hot = hmr && hmr.createHot(name);
    var module = {id: name, exports: {}, hot: hot};
    cache[name] = module;
    definition(module.exports, localRequire(name), module);
    return module.exports;
  };

  var expandAlias = function(name) {
    var val = aliases[name];
    return (val && name !== val) ? expandAlias(val) : name;
  };

  var _resolve = function(name, dep) {
    return expandAlias(expand(dirname(name), dep));
  };

  var require = function(name, loaderPath) {
    if (loaderPath == null) loaderPath = '/';
    var path = expandAlias(name);

    if (has.call(cache, path)) return cache[path].exports;
    if (has.call(modules, path)) return initModule(path, modules[path]);

    throw new Error("Cannot find module '" + name + "' from '" + loaderPath + "'");
  };

  require.alias = function(from, to) {
    aliases[to] = from;
  };

  var extRe = /\.[^.\/]+$/;
  var indexRe = /\/index(\.[^\/]+)?$/;
  var addExtensions = function(bundle) {
    if (extRe.test(bundle)) {
      var alias = bundle.replace(extRe, '');
      if (!has.call(aliases, alias) || aliases[alias].replace(extRe, '') === alias + '/index') {
        aliases[alias] = bundle;
      }
    }

    if (indexRe.test(bundle)) {
      var iAlias = bundle.replace(indexRe, '');
      if (!has.call(aliases, iAlias)) {
        aliases[iAlias] = bundle;
      }
    }
  };

  require.register = require.define = function(bundle, fn) {
    if (bundle && typeof bundle === 'object') {
      for (var key in bundle) {
        if (has.call(bundle, key)) {
          require.register(key, bundle[key]);
        }
      }
    } else {
      modules[bundle] = fn;
      delete cache[bundle];
      addExtensions(bundle);
    }
  };

  require.list = function() {
    var list = [];
    for (var item in modules) {
      if (has.call(modules, item)) {
        list.push(item);
      }
    }
    return list;
  };

  var hmr = globals._hmr && new globals._hmr(_resolve, require, modules, cache);
  require._cache = cache;
  require.hmr = hmr && hmr.wrap;
  require.brunch = true;
  globals.require = require;
})();

(function() {
var global = typeof window === 'undefined' ? this : window;
var process;
var __makeRelativeRequire = function(require, mappings, pref) {
  var none = {};
  var tryReq = function(name, pref) {
    var val;
    try {
      val = require(pref + '/node_modules/' + name);
      return val;
    } catch (e) {
      if (e.toString().indexOf('Cannot find module') === -1) {
        throw e;
      }

      if (pref.indexOf('node_modules') !== -1) {
        var s = pref.split('/');
        var i = s.lastIndexOf('node_modules');
        var newPref = s.slice(0, i).join('/');
        return tryReq(name, newPref);
      }
    }
    return none;
  };
  return function(name) {
    if (name in mappings) name = mappings[name];
    if (!name) return;
    if (name[0] !== '.' && pref) {
      var val = tryReq(name, pref);
      if (val !== none) return val;
    }
    return require(name);
  }
};
require.register("web/static/js/analysis-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _analysisPanel = require("../templates/analysis-panel");

var _analysisPanel2 = _interopRequireDefault(_analysisPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('analysis-panel', _analysisPanel2.default);

var AnalisysPanel = function () {
  function AnalisysPanel() {
    _classCallCheck(this, AnalisysPanel);
  }

  _createClass(AnalisysPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("analysis:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.AnalysisChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return AnalisysPanel;
}();

window.analysisPanel = new AnalisysPanel();
});

require.register("web/static/js/app.js", function(exports, require, module) {
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); // Brunch automatically concatenates all files in your
// watched paths. Those paths can be configured at
// config.paths.watched in "brunch-config.js".
//
// However, those files will only be executed if
// explicitly imported. The only exception are files
// in vendor, which are never wrapped in imports and
// therefore are always executed.

// Import dependencies


// If you no longer want to use a dependency, remember
// to also remove its path from "config.paths.watched".

// Import local files
// Local files can be imported directly using relative
// paths "./socket" or full ones "web/static/js/socket".


require('phoenix_html');

var _socket = require('./socket');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _logging = require('./logging');

var _logging2 = _interopRequireDefault(_logging);

var _navbar = require('./components/navbar');

var _navbar2 = _interopRequireDefault(_navbar);

var _dropdown = require('./components/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

require('./farm-panel');

require('./key-accounts');

require('./sales-report');

require('./competitors-flow');

require('./university-charts');

require('./foe-stock');

require('./utils/string');

require('./utils/object');

require('./universities');

require('./import-university-goals');

require('./panel-app');

require('./user-home');

require('./analysis-panel');

require('./stock-panel');

require('./inep-share');

require('./ies-stats');

require('./billing-panel');

require('./courses-panel');

require('./competitors-panel');

require('./quality-stats');

require('./comparing-panel');

require('./demand-curves');

require('./pricing-panel');

require('./cpfs-panel');

require('./search-ranking-panel');

require('./bo-panel');

require('./refund-panel');

require('./inep-entrants');

require('./sold-courses-panel');

require('./farm-ranking');

require('./inep-panel');

require('./farm-universities');

require('./farm-key-accounts');

require('./offers-panel');

require('./paids-panel');

require('./pricing-campaign-panel');

require('./quali-panel');

require('./ies-panel');

require('./farm-campaign');

require('./quali-campaign');

require('./search-shows-panel');

require('./dashboard-app');

require('./crawler-panel');

require('./search-simulator');

require('./funnel-panel');

require('./farm-quality-owners');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Set log level
// Available levels are:
// - Logging.ERROR (default)
// - Logging.WARN
// - Logging.INFO
// - Logging.DEBUG
_logging2.default.set_level(_logging2.default.INFO);

Vue.filter('toDelimited', function (value) {
  if (typeof value !== "number") {
    return value;
  }
  var formatter = new Intl.NumberFormat('pt-BR', {
    currency: 'BRL',
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  });
  return formatter.format(value);
});

Vue.filter('toDelimitedInt', function (value) {
  if (typeof value !== "number") {
    return value;
  }
  var formatter = new Intl.NumberFormat('pt-BR', {
    currency: 'BRL',
    minimumFractionDigits: 0
  });
  return formatter.format(value);
});

Vue.filter('toPercentage', function (value) {
  if (typeof value !== "number") {
    return value;
  }
  var formatter = new Intl.NumberFormat('pt-BR', {
    minimumFractionDigits: 2
  });
  return formatter.format(value) + "%";
});

Vue.filter('toCurrency', function (value) {
  if (typeof value !== "number") {
    return value;
  }
  var formatter = new Intl.NumberFormat('pt-BR', {
    style: 'currency',
    currency: 'BRL',
    minimumFractionDigits: 2
  });
  return formatter.format(value);
});

var Chartjs = require('chart.js');
Chartjs.plugins.register({
  afterDatasetsDraw: function afterDatasetsDraw(chartInstance, easing) {
    if (easing != 1) {
      return;
    }
    if (chartInstance.options.extended) {
      var drawValues = chartInstance.options.extended.drawValuesInChart;
      var drawPercentages = chartInstance.options.extended.drawPercentageValuesInChart;
      var useAlternativeDataSet = chartInstance.options.extended.useAlternativeDataSet;
      var drawColor = chartInstance.options.extended.drawValuesColor;
      var drawSize = chartInstance.options.extended.drawValuesSize;
      var drawStyle = chartInstance.options.extended.drawValueStyle;

      if (drawValues || drawPercentages) {
        var ctx = chartInstance.chart.ctx;
        chartInstance.data.datasets.forEach(function (dataset, i) {
          var fullSum = 0;
          var meta = chartInstance.getDatasetMeta(i);
          for (var i = 0; i < dataset.data.length; i++) {
            fullSum += dataset.data[i];
          }
          if (!meta.hidden) {
            meta.data.forEach(function (element, index) {
              if (drawColor) {
                ctx.fillStyle = drawColor;
              } else {
                ctx.fillStyle = '#FFFFFF';
              }
              var fontSize = 15;
              if (drawSize) {
                fontSize = drawSize;
              }
              var fontStyle = 'normal';
              if (drawStyle) {
                fontStyle = drawStyle;
              }
              var fontFamily = 'proxima-nova';
              ctx.font = Chartjs.helpers.fontString(fontSize, fontStyle, fontFamily);

              if (dataset.data[index]) {
                var percentage = ((dataset.data[index] / fullSum).toFixed(2) * 100).toString();
                var dataString = '';
                if (useAlternativeDataSet) {
                  dataString = dataset.labelsData[index].toString();
                } else {
                  dataString = dataset.data[index].toString();
                }

                // Make sure alignment settings are correct
                ctx.textAlign = 'center';
                ctx.textBaseline = 'middle';
                var padding = 5;
                var position = element.tooltipPosition();
                if (drawPercentages) {
                  ctx.fillText(percentage + ' %', position.x, position.y - fontSize / 2 - padding);
                  padding -= 25;
                }
                if (drawValues) {
                  ctx.fillText(dataString, position.x, position.y - fontSize / 2 - padding);
                }
              }
            });
          }
        });
      }

      if (chartInstance.options.extended.drawRectangles && chartInstance.data.datasets.length > 0) {
        var _meta = chartInstance.getDatasetMeta(0);
        for (var i = 0; i < chartInstance.options.extended.rectangles.length; i++) {
          var rectangle = chartInstance.options.extended.rectangles[i];
          var xValue = rectangle.x;
          var yValue = rectangle.y;

          var wValue = rectangle.w;
          var hValue = rectangle.h;
          if (rectangle.to_point) {
            var tPosition = _meta.data[rectangle.to_point.index].tooltipPosition();
            var yAxes = _meta.data[0]._yScale;

            wValue = tPosition.x - _meta.data[0]._yScale.right + xValue;
            hValue = _meta.data[0]._yScale.bottom - tPosition.y + yValue;
          }

          if (rectangle.to_scale_point) {

            var _yAxes = _meta.data[0]._yScale;
            var xAxes = _meta.data[0]._xScale;

            var yMax = _yAxes.ticks[0];
            var yMin = _yAxes.ticks[_yAxes.ticks.length - 1];
            var yDelta = yMax - yMin;

            var yBottom = _meta.data[0]._yScale.bottom;
            var yTop = _meta.data[0]._yScale.top;
            var yDeltaScale = yBottom - yTop;

            var xMin = xAxes.ticks[0];
            var xMax = xAxes.ticks[xAxes.ticks.length - 1];
            var xDelta = xMax - xMin;

            var xRight = _meta.data[0]._xScale.right;
            var xLeft = _meta.data[0]._xScale.left;
            var xDeltaScale = xRight - xLeft;

            var xScale = rectangle.to_scale_point.x;
            var yScale = rectangle.to_scale_point.y;

            var adjustedY = yScale * yDeltaScale / yDelta;
            var adjustedX = xScale * xDeltaScale / xDelta;

            wValue = adjustedX;
            hValue = adjustedY;
          }

          var colorValue = rectangle.color;
          var dashValue = rectangle.dash;

          chartInstance.chart.ctx.beginPath();
          chartInstance.chart.ctx.moveTo(_meta.data[0]._yScale.right + xValue, _meta.data[0]._yScale.bottom - yValue);
          chartInstance.chart.ctx.lineTo(_meta.data[0]._yScale.right + xValue + wValue, _meta.data[0]._yScale.bottom - yValue);
          chartInstance.chart.ctx.lineTo(_meta.data[0]._yScale.right + xValue + wValue, _meta.data[0]._yScale.bottom - (yValue + hValue));
          chartInstance.chart.ctx.lineTo(_meta.data[0]._yScale.right + xValue, _meta.data[0]._yScale.bottom - (yValue + hValue));
          chartInstance.chart.ctx.lineTo(_meta.data[0]._yScale.right + xValue, _meta.data[0]._yScale.bottom - yValue);
          chartInstance.chart.ctx.strokeStyle = colorValue;
          chartInstance.chart.ctx.setLineDash(dashValue);
          chartInstance.chart.ctx.stroke();

          if (rectangle.legend) {

            var baseX = _meta.data[0]._yScale.right + 50 + 170 * i;
            var baseY = _meta.data[0]._yScale.top - 30;
            //este retengulo tem legenda?
            chartInstance.chart.ctx.beginPath();
            chartInstance.chart.ctx.moveTo(baseX, baseY);
            chartInstance.chart.ctx.lineTo(baseX + 50, baseY);
            chartInstance.chart.ctx.strokeStyle = colorValue;
            chartInstance.chart.ctx.setLineDash(dashValue);
            chartInstance.chart.ctx.stroke();

            chartInstance.chart.ctx.textAlign = 'left';
            chartInstance.chart.ctx.fillStyle = rectangle.legendColor;
            chartInstance.chart.ctx.fillText(rectangle.legend, baseX + 60, baseY);
          }
        }
      }

      if (chartInstance.options.extended.drawHorizontalLine && chartInstance.data.datasets.length > 0) {
        var meta = chartInstance.getDatasetMeta(chartInstance.options.extended.drawHorizontalLineDataset);
        //pegando o primeiro ponto pra puchar os dados dos eixos
        var iPoint = meta.data[0];
        if (!iPoint) {
          return;
        }
        var _position = iPoint.tooltipPosition();
        var step = (iPoint._yScale.bottom - iPoint._yScale.top) / (iPoint._yScale.max - iPoint._yScale.min);
        var base = chartInstance.options.extended.drawHorizontalLinePoint - iPoint._yScale.min;
        var _position = iPoint._yScale.bottom - (chartInstance.options.extended.drawHorizontalLinePoint - iPoint._yScale.min) * step;

        chartInstance.chart.ctx.beginPath();
        chartInstance.chart.ctx.moveTo(iPoint._xScale.left, _position);
        chartInstance.chart.ctx.strokeStyle = '#ff0000';
        chartInstance.chart.ctx.setLineDash([2, 5]);
        chartInstance.chart.ctx.lineTo(iPoint._xScale.right, _position);
        chartInstance.chart.ctx.stroke();

        chartInstance.chart.ctx.textAlign = 'center';
        chartInstance.chart.ctx.fillStyle = "#FFFFFF";
      }

      if (chartInstance.options.extended.drawCurrentPointLine && chartInstance.data.datasets.length > 0) {
        var meta = chartInstance.getDatasetMeta(0);
        var iPoint = meta.data[chartInstance.options.extended.currentPoint];
        if (!iPoint) {
          return;
        }
        var position = iPoint.tooltipPosition();

        chartInstance.chart.ctx.beginPath();
        chartInstance.chart.ctx.moveTo(position.x, iPoint._yScale.top);
        chartInstance.chart.ctx.strokeStyle = '#ff0000';
        chartInstance.chart.ctx.setLineDash([2, 5]);
        chartInstance.chart.ctx.lineTo(position.x, iPoint._yScale.bottom);
        chartInstance.chart.ctx.stroke();

        chartInstance.chart.ctx.textAlign = 'center';
        chartInstance.chart.ctx.fillStyle = chartInstance.options.extended.drawCurrentPointFontColor || "#FFFFFF";
        chartInstance.chart.ctx.fillText("HOJE", position.x, 0 + 5);
      }
    }
  }
});

var Application = function () {
  function Application() {
    _classCallCheck(this, Application);
  }

  _createClass(Application, [{
    key: 'startPageComponent',


    /**
     * Find the current page component call its setup.
     */
    value: function startPageComponent() {
      var pageComponentInput = document.getElementById("page-component");
      if (pageComponentInput !== null) {
        var pageComponent = pageComponentInput.value;
        _logging2.default.info("Instantiating page component: " + pageComponent);
        var page = window[pageComponent];
        if (!page) {
          _logging2.default.error("Page component not found:" + pageComponent);
        } else {
          page.setup();
        }
      }

      var dropdown = new _dropdown2.default('capture_period', this.onSelectCapturePerdiod);
    }
  }, {
    key: 'onSelectCapturePerdiod',
    value: function onSelectCapturePerdiod(period) {
      var $capturePeriodFormInput = $('.js-capture-period');

      if ($capturePeriodFormInput.val() !== period) {
        $capturePeriodFormInput.val(period);
        $('.js-capture-period-form').submit();
      }
    }
  }, {
    key: 'applyPrototypes',
    value: function applyPrototypes() {
      Number.prototype.formatMoney = function (c, d, t) {
        var n = this,
            c = isNaN(c = Math.abs(c)) ? 2 : c,
            d = d === undefined ? "," : d,
            t = t === undefined ? "." : t,
            s = n < 0 ? "-" : "",
            i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),
            j = (j = i.length) > 3 ? j % 3 : 0;
        return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
      };

      String.prototype.replaceAll = function (search, replacement) {
        return this.replace(new RegExp(search, 'g'), replacement);
      };

      String.prototype.parseMoney = function () {
        if (this === null || this === '') {
          return 0;
        } else {
          return parseFloat(this.replaceAll(/\./, '').replaceAll(/,/, '.'));
        }
      };

      String.prototype.isBlank = function () {
        return this === null || this.trim().length === 0;
      };
    }
  }]);

  return Application;
}();

var app = new Application();
app.applyPrototypes();
app.startPageComponent();

window.navBar = new _navbar2.default();
});

require.register("web/static/js/billing-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _billingPanel = require("../templates/billing-panel");

var _billingPanel2 = _interopRequireDefault(_billingPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('billing-panel', _billingPanel2.default);

var BillingPanel = function () {
  function BillingPanel() {
    _classCallCheck(this, BillingPanel);
  }

  _createClass(BillingPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("billing:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.BillingChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return BillingPanel;
}();

window.billingPanel = new BillingPanel();
});

require.register("web/static/js/bo-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _boPanel = require("../templates/bo-panel");

var _boPanel2 = _interopRequireDefault(_boPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('bo-panel', _boPanel2.default);

var BoPanel = function () {
  function BoPanel() {
    _classCallCheck(this, BoPanel);
  }

  _createClass(BoPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("bo_panel:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.BoChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return BoPanel;
}();

window.boPanel = new BoPanel();
});

require.register("web/static/js/comparing-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _comparingPanel = require("../templates/comparing-panel");

var _comparingPanel2 = _interopRequireDefault(_comparingPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('comparing-panel', _comparingPanel2.default);

var ComparingPanel = function () {
  function ComparingPanel() {
    _classCallCheck(this, ComparingPanel);
  }

  _createClass(ComparingPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("comparing_panel:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.ComparingChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return ComparingPanel;
}();

window.comparingPanel = new ComparingPanel();
});

require.register("web/static/js/competitors-flow.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dropdown = require("./components/dropdown");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _universityAutocomplete = require("./components/universityAutocomplete");

var _universityAutocomplete2 = _interopRequireDefault(_universityAutocomplete);

var _datepicker = require("./components/datepicker");

var _datepicker2 = _interopRequireDefault(_datepicker);

var _moment = require("moment");

var _moment2 = _interopRequireDefault(_moment);

var _ajax = require("./components/ajax");

var _ajax2 = _interopRequireDefault(_ajax);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PAGE_URL = 'view_competitors_flow';

var CompetitorsFlowPage = function () {
  function CompetitorsFlowPage() {
    _classCallCheck(this, CompetitorsFlowPage);
  }

  _createClass(CompetitorsFlowPage, [{
    key: "setup",
    value: function setup() {
      var _this = this;

      this.startDatePicker = new _datepicker2.default("js-start-date");
      this.endDatePicker = new _datepicker2.default("js-end-date");
      this.levelFilterDropdown = new _dropdown2.default('js-level-filter');
      this.kindFilterDropdown = new _dropdown2.default('js-kind-filter');
      this.universityAutocomplete = new _universityAutocomplete2.default('js-university-autocomplete', { onSelect: this.onSelectUniversity.bind(this) });
      this.firstAccess = true;
      this.stateFilterDropDown = new _dropdown2.default('js-state-filter', this.onSelectState.bind(this));
      this.cityFilterDropDown = new _dropdown2.default('js-city-filter');

      $(".js-filters-form").submit(function (evt) {
        evt.preventDefault();
        _this.updateReport();
      });

      this.updateRequest = new _ajax2.default({
        url: "/" + PAGE_URL + "/generate",
        onSuccess: function onSuccess() {
          return _this.afterShowReport();
        },
        onLoadOverlayElement: $(".js-competitor-flow-tables-container")
      });
      this.loadInitialFilterValues();
    }
  }, {
    key: "loadInitialFilterValues",
    value: function loadInitialFilterValues() {
      var yesterday = (0, _moment2.default)().subtract(1, 'days').toDate();
      var sixMonthsBehind = (0, _moment2.default)().subtract(1, 'days').subtract(6, 'months').toDate();

      var startDate = $("#js-initial-start-date").val() || sixMonthsBehind;
      var endDate = $("#js-initial-end-date").val() || yesterday;
      this.startDatePicker.setDate(startDate);
      this.endDatePicker.setDate(endDate);

      var universityName = $("#js-initial-university-name").val() || "";
      var universityId = $("#js-initial-university-id").val() || "";

      this.universityAutocomplete.setSelectedValue(universityName, universityId);
    }
  }, {
    key: "defaultDropdownValue",
    value: function defaultDropdownValue() {
      return [{ value: "all", label: "Todos" }];
    }
  }, {
    key: "updateReport",
    value: function updateReport() {
      var data = this.collectParameters();
      console.log("Filter Data: " + JSON.stringify(data));
      $("#update-btn").attr('disabled', '');
      this.updateRequest.getAndRenderPartial(data, $(".js-competitor-flow-tables-container"));
      this.updatePageHistory(data);
    }
  }, {
    key: "updatePageHistory",
    value: function updatePageHistory(data) {
      var params = $.param(data);
      window.history.pushState("", "", PAGE_URL + "?" + params);
    }
  }, {
    key: "collectParameters",
    value: function collectParameters() {
      return {
        start_date: this.startDatePicker.getValue(),
        end_date: this.endDatePicker.getValue(),
        university_id: this.universityAutocomplete.getSelectedValue(),
        level: this.levelFilterDropdown.getSelectedValue(),
        kind: this.kindFilterDropdown.getSelectedValue(),
        state: this.stateFilterDropDown.getSelectedValue(),
        city: this.cityFilterDropDown.getSelectedValue()
      };
    }
  }, {
    key: "updateStateOptions",
    value: function updateStateOptions() {
      this.stateCityHash = JSON.parse($("#js-city-map").val());

      this.cityFilterDropDown.replaceOptions(this.defaultDropdownValue());

      var states = Object.keys(this.stateCityHash);
      var newStatesData = this.defaultDropdownValue();
      for (var i = 0, len = states.length; i < len; i++) {
        newStatesData.push({ value: states[i], label: states[i] });
      }
      this.stateFilterDropDown.replaceOptions(newStatesData);
    }
  }, {
    key: "afterShowReport",
    value: function afterShowReport() {
      $("#update-btn").removeAttr('disabled');
      if (typeof this.stateCityHash == 'undefined') {
        this.updateStateOptions();
      }
    }
  }, {
    key: "resetStateOptions",
    value: function resetStateOptions() {
      this.cityFilterDropDown.replaceOptions(this.defaultDropdownValue());
      this.stateFilterDropDown.replaceOptions(this.defaultDropdownValue());
    }
  }, {
    key: "onSelectUniversity",
    value: function onSelectUniversity() {
      this.resetStateOptions();
      delete this.stateCityHash;
    }
  }, {
    key: "onSelectState",
    value: function onSelectState(state) {
      if (this.firstAccess) {
        this.stateCityHash = JSON.parse($("#js-city-map").val());
        this.firstAccess = false;
      } else {
        var newCitiesData = this.defaultDropdownValue();
        if (state != "all") {
          var cities = this.stateCityHash[state];
          for (var i = 0, len = cities.length; i < len; i++) {
            newCitiesData.push({ value: cities[i], label: cities[i] });
          }
        }
        this.cityFilterDropDown.replaceOptions(newCitiesData);
      }
    }
  }]);

  return CompetitorsFlowPage;
}();

window.competitorsFlowPage = new CompetitorsFlowPage();
});

require.register("web/static/js/competitors-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _competitorsPanel = require("../templates/competitors-panel");

var _competitorsPanel2 = _interopRequireDefault(_competitorsPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('competitors-panel', _competitorsPanel2.default);

var CompetitorsPanel = function () {
  function CompetitorsPanel() {
    _classCallCheck(this, CompetitorsPanel);
  }

  _createClass(CompetitorsPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("competitors:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.CompetitorsChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return CompetitorsPanel;
}();

window.competitorsPanel = new CompetitorsPanel();
});

require.register("web/static/js/components/ajax.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _messageDialog = require('./message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AjaxRequest = function () {
  function AjaxRequest() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$url = _ref.url,
        url = _ref$url === undefined ? null : _ref$url,
        _ref$onSuccess = _ref.onSuccess,
        onSuccess = _ref$onSuccess === undefined ? null : _ref$onSuccess,
        _ref$onFailure = _ref.onFailure,
        onFailure = _ref$onFailure === undefined ? null : _ref$onFailure,
        _ref$onLoadOverlayEle = _ref.onLoadOverlayElement,
        onLoadOverlayElement = _ref$onLoadOverlayEle === undefined ? null : _ref$onLoadOverlayEle;

    _classCallCheck(this, AjaxRequest);

    this.url = url;
    this.onSuccess = onSuccess;
    this.onFailure = onFailure;
    this.onLoadOverlayElement = onLoadOverlayElement;
  }

  _createClass(AjaxRequest, [{
    key: 'getParallel',
    value: function getParallel(dataArray, callback) {
      var _this = this;

      var requests = [];
      for (var idx = 0; idx < dataArray.length; idx++) {
        var req = $.ajax({
          type: 'GET',
          url: this.url,
          data: dataArray[idx],
          beforeSend: function beforeSend() {
            return _this.beforeSend();
          }
        });
        requests.push(req);
      }
      $.when.apply(this, requests).done(function () {
        var responses = Array.prototype.slice.call(arguments, 0, requests.length);
        if (requests.length <= 1) {
          callback(responses);
        } else {
          var responseData = responses.map(function (resp) {
            return resp[0];
          });
          callback(responseData);
        }
      }).fail(this.handleError).always(function () {
        return _this.afterSend();
      });
    }
  }, {
    key: 'get',
    value: function get(jsonData, callbackFunction) {
      var _this2 = this;

      $.ajax({
        type: 'GET',
        url: this.url,
        data: jsonData,
        beforeSend: function beforeSend() {
          return _this2.beforeSend();
        }
      }).done(callbackFunction).fail(this.handleError).always(function () {
        return _this2.afterSend();
      });
    }
  }, {
    key: 'postAndRenderPartial',
    value: function postAndRenderPartial(jsonData, containerElement) {
      var _this3 = this;

      $.ajax({
        type: 'POST',
        url: this.url,
        data: jsonData,
        beforeSend: function beforeSend() {
          return _this3.beforeSend();
        }
      }).done(this.renderFunction(containerElement)).fail(this.handleError).always(function () {
        return _this3.afterSend();
      });
    }
  }, {
    key: 'getAndRenderPartial',
    value: function getAndRenderPartial(jsonData, containerElement) {
      var _this4 = this;

      $.ajax({
        type: 'GET',
        url: this.url,
        data: jsonData,
        beforeSend: function beforeSend() {
          return _this4.beforeSend();
        }
      }).done(this.renderFunction(containerElement)).fail(this.handleError).always(function () {
        return _this4.afterSend();
      });
    }
  }, {
    key: 'renderFunction',
    value: function renderFunction(containerElement) {
      var _this5 = this;

      return function (html) {
        containerElement.empty();
        containerElement.html(html);
        if (_this5.onSuccess) {
          _this5.onSuccess(html);
        }
      };
    }
  }, {
    key: 'beforeSend',
    value: function beforeSend(jqXHR, settings) {
      this.addLoadOverlay();
    }
  }, {
    key: 'afterSend',
    value: function afterSend() {
      this.removeLoadOverlay();
    }
  }, {
    key: 'addLoadOverlay',
    value: function addLoadOverlay() {
      if (this.onLoadOverlayElement) {
        var position = this.onLoadOverlayElement.offset();
        this.onLoadOverlayElement.addClass('overlay');
        this.onLoadOverlayElement.parent().append('<div class="loader-container" style="top:' + position.top + 'px;">\n          <div class="loader"></div><p>Loading...</p>\n        </div>');
      }
    }
  }, {
    key: 'removeLoadOverlay',
    value: function removeLoadOverlay() {
      if (this.onLoadOverlayElement) {
        this.onLoadOverlayElement.parent().children(".loader-container").remove();
        this.onLoadOverlayElement.removeClass('overlay');
      }
    }
  }, {
    key: 'handleError',
    value: function handleError(jqXHR, exception) {
      var dialog = new _messageDialog2.default("global-dialog", "danger", "Erro");
      console.log('Error during ajax request. XHR status: ' + jqXHR.status + ', ' + jqXHR.statusText + '. Exception: ' + JSON.stringify(exception));

      if (jqXHR.status === 0) {
        dialog.show('Não há conexão com o servidor. Verifique sua rede');
      } else if (jqXHR.status == 404) {
        dialog.show('Recurso não encontrado no servidor.');
      } else if (jqXHR.status == 500) {
        dialog.show('Ocorreu um erro não esperado.');
      }

      if (this.onFailure) {
        this.onFailure(jqXHR, exception);
      }
    }
  }]);

  return AjaxRequest;
}();

exports.default = AjaxRequest;
;
});

require.register("web/static/js/components/authentication.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Authentication = function () {
  function Authentication() {
    _classCallCheck(this, Authentication);
  }

  _createClass(Authentication, null, [{
    key: "getCurrentUserId",
    value: function getCurrentUserId() {
      var element = $("#panel-main-container");
      return element.length > 0 ? element.attr('data-admin-user-id') : null;
    }
  }]);

  return Authentication;
}();

exports.default = Authentication;
;
});

require.register("web/static/js/components/autocomplete.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Autocomplete = function () {
  function Autocomplete(id, config) {
    var _this = this;

    _classCallCheck(this, Autocomplete);

    this.id = id;
    this.element = $('#' + id);
    this.limit = config.limit || 10;
    this.displayKey = config.displayKey || 'name';
    this.minLength = config.minLength || 3;
    this.url = config.url;
    this.template = config.template || this.basicTemplate();
    this.typeahedConfig = new Bloodhound({
      datumTokenizer: function datumTokenizer(d) {
        return d.tokens;
      },
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      limit: this.limit,
      remote: {
        url: this.url,
        rateLimitWait: 500
      }
    });
    this.typeahedConfig.initialize();
    this.element.typeahead('destroy');
    this.element.typeahead(null, {
      name: this.id,
      displayKey: this.displayKey,
      minLength: this.minLength,
      source: this.typeahedConfig.ttAdapter(),
      templates: {
        suggestion: Handlebars.compile([this.template].join('')),
        notFound: "Nenhum registro encontrado."
      }
    });

    this.onSelect = config.onSelect;

    this.element.on('typeahead:selected', function (ev, json) {
      _this.element.attr('data-ref', json.value);
      if (_this.onSelect) {
        _this.onSelect(ev, json);
      }
    });
  }

  _createClass(Autocomplete, [{
    key: 'basicTemplate',
    value: function basicTemplate() {
      return '\n    <div>\n      <p>{{name}}</p>\n      </div>\n    </div>\n    ';
    }
  }, {
    key: 'disable',
    value: function disable() {
      this.element.prop('disabled', true);
    }
  }, {
    key: 'enable',
    value: function enable() {
      this.element.prop('disabled', false);
    }
  }, {
    key: 'clear',
    value: function clear() {
      this.element.typeahead('val', '');
      this.setSelectedValue('', '');
    }
  }, {
    key: 'setSelectedValue',
    value: function setSelectedValue(name, value) {
      this.element.attr('data-ref', value);
      this.element.typeahead('val', name);
      this.element.typeahead('close');
      this.element.blur();
    }
  }, {
    key: 'getSelectedValue',
    value: function getSelectedValue() {
      return this.element.attr('data-ref');
    }
  }, {
    key: 'getSelectedLabel',
    value: function getSelectedLabel() {
      this.element.val();
    }
  }, {
    key: 'selectedValue',
    get: function get() {
      return this.getSelectedValue();
    }
  }, {
    key: 'selectedLabel',
    get: function get() {
      return this.getSelectedLabel();
    }
  }]);

  return Autocomplete;
}();

exports.default = Autocomplete;
;
});

require.register("web/static/js/components/datatable.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DataTable = function () {
  function DataTable(selector) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, DataTable);

    this.selector = selector;
    this.element = $(selector);
    this.configDataTypes();
    console.log("configDataTypes FINISHED");

    var buttonCustomization = this.getButtonCustomization();
    var baseConfig = {
      paging: config["paging"] || false,
      pageLength: config["pageLength"] || 10,
      info: config["info"] || false,
      searching: config["searching"], // If the config is empty, will default to true
      searchDelay: config['searchDelay'] || 350,
      dom: 'Bfrtip',
      buttons: config["buttons"] || [$.extend(true, {}, buttonCustomization, {
        extend: 'copyHtml5'
      }), $.extend(true, {}, buttonCustomization, {
        extend: 'excelHtml5'
      }), $.extend(true, {}, buttonCustomization, {
        extend: 'pdfHtml5'
      })],
      language: {
        "search": "",
        buttons: {
          copy: 'Copiar',
          copyTitle: 'Copiado para a área de transferência',
          copySuccess: {
            _: '%d linhas copiadas',
            1: '1 linha copiada'
          }
        },
        emptyTable: "Nenhum registro encontrado.",
        paginate: {
          first: 'Primeiro',
          previous: 'Anterior',
          next: 'Próximo',
          last: 'Último'
        }
      }
    };

    if (config["columnDefs"]) {
      baseConfig.columnDefs = config["columnDefs"];
    }

    this.dataTable = this.element.DataTable(baseConfig);

    if (config["order"]) {
      this.dataTable.order(config["order"]);
    }
    this.dataTable.draw();
    $('.dataTables_filter input').attr('placeholder', 'Localizar na tabela...');
    $('.dataTables_filter label').append('<i class="form-control-feedback glyphicon glyphicon-search" aria-hidden="true"></i>');
  }

  _createClass(DataTable, [{
    key: "onFilter",
    value: function onFilter(func) {
      this.dataTable.on('search.dt', func);
    }
  }, {
    key: "getFilteredRows",
    value: function getFilteredRows() {
      return this.dataTable.rows({ filter: 'applied' });
    }

    /**
     * This button customization allows to export custom data formats, as brazilian currency format.
     * More details can be found here: https://datatables.net/extensions/buttons/examples/html5/outputFormat-function.html
     */

  }, {
    key: "getButtonCustomization",
    value: function getButtonCustomization() {
      var instance = this;
      return {
        exportOptions: {
          columns: ':not(.exclude)', // exclude columns with <th class="exclude">
          format: {
            body: function body(data, row, column, node) {
              if (instance.isBrazilianCurrency(data)) {
                return instance.parseBRCurrencyToFloat(data);
              } else if (instance.isBrazilianFormattedNumber(data)) {
                return instance.parseBRNumberToFloat(data);
                //} else if (instance.isBrazilianDate(data)) {
                //return instance.parseBRDateToFloat(data);
              } else {
                return data;
              }
            }
          }
        }
      };
    }
  }, {
    key: "configDataTypes",
    value: function configDataTypes() {
      var _this = this;

      console.log("configDataTypes");
      var instance = this;
      jQuery.fn.dataTableExt.aTypes.unshift(function (sData, settings) {
        if (instance.isBrazilianCurrency(sData)) {
          return 'currency';
        } else if (instance.isBrazilianFormattedNumber(sData)) {
          return 'numbr';
          //} else if (instance.isBrazilianDate(sData)) {
          //return 'brdate';
        } else {
          return null;
        }
      });

      // Configure sorting for brazilian dates (dd/mm/yyyy)
      jQuery.fn.dataTableExt.oSort['brdate-asc'] = function (x, y) {
        console.log("brdate-asc");
        var a = _this.parseBRDateToFloat(x);
        var b = _this.parseBRDateToFloat(y);
        return a <= b ? -1 : 1;
      };

      jQuery.fn.dataTableExt.oSort['brdate-desc'] = function (x, y) {
        console.log("brdate-desc");
        var a = _this.parseBRDateToFloat(x);
        var b = _this.parseBRDateToFloat(y);
        return a > b ? -1 : 1;
      };

      // Configure sorting for brazilian currencies (R$)
      jQuery.fn.dataTableExt.oSort['numbr-asc'] = function (x, y) {
        var a = _this.parseBRNumberToFloat(x);
        var b = _this.parseBRNumberToFloat(y);
        return a <= b ? -1 : 1;
      };

      jQuery.fn.dataTableExt.oSort['numbr-desc'] = function (x, y) {
        var a = _this.parseBRNumberToFloat(x);
        var b = _this.parseBRNumberToFloat(y);
        return a > b ? -1 : 1;
      };

      // Configure sorting for brazilian formatted numbers
      jQuery.fn.dataTableExt.oSort['currency-asc'] = function (x, y) {
        var a = _this.parseBRCurrencyToFloat(x);
        var b = _this.parseBRCurrencyToFloat(y);
        return a <= b ? -1 : 1;
      };

      jQuery.fn.dataTableExt.oSort['currency-desc'] = function (x, y) {
        var a = _this.parseBRCurrencyToFloat(x);
        var b = _this.parseBRCurrencyToFloat(y);
        return a > b ? -1 : 1;
      };
    }
  }, {
    key: "isBrazilianCurrency",
    value: function isBrazilianCurrency(str) {
      return str.indexOf('R$') >= 0;
    }
  }, {
    key: "isBrazilianDate",
    value: function isBrazilianDate(str) {
      return str.indexOf('/') >= 0;
    }
  }, {
    key: "isBrazilianFormattedNumber",
    value: function isBrazilianFormattedNumber(str) {
      var numberFormatRegex = /\d+(\.\d{3})*\,\d+/g;
      return str.match(numberFormatRegex);
    }
  }, {
    key: "parseBRCurrencyToFloat",
    value: function parseBRCurrencyToFloat(x) {
      return this.parseBRNumberToFloat(x.replace('R$', '').replace('&nbsp;', ''));
    }
  }, {
    key: "parseBRDateToFloat",
    value: function parseBRDateToFloat(x) {
      var parts = x.split('/');
      return parseFloat("" + parts[2] + parts[1] + parts[0]);
    }
  }, {
    key: "parseBRNumberToFloat",
    value: function parseBRNumberToFloat(x) {
      var num = x.replace(/<.+?>/g, '').replace(/\./g, '').replace(',', '.');
      return parseFloat(num);
    }
  }]);

  return DataTable;
}();

exports.default = DataTable;
});

;require.register("web/static/js/components/datepicker.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DatePicker = function () {
  function DatePicker(id) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, DatePicker);

    this.element = $("#" + id);
    this.config = config;
    if (!config["dateFormat"]) {
      config["dateFormat"] = "dd/mm/yy";
    }
    config.constrainInput = true;
    this.element.datepicker(this.config);
  }

  _createClass(DatePicker, [{
    key: "setDate",
    value: function setDate(date) {
      this.element.datepicker("setDate", date);
    }
  }, {
    key: "getValue",
    value: function getValue() {
      return this.element.datepicker().val();
    }
  }]);

  return DatePicker;
}();

exports.default = DatePicker;
});

;require.register("web/static/js/components/dropdown.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Dropdown = function () {
  function Dropdown(id, onSelect) {
    _classCallCheck(this, Dropdown);

    this.selector = "#" + id;
    this.onSelect = onSelect;

    this.updateResponsiveness();
    this.setSelectedValue(this.getSelectedValue());
  }

  _createClass(Dropdown, [{
    key: "updateResponsiveness",
    value: function updateResponsiveness() {
      var _this = this;

      $(this.selector + " a").on('click', function (e) {
        e.preventDefault();
        _this.updateSelection($(e.target));
      });
    }
  }, {
    key: "setSelectedValue",
    value: function setSelectedValue(value) {
      var selection = $(this.selector + (" a[data-ref=" + value + "]"));
      if (selection.size() > 0) this.updateSelection(selection);else console.log("Item not found for value: " + value);
    }
  }, {
    key: "getSelectedValue",
    value: function getSelectedValue() {
      return $(this.selector).attr('data-ref');
    }
  }, {
    key: "updateSelection",
    value: function updateSelection(element) {
      $(this.selector + " span.flex-grow").html(element.text());
      $(this.selector).attr('data-ref', element.attr('data-ref'));
      if (this.onSelect) {
        this.onSelect(this.getSelectedValue());
      }
    }
  }, {
    key: "replaceOptions",
    value: function replaceOptions(data) {
      var dropdownList = $(this.selector + " ul");
      dropdownList.empty();
      for (var i = 0, len = data.length; i < len; i++) {
        var newElement = "<li><a href=\"#!\" data-ref=\"" + data[i].value + "\">" + data[i].label + "</a></li>";
        dropdownList.append(newElement);
      }
      this.setSelectedValue(data[0].value);
      this.updateResponsiveness();
    }
  }]);

  return Dropdown;
}();

exports.default = Dropdown;
;
});

require.register("web/static/js/components/educationGroupAutocomplete.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _autocomplete = require("./autocomplete");

var _autocomplete2 = _interopRequireDefault(_autocomplete);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EducationGroupAutocomplete = function (_Autocomplete) {
  _inherits(EducationGroupAutocomplete, _Autocomplete);

  function EducationGroupAutocomplete(id) {
    _classCallCheck(this, EducationGroupAutocomplete);

    return _possibleConstructorReturn(this, (EducationGroupAutocomplete.__proto__ || Object.getPrototypeOf(EducationGroupAutocomplete)).call(this, id, {
      displayKey: name,
      url: '/api/education_group/name?q=%QUERY'
    }));
  }

  return EducationGroupAutocomplete;
}(_autocomplete2.default);

exports.default = EducationGroupAutocomplete;
});

;require.register("web/static/js/components/gauge-chart.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GaugeChart = function () {
  function GaugeChart(id, config) {
    _classCallCheck(this, GaugeChart);

    this.id = id;
    this.chart = Highcharts.chart(this.id, {
      chart: {
        type: 'gauge',
        backgroundColor: "rgba(255, 255, 255, 0)",
        plotBackgroundColor: null,
        plotBackgroundImage: null,
        plotBorderWidth: 0,
        plotShadow: false
      },

      credits: {
        enabled: false
      },

      title: {
        text: config.title,
        style: {
          color: "#c2c9cb",
          fontSize: "18px"
        }
      },

      pane: {
        startAngle: -150,
        endAngle: 150,
        background: [{
          backgroundColor: {
            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
            stops: [[0, '#FFF'], [1, '#333']]
          },
          borderWidth: 0,
          outerRadius: '109%'
        }, {
          backgroundColor: {
            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
            stops: [[0, '#333'], [1, '#FFF']]
          },
          borderWidth: 1,
          outerRadius: '107%'
        }, {
          // default background
        }, {
          backgroundColor: '#DDD',
          borderWidth: 0,
          outerRadius: '105%',
          innerRadius: '103%'
        }]
      },

      // the value axis
      yAxis: {
        min: 0,
        max: 200,

        minorTickInterval: 'auto',
        minorTickWidth: 1,
        minorTickLength: 10,
        minorTickPosition: 'inside',
        minorTickColor: '#666',

        tickPixelInterval: 30,
        tickWidth: 2,
        tickPosition: 'inside',
        tickLength: 10,
        tickColor: '#666',
        labels: {
          step: 2,
          rotation: 'auto'
        },
        title: {
          text: config.innerTitle || "% " + config.title
        },
        plotBands: [{
          from: 0,
          to: 100,
          color: '#DF5353' // green
        }, {
          from: 100,
          to: 200,
          color: '#55BF3B' // yellow
        }]
      },
      series: [{
        name: config.title,
        data: [0],
        tooltip: {
          valueSuffix: config.tooltip
        }
      }]
    });
  }

  _createClass(GaugeChart, [{
    key: "getSeries",
    value: function getSeries(index) {
      return this.chart.series[index];
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.chart.destroy();
    }
  }]);

  return GaugeChart;
}();

exports.default = GaugeChart;
;
});

require.register("web/static/js/components/message-dialog.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MessageDialog = function () {
  function MessageDialog(id) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "info";
    var title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";

    _classCallCheck(this, MessageDialog);

    this.id = id;
    this.type = type;
    this.title = title;
    this.element = $("#" + id);
    this.alert = $("#" + this.id + " .alert");
    this.modalBody = $("#" + this.id + " .modal-body");
    this.modalTitle = $("#" + this.id + " .modal-title");
  }

  _createClass(MessageDialog, [{
    key: "show",
    value: function show(message) {
      this.setMessage(message);
      this.setTitle(this.title);
      this.element.modal('show');
    }
  }, {
    key: "showMany",
    value: function showMany(messages) {
      this.show(messages.join('<br/>'));
    }
  }, {
    key: "setMessage",
    value: function setMessage(message) {
      this.modalBody.html("<div class=\"alert alert-" + this.type + "\" role=\"alert\">" + message + "</div>");
    }
  }, {
    key: "setTitle",
    value: function setTitle(title) {
      this.modalTitle.html(title);
    }
  }]);

  return MessageDialog;
}();

exports.default = MessageDialog;
;
});

require.register("web/static/js/components/navbar.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var NavBar = function () {
  function NavBar() {
    _classCallCheck(this, NavBar);

    this.setActiveLink();
    this.fixNavBarOnScroll();
    this.fixNavbarOverlapInMobile();
  }

  _createClass(NavBar, [{
    key: 'fixNavBarOnScroll',
    value: function fixNavBarOnScroll() {
      $(window).scroll(function () {
        var $body = $('body');
        var $navbar = $('.navbar');

        if ($(window).scrollTop() >= 65) {
          if (!$navbar.hasClass('navbar-fixed-top')) {
            $('header').css('visibility', 'hidden');
            $navbar.addClass('navbar-fixed-top');
            $('body').css('padding-top', '64px');
          }
        } else if ($(window).scrollTop() < 1) {
          $navbar.removeClass('navbar-fixed-top');
          $('header').css('visibility', 'visible');
          $('body').css('padding-top', '0px');
        }
      });
    }
  }, {
    key: 'fixNavbarOverlapInMobile',
    value: function fixNavbarOverlapInMobile() {
      $("#js-navbar-button").on("click", function () {
        $('.navbar').addClass('navbar-fixed-top');
      });
    }
  }, {
    key: 'setActiveLink',
    value: function setActiveLink() {
      $(".navbar__link, .navbar__dropdown__link").each(function () {
        var linkAddress = $(this).attr('href');
        var currentAddress = window.location.toString();

        if (currentAddress.indexOf(linkAddress) >= 0) {
          $(this).closest(".navbar__item").addClass('active');
        }
      });
    }
  }]);

  return NavBar;
}();

exports.default = NavBar;
});

;require.register("web/static/js/components/simple-chart.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_COLOR = "#18ACC4";
var WHITE_COLOR = "#FFFFFF";
var BLACK_COLOR = "#000000";

var SimpleChart = function () {
  function SimpleChart(id, config) {
    _classCallCheck(this, SimpleChart);

    this.id = id;
    this.chart = Highcharts.chart(this.id, {
      chart: {
        type: config.type,
        backgroundColor: "rgba(255, 255, 255, 0)"
      },
      title: {
        text: ''
      },
      legend: {
        enabled: true,
        itemStyle: {
          color: "#EEE"
        }
      },
      credits: {
        enabled: false
      },
      pane: {
        center: ['50%', '85%'],
        size: '100%',
        startAngle: -90,
        endAngle: 90,
        background: {
          backgroundColor: Highcharts.theme && Highcharts.theme.background2 || '#EEE',
          innerRadius: '60%',
          outerRadius: '90%',
          shape: 'arc'
        }
      },
      xAxis: {
        categories: config.xAxisLabels,
        labels: {
          style: {
            color: WHITE_COLOR,
            fontSize: '15px'
          }
        },
        title: {
          style: {
            color: "#00FF0"
          }
        }
      },
      yAxis: {
        min: 0,
        labels: {
          style: {
            color: WHITE_COLOR,
            fontSize: '15px'
          }
        },
        title: '',
        gridLineColor: "#7D8C93"
      },
      plotOptions: {
        solidgauge: {
          dataLabels: {
            y: 5,
            borderWidth: 0,
            useHTML: true
          }
        },
        column: {
          dataLabels: {
            enabled: true,
            crop: false,
            overflow: 'none',
            color: WHITE_COLOR
          },
          color: DEFAULT_COLOR,
          borderWidth: 0
        },
        line: {
          color: DEFAULT_COLOR
        }
      },
      series: config.series,
      navigation: {
        buttonOptions: {
          text: "EXPORT"
        }
      },
      exporting: {
        chartOptions: {
          title: {
            text: config.title,
            color: BLACK_COLOR
          },
          plotOptions: {
            series: {
              dataLabels: {
                color: BLACK_COLOR
              }
            }
          },
          xAxis: {
            labels: {
              style: {
                color: BLACK_COLOR
              }
            },
            title: {
              style: {
                color: BLACK_COLOR
              }
            }
          },
          yAxis: {
            min: 0,
            labels: {
              style: {
                color: BLACK_COLOR
              }
            }
          }
        }
      }
    });
  }

  _createClass(SimpleChart, [{
    key: "getSeries",
    value: function getSeries(index) {
      return this.chart.series[index];
    }
  }]);

  return SimpleChart;
}();

exports.default = SimpleChart;
;
});

require.register("web/static/js/components/solid-gauge-chart.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SolidGaugeChart = function () {
  function SolidGaugeChart(id, config) {
    _classCallCheck(this, SolidGaugeChart);

    this.id = id;
    this.chart = Highcharts.chart(this.id, {
      chart: {
        type: 'solidgauge',
        backgroundColor: "rgba(255, 255, 255, 0)"
      },
      credits: {
        enabled: false
      },
      title: "",
      pane: {
        center: ['50%', '85%'],
        size: '100%',
        startAngle: -90,
        endAngle: 90,
        background: {
          backgroundColor: Highcharts.theme && Highcharts.theme.background2 || '#EEE',
          innerRadius: '60%',
          outerRadius: '100%',
          shape: 'arc'
        }
      },
      yAxis: {
        min: 0,
        max: 100,
        title: {
          y: -170,
          text: config.title,
          style: {
            color: "#c2c9cb"
          }
        },
        stops: [[0.1, '#55BF3B'], // green
        [0.5, '#DDDF0D'], // yellow
        [0.9, '#DF5353'] // red
        ],
        lineWidth: 0,
        minorTickInterval: null,
        tickAmount: 2,
        labels: {
          y: 16
        }
      },

      plotOptions: {
        solidgauge: {
          dataLabels: {
            y: 5,
            borderWidth: 0,
            useHTML: true
          }
        }
      },
      series: [{
        name: config.tooltip || "",
        data: [],
        dataLabels: {
          format: '<div style="text-align:center"><span style="font-size:25px;color:' + (Highcharts.theme && Highcharts.theme.contrastTextColor || '#c2c9cb') + '">{y:.1f}</span></div>'
        },
        tooltip: {
          valueSuffix: ' %'
        }
      }]
    });
  }

  _createClass(SolidGaugeChart, [{
    key: "getSeries",
    value: function getSeries(index) {
      return this.chart.series[index];
    }
  }]);

  return SolidGaugeChart;
}();

exports.default = SolidGaugeChart;
;
});

require.register("web/static/js/components/universityAutocomplete.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _autocomplete = require("./autocomplete");

var _autocomplete2 = _interopRequireDefault(_autocomplete);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UniversityAutocomplete = function (_Autocomplete) {
  _inherits(UniversityAutocomplete, _Autocomplete);

  function UniversityAutocomplete(id) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, UniversityAutocomplete);

    config["displayKey"] = name;
    config["url"] = '/api/university/name?q=%QUERY';
    return _possibleConstructorReturn(this, (UniversityAutocomplete.__proto__ || Object.getPrototypeOf(UniversityAutocomplete)).call(this, id, config));
  }

  _createClass(UniversityAutocomplete, [{
    key: "basicTemplate",
    value: function basicTemplate() {
      return "\n    <div>\n      <p>{{value}} - {{name}}</p>\n      </div>\n    </div>\n    ";
    }
  }]);

  return UniversityAutocomplete;
}(_autocomplete2.default);

exports.default = UniversityAutocomplete;
});

;require.register("web/static/js/components/universityFilter.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _autocomplete = require("./autocomplete");

var _autocomplete2 = _interopRequireDefault(_autocomplete);

var _educationGroupAutocomplete = require("./educationGroupAutocomplete");

var _educationGroupAutocomplete2 = _interopRequireDefault(_educationGroupAutocomplete);

var _universityAutocomplete = require("./universityAutocomplete");

var _universityAutocomplete2 = _interopRequireDefault(_universityAutocomplete);

var _dropdown = require("./dropdown");

var _dropdown2 = _interopRequireDefault(_dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Filter composed by a select box, an university autocomplete and an education group autocomplete,
 * used to select one or more universities.
 *
 * It MUST be used together with the `university-filter.html.eex` template file
 */
var UniversityFilter = function () {
  function UniversityFilter() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, UniversityFilter);

    this.subject = config['subject'] || '';

    this.universityAutocomplete = new _universityAutocomplete2.default(this._idFor('university-autocomplete'));
    this.educationGroupAutocomplete = new _educationGroupAutocomplete2.default(this._idFor('education-group-autocomplete'));
    this.universityTypeDropdown = new _dropdown2.default(this._idFor('university-filter-type'), this.onSelectFilterType.bind(this));
    this.afterInitialSelection = config.afterInitialSelection;
  }

  _createClass(UniversityFilter, [{
    key: "loadInitialValues",
    value: function loadInitialValues() {
      var universityId = this.getElement('initial-university-id').val().nullIfBlank();
      if (universityId) {
        var universityName = this.getElement('initial-university-name').val();
        this.universityAutocomplete.setSelectedValue(universityName, universityId);
        this._fireSelectionEvent();
      }

      var groupId = this.getElement('initial-education-group-id').val().nullIfBlank();
      if (groupId && !universityId) {
        // only execute for educational group if we don't have a university set.
        var groupName = this.getElement('initial-education-group-name').val();
        this.educationGroupAutocomplete.setSelectedValue(groupName, groupId);
        this._fireSelectionEvent();
      }
    }
  }, {
    key: "onSelectFilterType",
    value: function onSelectFilterType(newType) {
      this.hideFilters();

      if (newType === 'education_group') {
        this.getElement('education-group-autocomplete').val('');
        this.educationGroupAutocomplete.enable();
        this.getElement('education-group-filter').show();
        this.getElement('education-group-autocomplete').focus();
      } else if (newType === 'university') {
        this.getElement('university-autocomplete').val('');
        this.universityAutocomplete.enable();
        this.getElement('university-filter').show();
        this.getElement('university-autocomplete').focus();
      } else {
        // for other types of filter, just show the university autocomplete disabled to fill the spaces.
        this.getElement('university-autocomplete').val('');
        this.getElement('university-filter').show();
      }
    }
  }, {
    key: "hideFilters",
    value: function hideFilters() {
      this.getElement('university-filter').hide();
      this.getElement('education-group-filter').hide();
      this.universityAutocomplete.disable();
      this.universityAutocomplete.clear();
      this.educationGroupAutocomplete.disable();
      this.educationGroupAutocomplete.clear();
    }
  }, {
    key: "_fireSelectionEvent",
    value: function _fireSelectionEvent() {
      if (this.afterInitialSelection) this.afterInitialSelection();
    }
  }, {
    key: "_idFor",
    value: function _idFor(fieldName) {
      var subjectWithDash = this.subject.length > 0 ? this.subject + "-" : "";
      return "" + subjectWithDash + fieldName;
    }
  }, {
    key: "getElement",
    value: function getElement(fieldName) {
      return $("#" + this._idFor(fieldName));
    }
  }]);

  return UniversityFilter;
}();

exports.default = UniversityFilter;
});

;require.register("web/static/js/components/vue-charts/bar-chart.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vueChartjs = require('vue-chartjs');

exports.default = {
  extends: _vueChartjs.Bar,
  props: ['data', 'options'],
  mounted: function mounted() {
    this.renderChart(this.data, this.options);
  },

  methods: {
    updateChart: function updateChart() {
      this.$data._chart.destroy();
      this.renderChart(this.data, this.options);
    }
  },
  watch: {
    data: {
      handler: function handler(value) {
        this.updateChart();
      }
    }
  }
};
});

require.register("web/static/js/components/vue-charts/line-chart.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vueChartjs = require('vue-chartjs');

exports.default = {
  extends: _vueChartjs.Line,
  props: ['data', 'options'],
  mounted: function mounted() {
    this.renderChart(this.data, this.options);
  },

  methods: {
    updateChart: function updateChart() {
      this.$data._chart.destroy();
      this.renderChart(this.data, this.options);
    }
  },
  watch: {
    data: {
      handler: function handler(value) {
        this.updateChart();
      }
    }
  }
};
});

require.register("web/static/js/components/vue-charts/scatter-chart.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vueChartjs = require('vue-chartjs');

exports.default = {
  extends: _vueChartjs.Scatter,
  props: ['data', 'options'],
  mounted: function mounted() {
    this.renderChart(this.data, this.options);
  },

  methods: {
    updateChart: function updateChart() {
      this.$data._chart.destroy();
      this.renderChart(this.data, this.options);
    }
  },
  watch: {
    data: {
      handler: function handler(value) {
        this.updateChart();
      }
    }
  }
};
});

require.register("web/static/js/courses-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _coursesPanel = require("../templates/courses-panel");

var _coursesPanel2 = _interopRequireDefault(_coursesPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('courses-panel', _coursesPanel2.default);

var CoursesPanel = function () {
  function CoursesPanel() {
    _classCallCheck(this, CoursesPanel);
  }

  _createClass(CoursesPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("courses:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.CoursesChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return CoursesPanel;
}();

window.coursesPanel = new CoursesPanel();
});

require.register("web/static/js/cpfs-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _cpfsPanel = require("../templates/cpfs-panel");

var _cpfsPanel2 = _interopRequireDefault(_cpfsPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('cpfs-panel', _cpfsPanel2.default);

var CpfsPanel = function () {
  function CpfsPanel() {
    _classCallCheck(this, CpfsPanel);
  }

  _createClass(CpfsPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("cpfs:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.CpfsChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return CpfsPanel;
}();

window.cpfsPanel = new CpfsPanel();
});

require.register("web/static/js/crawler-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _crawlerPanel = require("../templates/crawler-panel");

var _crawlerPanel2 = _interopRequireDefault(_crawlerPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('crawler-panel', _crawlerPanel2.default);

var CrawlerPanel = function () {
  function CrawlerPanel() {
    _classCallCheck(this, CrawlerPanel);
  }

  _createClass(CrawlerPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("crawler:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.CrawlerChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return CrawlerPanel;
}();

window.crawlerPanel = new CrawlerPanel();
});

require.register("web/static/js/dashboard-app.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dashboard = require("../templates/dashboard");

var _dashboard2 = _interopRequireDefault(_dashboard);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('dashboard', _dashboard2.default);

var DashboardApp = function () {
  function DashboardApp() {
    _classCallCheck(this, DashboardApp);
  }

  _createClass(DashboardApp, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("dashboard:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.DashboardChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return DashboardApp;
}();

window.dashboardApp = new DashboardApp();
});

require.register("web/static/js/demand-curves.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _demandCurves = require("../templates/demand-curves");

var _demandCurves2 = _interopRequireDefault(_demandCurves);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('demand-curves', _demandCurves2.default);

var DemandCurvesPanel = function () {
  function DemandCurvesPanel() {
    _classCallCheck(this, DemandCurvesPanel);
  }

  _createClass(DemandCurvesPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("demand_curves:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.DemandCurvesChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return DemandCurvesPanel;
}();

window.demandCurvesPanel = new DemandCurvesPanel();
});

require.register("web/static/js/farm-campaign.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _farmCampaign = require("../templates/farm-campaign");

var _farmCampaign2 = _interopRequireDefault(_farmCampaign);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('farm-campaign', _farmCampaign2.default);

var FarmCampaignPanel = function () {
  function FarmCampaignPanel() {
    _classCallCheck(this, FarmCampaignPanel);
  }

  _createClass(FarmCampaignPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("farm_campaign:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.FarmCampaignChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return FarmCampaignPanel;
}();

window.farmCampaign = new FarmCampaignPanel();
});

require.register("web/static/js/farm-key-accounts.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _farmKeyAccounts = require("../templates/farm-key-accounts");

var _farmKeyAccounts2 = _interopRequireDefault(_farmKeyAccounts);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('farm-key-accounts', _farmKeyAccounts2.default);

var FarmKeyAccounts = function () {
  function FarmKeyAccounts() {
    _classCallCheck(this, FarmKeyAccounts);
  }

  _createClass(FarmKeyAccounts, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("farm_key_accounts:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.FarmKeyAccountChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return FarmKeyAccounts;
}();

window.farmKeyAccounts = new FarmKeyAccounts();
});

require.register("web/static/js/farm-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datatable = require("./components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _gaugeChart = require("./components/gauge-chart");

var _gaugeChart2 = _interopRequireDefault(_gaugeChart);

var _solidGaugeChart = require("./components/solid-gauge-chart");

var _solidGaugeChart2 = _interopRequireDefault(_solidGaugeChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FarmPanelPage = function () {
  function FarmPanelPage() {
    _classCallCheck(this, FarmPanelPage);
  }

  _createClass(FarmPanelPage, [{
    key: "setup",
    value: function setup() {
      this.setupDataTable();

      this.farmChart = new _gaugeChart2.default('time-chart-farmer', {
        title: 'Farm',
        tooltip: ' % de parcerias'
      });
      this.captureChart = new _solidGaugeChart2.default('daily-contributions', {
        title: 'Captação',
        tooltip: 'Captação - Graduação'
      });

      this.setContributionChartData();
      this.recalculateTotals();
    }
  }, {
    key: "setContributionChartData",
    value: function setContributionChartData() {
      var dailyContributionsData = $("#daily-contributions-data").val();
      this.captureChart.getSeries(0).setData([eval(dailyContributionsData)]);
    }
  }, {
    key: "setupDataTable",
    value: function setupDataTable() {
      this.table = new _datatable2.default('#report-table', {
        paging: true,
        deferRender: true,
        searchDelay: 500,
        pageLength: 10,
        order: [9, 'desc']
      });
      var instance = this;
      this.table.onFilter(function () {
        // wait some time before the user stop typing.
        setTimeout(function () {
          instance.recalculateTotals();
        }, 300);
      });
    }
  }, {
    key: "recalculateTotals",
    value: function recalculateTotals() {
      var newPercent = 0;
      var nRows = this.table.getFilteredRows().nodes().length;
      if (nRows > 0) {
        var filteredData = this.table.getFilteredRows().data();

        var realized = 0;
        var movel_goal = 0;
        for (var i = 0; i < nRows; i++) {
          movel_goal += filteredData[i][10].parseMoney();
          realized += filteredData[i][11].parseMoney();
        }

        $("#mobile-goal").text(movel_goal.formatMoney(2));
        $("#total-realized").text(realized.formatMoney(2));

        newPercent = parseFloat((realized / movel_goal * 100).toFixed(2));
        console.log(newPercent);
      }

      this.farmChart.getSeries(0).setData([]);
      this.farmChart.getSeries(0).addPoint(newPercent);
    }
  }]);

  return FarmPanelPage;
}();

window.farmPanelPage = new FarmPanelPage();
});

require.register("web/static/js/farm-quality-owners.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _farmKeyAccounts = require("../templates/farm-key-accounts");

var _farmKeyAccounts2 = _interopRequireDefault(_farmKeyAccounts);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('farm-key-accounts', _farmKeyAccounts2.default);

var FarmQualityOwners = function () {
  function FarmQualityOwners() {
    _classCallCheck(this, FarmQualityOwners);
  }

  _createClass(FarmQualityOwners, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("farm_key_accounts:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.FarmKeyAccountChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return FarmQualityOwners;
}();

window.farmQualityOwners = new FarmQualityOwners();
});

require.register("web/static/js/farm-ranking.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _farmRankingPanel = require("../templates/farm-ranking-panel");

var _farmRankingPanel2 = _interopRequireDefault(_farmRankingPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('farm-ranking-panel', _farmRankingPanel2.default);

var FarmRankingPanel = function () {
  function FarmRankingPanel() {
    _classCallCheck(this, FarmRankingPanel);
  }

  _createClass(FarmRankingPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("farm_ranking:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.FarmRankingChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return FarmRankingPanel;
}();

window.farmRankingPanel = new FarmRankingPanel();
});

require.register("web/static/js/farm-universities.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _farmUniversities = require("../templates/farm-universities");

var _farmUniversities2 = _interopRequireDefault(_farmUniversities);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('farm-universities', _farmUniversities2.default);

var FarmUniversities = function () {
  function FarmUniversities() {
    _classCallCheck(this, FarmUniversities);
  }

  _createClass(FarmUniversities, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("farm_universities:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.FarmUniversitiesChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return FarmUniversities;
}();

window.farmUniversities = new FarmUniversities();
});

require.register("web/static/js/foe-stock.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datatable = require("./components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _gaugeChart = require("./components/gauge-chart");

var _gaugeChart2 = _interopRequireDefault(_gaugeChart);

var _solidGaugeChart = require("./components/solid-gauge-chart");

var _solidGaugeChart2 = _interopRequireDefault(_solidGaugeChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var FoeStockPage = function () {
  function FoeStockPage() {
    _classCallCheck(this, FoeStockPage);
  }

  _createClass(FoeStockPage, [{
    key: "setup",
    value: function setup() {
      this.setupDataTable();
    }
  }, {
    key: "setupDataTable",
    value: function setupDataTable() {
      this.table = new _datatable2.default('#report-table', {
        paging: true,
        deferRender: true,
        searchDelay: 100,
        pageLength: 10,
        order: [[0, 'asc'], [1, 'asc'], [4, 'asc']]
      });
    }
  }]);

  return FoeStockPage;
}();

window.foeStockPage = new FoeStockPage();
});

require.register("web/static/js/funnel-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _funnelPanel = require("../templates/funnel-panel");

var _funnelPanel2 = _interopRequireDefault(_funnelPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('funnel-panel', _funnelPanel2.default);

var FunnelPanel = function () {
  function FunnelPanel() {
    _classCallCheck(this, FunnelPanel);
  }

  _createClass(FunnelPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("funnel_panel:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.FunnelChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return FunnelPanel;
}();

window.funnelPanel = new FunnelPanel();
});

require.register("web/static/js/ies-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _iesPanel = require("../templates/ies-panel");

var _iesPanel2 = _interopRequireDefault(_iesPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('ies-panel', _iesPanel2.default);

var IesPanel = function () {
  function IesPanel() {
    _classCallCheck(this, IesPanel);
  }

  _createClass(IesPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("ies:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.IesChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return IesPanel;
}();

window.iesPanel = new IesPanel();
});

require.register("web/static/js/ies-stats.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _iesStats = require("../templates/ies-stats");

var _iesStats2 = _interopRequireDefault(_iesStats);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('ies-stats', _iesStats2.default);

var IesStats = function () {
  function IesStats() {
    _classCallCheck(this, IesStats);
  }

  _createClass(IesStats, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("ies_stats:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.IesStatsChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return IesStats;
}();

window.iesStats = new IesStats();
});

require.register("web/static/js/import-university-goals.js", function(exports, require, module) {
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datatable = require('./components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var COLUMNS = ['period', 'university_id', 'product_line_id', 'value', 'present', 'current_value'];

var importUniversityGoals = function () {
  function importUniversityGoals() {
    _classCallCheck(this, importUniversityGoals);
  }

  _createClass(importUniversityGoals, [{
    key: 'setup',
    value: function setup() {
      this.preprocessPath = $('.js-preprocess-path').val();
      this.importPath = $('.js-import-path').val();
      this.fileInput = $('.js-file-input');
      this.submitButton = $('.js-submit-button');
      this.goalsTableWrapper = $('.js-goals-table-wrapper');
      this.disableSubmitButton();
      this.setupProcessFile();
      this.setupImportFile();
    }
  }, {
    key: 'setupProcessFile',
    value: function setupProcessFile() {
      var _this = this;

      this.fileInput.on('change', function (e) {
        _this.deleteGoalsTable();
        if (_this.verifyFile()) {
          alert('O arquivo foi enviado e está sendo pré-processado, aguarde para conferir e confirmar a importação.');
          _this.preprocessFile();
        } else {
          _this.clearFile();
          _this.disableSubmitButton();
          alert('Selecione um arquivo csv');
        }
      });
    }
  }, {
    key: 'setupImportFile',
    value: function setupImportFile() {
      var _this2 = this;

      this.submitButton.on('click', function (e) {
        _this2.disableSubmitButton();
        alert('O arquivo foi enviado e está sendo importado, aguarde.');
        _this2.getEncodedFile(function (encodedFile) {
          $.ajax({
            url: _this2.importPath,
            type: 'POST',
            data: { file: encodedFile },
            beforeSend: function beforeSend(xhr) {
              xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
            },
            success: function success(data) {
              alert('Metas importadas com sucesso, ' + data + ' novos valores');
            },
            error: function error(_error) {
              alert('Erro na importação');
            }
          });
        });
      });
    }
  }, {
    key: 'verifyFile',
    value: function verifyFile() {
      var filename = this.fileInput.val();
      var fileExtension = filename.split('.').pop();
      return fileExtension === 'csv';
    }
  }, {
    key: 'preprocessFile',
    value: function preprocessFile() {
      var _this3 = this;

      this.getEncodedFile(function (encodedFile) {
        $.ajax({
          url: _this3.preprocessPath,
          type: 'POST',
          data: { file: encodedFile },
          beforeSend: function beforeSend(xhr) {
            xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
          },
          success: function success(data) {
            _this3.enableSubmitButton();
            _this3.createGoalsTable(data);
          },
          error: function error(_error2) {
            _this3.clearFile();
            _this3.disableSubmitButton();
            alert('Ocorreu um erro com a leitura do arquivo\n' + _error2.responseJSON.error);
          }
        });
      });
    }
  }, {
    key: 'getEncodedFile',
    value: function getEncodedFile(onLoad) {
      var file = this.fileInput[0].files[0];
      var reader = new FileReader();
      reader.onload = function () {
        var encodedFile = reader.result.split(',')[1];
        onLoad(encodedFile);
      };
      reader.readAsDataURL(file);
    }
  }, {
    key: 'clearFile',
    value: function clearFile() {
      this.fileInput.val('');
    }
  }, {
    key: 'disableSubmitButton',
    value: function disableSubmitButton() {
      this.submitButton.prop('disabled', true);
    }
  }, {
    key: 'enableSubmitButton',
    value: function enableSubmitButton() {
      this.submitButton.prop('disabled', false);
    }
  }, {
    key: 'createGoalsTable',
    value: function createGoalsTable(data) {
      this.goalsTable = $('<table></table>');
      this.goalsTable.addClass('data-table');
      this.goalsTable.addClass('js-goals-table');
      this.goalsTableWrapper.append(this.goalsTable);
      this.createTableHeaders();
      this.createTableBody(data);
      this.setupDataTable();
    }
  }, {
    key: 'deleteGoalsTable',
    value: function deleteGoalsTable(data) {
      this.goalsTableWrapper.empty();
      this.goalsTable = null;
    }
  }, {
    key: 'createTableHeaders',
    value: function createTableHeaders() {
      var tableHead = $('<thead></thead>');
      var headRow = $('<tr></tr>');
      tableHead.append(headRow);
      $.each(COLUMNS, function (index, header) {
        headRow.append($('<th></th>').text(header));
      });
      this.goalsTable.append(tableHead);
    }
  }, {
    key: 'createTableBody',
    value: function createTableBody(data) {
      var tableBody = $('<tbody></tbody>');
      $.each(data, function (index, rowData) {
        var tableRow = $('<tr></tr>');
        $.each(COLUMNS, function (index, column) {
          tableRow.append($('<td></td>').text(rowData[column]));
        });
        tableBody.append(tableRow);
      });
      this.goalsTable.append(tableBody);
    }
  }, {
    key: 'setupDataTable',
    value: function setupDataTable() {
      this.table = new _datatable2.default('.js-goals-table', {
        paging: false,
        searching: false,
        deferRender: true,
        buttons: [],
        order: []
      });
    }
  }]);

  return importUniversityGoals;
}();

window.importUniversityGoals = new importUniversityGoals();
});

require.register("web/static/js/inep-entrants.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _inepEntrants = require("../templates/inep-entrants");

var _inepEntrants2 = _interopRequireDefault(_inepEntrants);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('inep-entrants', _inepEntrants2.default);

var InepEntrants = function () {
  function InepEntrants() {
    _classCallCheck(this, InepEntrants);
  }

  _createClass(InepEntrants, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("inep:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.InepChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return InepEntrants;
}();

window.inepEntrants = new InepEntrants();
});

require.register("web/static/js/inep-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _inepPanel = require("../templates/inep-panel");

var _inepPanel2 = _interopRequireDefault(_inepPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('inep-panel', _inepPanel2.default);

var InepPanel = function () {
  function InepPanel() {
    _classCallCheck(this, InepPanel);
  }

  _createClass(InepPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("inep_panel:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.InepPanelChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return InepPanel;
}();

window.inepPanel = new InepPanel();
});

require.register("web/static/js/inep-share.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _inepShare = require("../templates/inep-share");

var _inepShare2 = _interopRequireDefault(_inepShare);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('inep-share', _inepShare2.default);

var InepShare = function () {
  function InepShare() {
    _classCallCheck(this, InepShare);
  }

  _createClass(InepShare, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("inep:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.InepChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return InepShare;
}();

window.inepShare = new InepShare();
});

require.register("web/static/js/key-accounts.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datatable = require("./components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _gaugeChart = require("./components/gauge-chart");

var _gaugeChart2 = _interopRequireDefault(_gaugeChart);

var _solidGaugeChart = require("./components/solid-gauge-chart");

var _solidGaugeChart2 = _interopRequireDefault(_solidGaugeChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var KeyAccountsPanelPage = function () {
  function KeyAccountsPanelPage() {
    _classCallCheck(this, KeyAccountsPanelPage);
  }

  _createClass(KeyAccountsPanelPage, [{
    key: "setup",
    value: function setup() {
      this.setupDataTable();
      this.farmChart = new _gaugeChart2.default('time-chart-farmer', {
        title: 'Farm',
        tooltip: ' % de parcerias'
      });
      this.captureChart = new _solidGaugeChart2.default('daily-contributions', {
        title: 'Captação',
        tooltip: 'Captação - Graduação'
      });

      this.setContributionChartData();
      this.recalculateTotals();
    }
  }, {
    key: "setContributionChartData",
    value: function setContributionChartData() {
      var dailyContributionsData = $("#daily-contributions-data").val();
      this.captureChart.getSeries(0).setData([eval(dailyContributionsData)]);
    }
  }, {
    key: "setupDataTable",
    value: function setupDataTable() {
      this.table = new _datatable2.default('#report-table', {
        paging: false,
        deferRender: true,
        searchDelay: 500,
        pageLength: 10,
        order: [6, 'desc']
      });
      var instance = this;
      this.table.onFilter(function () {
        // wait some time before the user stop typing.
        setTimeout(function () {
          instance.recalculateTotals();
        }, 300);
      });
    }
  }, {
    key: "recalculateTotals",
    value: function recalculateTotals() {
      var newPercent = 0;
      var nRows = this.table.getFilteredRows().nodes().length;
      if (nRows > 0) {
        var filteredData = this.table.getFilteredRows().data();

        var realized = 0;
        var movel_goal = 0;
        for (var i = 0; i < nRows; i++) {
          movel_goal += filteredData[i][4].parseMoney();
          realized += filteredData[i][5].parseMoney();
        }

        $("#mobile-goal").text(movel_goal.formatMoney(2));
        $("#total-realized").text(realized.formatMoney(2));

        newPercent = parseFloat((realized / movel_goal * 100).toFixed(2));
      }

      this.farmChart.getSeries(0).setData([]);
      this.farmChart.getSeries(0).addPoint(newPercent);
    }
  }]);

  return KeyAccountsPanelPage;
}();

window.keyAccountsPanelPage = new KeyAccountsPanelPage();
});

require.register("web/static/js/logging.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var DEBUG = 15;
var INFO = 10;
var WARN = 5;
var ERROR = 0;

var logging_level = ERROR;

function set_level(level) {
  logging_level = level;
}

function debug(message) {
  _print(message, DEBUG, '[DEBUG]: ');
}

function info(message) {
  _print(message, INFO, '[INFO]: ');
}

function warn(message) {
  Rollbar.warning(message);
  _print(message, WARN, '[WARN]: ');
}

function error(message) {
  _print(message, ERROR, '[ERROR]: ');
}

function _print(message, level, prefix) {
  if (level <= logging_level) {
    if (typeof message === "string") console.log(prefix + message);else console.log(prefix + JSON.stringify(message));
  }
}

exports.default = {
  DEBUG: DEBUG,
  INFO: INFO,
  WARN: WARN,
  ERROR: ERROR,

  set_level: set_level,

  debug: debug,
  info: info,
  warn: warn,
  error: error
};
});

require.register("web/static/js/offers-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _offersPanel = require("../templates/offers-panel");

var _offersPanel2 = _interopRequireDefault(_offersPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('offers-panel', _offersPanel2.default);

var OffersPanel = function () {
  function OffersPanel() {
    _classCallCheck(this, OffersPanel);
  }

  _createClass(OffersPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("offers:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.OffersChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return OffersPanel;
}();

window.offersPanel = new OffersPanel();
});

require.register("web/static/js/paids-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _paidsPanel = require("../templates/paids-panel");

var _paidsPanel2 = _interopRequireDefault(_paidsPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('paids-panel', _paidsPanel2.default);

var PaidsPanel = function () {
  function PaidsPanel() {
    _classCallCheck(this, PaidsPanel);
  }

  _createClass(PaidsPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("paids:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.PaidsChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return PaidsPanel;
}();

window.paidsPanel = new PaidsPanel();
});

require.register("web/static/js/panel-app.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _panelApp = require("../templates/panel-app");

var _panelApp2 = _interopRequireDefault(_panelApp);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('panel-app', _panelApp2.default);

var PanelApp = function () {
  function PanelApp() {
    _classCallCheck(this, PanelApp);
  }

  _createClass(PanelApp, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("panel:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.PanelChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return PanelApp;
}();

window.panelApp = new PanelApp();
});

require.register("web/static/js/pricing-campaign-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _pricingCampaignPanel = require("../templates/pricing-campaign-panel");

var _pricingCampaignPanel2 = _interopRequireDefault(_pricingCampaignPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('pricing-campaign-panel', _pricingCampaignPanel2.default);

var PricingCampaignPanel = function () {
  function PricingCampaignPanel() {
    _classCallCheck(this, PricingCampaignPanel);
  }

  _createClass(PricingCampaignPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("pricing_campaign:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.PricingCampaignChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return PricingCampaignPanel;
}();

window.pricingCampaignPanel = new PricingCampaignPanel();
});

require.register("web/static/js/pricing-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _pricingPanel = require("../templates/pricing-panel");

var _pricingPanel2 = _interopRequireDefault(_pricingPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('pricing-panel', _pricingPanel2.default);

var PricingPanel = function () {
  function PricingPanel() {
    _classCallCheck(this, PricingPanel);
  }

  _createClass(PricingPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("pricing:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.PricingChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return PricingPanel;
}();

window.pricingPanel = new PricingPanel();
});

require.register("web/static/js/quali-campaign.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _qualiCampaign = require("../templates/quali-campaign");

var _qualiCampaign2 = _interopRequireDefault(_qualiCampaign);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('quali-campaign', _qualiCampaign2.default);

var QualiCampaignPanel = function () {
  function QualiCampaignPanel() {
    _classCallCheck(this, QualiCampaignPanel);
  }

  _createClass(QualiCampaignPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("quali_campaign:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.QualiCampaignChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return QualiCampaignPanel;
}();

window.qualiCampaign = new QualiCampaignPanel();
});

require.register("web/static/js/quali-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _qualiPanel = require("../templates/quali-panel");

var _qualiPanel2 = _interopRequireDefault(_qualiPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('quali-panel', _qualiPanel2.default);

var QualiPanel = function () {
  function QualiPanel() {
    _classCallCheck(this, QualiPanel);
  }

  _createClass(QualiPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("quality:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.QualiChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return QualiPanel;
}();

window.qualiPanel = new QualiPanel();
});

require.register("web/static/js/quality-stats.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _qualityStats = require("../templates/quality-stats");

var _qualityStats2 = _interopRequireDefault(_qualityStats);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('quality-stats', _qualityStats2.default);

var QualityStats = function () {
  function QualityStats() {
    _classCallCheck(this, QualityStats);
  }

  _createClass(QualityStats, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("quality_stats:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.QualityStatsChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return QualityStats;
}();

window.qualityStats = new QualityStats();
});

require.register("web/static/js/query-string.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function solveEntries(options, compareValues, field) {
  var filters = _lodash2.default.map(compareValues, function (valueEntry) {
    var filteredOptions = _lodash2.default.filter(options, function (filterEntry) {
      return filterEntry[field] == valueEntry[field];
    });
    if (filteredOptions.length > 0) {
      return filteredOptions[0];
    }
    return null;
  });
  return filters;
}

function solveEntry(options, compareValue, field) {
  var filteredEntry = _lodash2.default.filter(options, function (filterEntry) {
    return filterEntry[field] == compareValue;
  });
  if (filteredEntry.length > 0) {
    return filteredEntry[0];
  }
}

exports.default = {
  solveEntries: solveEntries,
  solveEntry: solveEntry
};
});

require.register("web/static/js/refund-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _refundPanel = require("../templates/refund-panel");

var _refundPanel2 = _interopRequireDefault(_refundPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('refund-panel', _refundPanel2.default);

var RefundPanel = function () {
  function RefundPanel() {
    _classCallCheck(this, RefundPanel);
  }

  _createClass(RefundPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("refund_panel:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.RefundChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return RefundPanel;
}();

window.refundPanel = new RefundPanel();
});

require.register("web/static/js/router.js", function(exports, require, module) {
'use strict';

var _navigo = require('navigo');

var _navigo2 = _interopRequireDefault(_navigo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
});

require.register("web/static/js/sales-report.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datepicker = require("./components/datepicker");

var _datepicker2 = _interopRequireDefault(_datepicker);

var _moment = require("moment");

var _moment2 = _interopRequireDefault(_moment);

var _ajax = require("./components/ajax");

var _ajax2 = _interopRequireDefault(_ajax);

var _authentication = require("./components/authentication");

var _authentication2 = _interopRequireDefault(_authentication);

var _datatable = require("./components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _universityFilter = require("./components/universityFilter");

var _universityFilter2 = _interopRequireDefault(_universityFilter);

var _jquery = require("jquery");

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var select2 = require('select2')();

var PAGE_URL = 'sales_stats';

var SalesReportPage = function () {
  function SalesReportPage() {
    _classCallCheck(this, SalesReportPage);
  }

  _createClass(SalesReportPage, [{
    key: "setup",
    value: function setup() {
      var _this = this;

      this.$levelFilterSelect = (0, _jquery2.default)('.js-levels-multi-select');
      this.$levelFilterSelect.select2({ width: "resolve", height: "resolve", placeholder: "Todos" });
      this.$kindFilterSelect = (0, _jquery2.default)('.js-kinds-multi-select');
      this.$kindFilterSelect.select2({ width: "resolve", height: "resolve", placeholder: "Todos" });
      this.startDatePicker = new _datepicker2.default("start-date");
      this.endDatePicker = new _datepicker2.default("end-date");
      this.removeWhitelabelsCheckbox = (0, _jquery2.default)("#remove-whitelabels");
      this.universityFilter = new _universityFilter2.default();

      (0, _jquery2.default)("#filters-form").submit(function (evt) {
        evt.preventDefault();
        _this.updateReport();
      });

      this.updateRequest = new _ajax2.default({
        url: "/" + PAGE_URL + "/generate",
        onSuccess: function onSuccess() {
          return _this.afterShowReport();
        },
        onLoadOverlayElement: (0, _jquery2.default)(".report-panel")
      });
      this.loadInitialFilterValues();
      this.universityFilter.loadInitialValues();
      this.afterShowReport();
    }
  }, {
    key: "loadInitialFilterValues",
    value: function loadInitialFilterValues() {
      var yesterday = (0, _moment2.default)().subtract(1, 'days').toDate();
      var sixMonthsBehind = (0, _moment2.default)().subtract(1, 'days').subtract(6, 'months').toDate();

      var startDate = (0, _jquery2.default)("#initial-start-date").val() || sixMonthsBehind;
      var endDate = (0, _jquery2.default)("#initial-end-date").val() || yesterday;
      this.startDatePicker.setDate(startDate);
      this.endDatePicker.setDate(endDate);
    }
  }, {
    key: "updateReport",
    value: function updateReport() {
      var data = this.collectParameters();
      console.log("Filter Data: " + JSON.stringify(data));
      (0, _jquery2.default)("#update-btn").attr('disabled', '');
      this.updateRequest.getAndRenderPartial(data, (0, _jquery2.default)("#report-container"));
      this.updatePageHistory(data);
    }
  }, {
    key: "updatePageHistory",
    value: function updatePageHistory(data) {
      var params = _jquery2.default.param(data);
      window.history.pushState("", "", PAGE_URL + "?" + params);
    }
  }, {
    key: "collectParameters",
    value: function collectParameters() {
      console.log(this.startDatePicker.getValue());
      return {
        start_date: this.startDatePicker.getValue(),
        end_date: this.endDatePicker.getValue(),
        university_filter_type: this.universityFilter.universityTypeDropdown.getSelectedValue(),
        university_id: this.universityFilter.universityAutocomplete.getSelectedValue(),
        education_group_id: this.universityFilter.educationGroupAutocomplete.getSelectedValue(),
        admin_id: _authentication2.default.getCurrentUserId(),
        remove_whitelabels: this.removeWhitelabelsCheckbox.is(":checked"),
        level: this.$levelFilterSelect.val(),
        kind: this.$kindFilterSelect.val()
      };
    }
  }, {
    key: "afterShowReport",
    value: function afterShowReport() {
      this.dataTable = new _datatable2.default('#report-table', {
        paging: true,
        deferRender: true,
        pageLength: 10,
        order: [0, 'asc']
      });
      (0, _jquery2.default)("#update-btn").removeAttr('disabled');
    }
  }]);

  return SalesReportPage;
}();

window.salesReportPage = new SalesReportPage();
});

require.register("web/static/js/search-ranking-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _searchRankingPanel = require("../templates/search-ranking-panel");

var _searchRankingPanel2 = _interopRequireDefault(_searchRankingPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('search-ranking-panel', _searchRankingPanel2.default);

var SearchRankingPanel = function () {
  function SearchRankingPanel() {
    _classCallCheck(this, SearchRankingPanel);
  }

  _createClass(SearchRankingPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("search_ranking:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.SearchRankingChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return SearchRankingPanel;
}();

window.searchRankingPanel = new SearchRankingPanel();
});

require.register("web/static/js/search-shows-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _searchShowsPanel = require("../templates/search-shows-panel");

var _searchShowsPanel2 = _interopRequireDefault(_searchShowsPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('search-shows-panel', _searchShowsPanel2.default);

var SearchShowsPanel = function () {
  function SearchShowsPanel() {
    _classCallCheck(this, SearchShowsPanel);
  }

  _createClass(SearchShowsPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("search_shows:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.SearchShowsChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return SearchShowsPanel;
}();

window.searchShowsPanel = new SearchShowsPanel();
});

require.register("web/static/js/search-simulator.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _searchSimulator = require("../templates/search-simulator");

var _searchSimulator2 = _interopRequireDefault(_searchSimulator);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('search-simulator', _searchSimulator2.default);

var SearchSimulatorPanel = function () {
  function SearchSimulatorPanel() {
    _classCallCheck(this, SearchSimulatorPanel);
  }

  _createClass(SearchSimulatorPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("search_simulator:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.SearchSimulatorChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return SearchSimulatorPanel;
}();

window.searchSimulatorPanel = new SearchSimulatorPanel();
});

require.register("web/static/js/socket.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.socket = undefined;
exports.joinSingleChannel = joinSingleChannel;

var _phoenix = require("phoenix");

var _token = require("./token");

var _token2 = _interopRequireDefault(_token);

var _logging = require("./logging");

var _logging2 = _interopRequireDefault(_logging);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var token = (0, _token2.default)(); // NOTE: The contents of this file will only be executed if
// you uncomment its entry in "web/static/js/app.js".

// To use Phoenix channels, the first step is to import Socket
// and connect at the socket path in "lib/my_app/endpoint.ex":

var socket = new _phoenix.Socket("/socket", {
  params: {
    token: token
  }
});
socket.connect();

exports.socket = socket;
function joinSingleChannel(identification, type, callback, params) {
  var channel = socket.channel(identification, params);
  channel.join().receive("ok", function (resp) {
    console.log("Joined successfully " + type, resp);
    callback(type, channel, resp);
  }).receive("error", function (resp) {
    console.log("Unable to join " + type, resp);
  });
}
});

;require.register("web/static/js/sold-courses-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _soldCoursesPanel = require("../templates/sold-courses-panel");

var _soldCoursesPanel2 = _interopRequireDefault(_soldCoursesPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('sold-courses-panel', _soldCoursesPanel2.default);

var SoldCoursesPanel = function () {
  function SoldCoursesPanel() {
    _classCallCheck(this, SoldCoursesPanel);
  }

  _createClass(SoldCoursesPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("sold_courses:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.SoldCoursesChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return SoldCoursesPanel;
}();

window.soldCoursesPanel = new SoldCoursesPanel();
});

require.register("web/static/js/stock-panel.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _stockPanel = require("../templates/stock-panel");

var _stockPanel2 = _interopRequireDefault(_stockPanel);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('stock-panel', _stockPanel2.default);

var StockPanel = function () {
  function StockPanel() {
    _classCallCheck(this, StockPanel);
  }

  _createClass(StockPanel, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("stock:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.StockChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return StockPanel;
}();

window.stockPanel = new StockPanel();
});

require.register("web/static/js/token.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function () {
  if (document.getElementById("token")) return document.getElementById("token").value;
};

;
});

require.register("web/static/js/universities.js", function(exports, require, module) {
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _datatable = require('./components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var UniversitiesPage = function () {
  function UniversitiesPage() {
    _classCallCheck(this, UniversitiesPage);
  }

  _createClass(UniversitiesPage, [{
    key: 'setup',
    value: function setup() {
      this.setupDataTable();
    }
  }, {
    key: 'setupDataTable',
    value: function setupDataTable() {
      this.table = new _datatable2.default('#report-table', {
        paging: true,
        deferRender: true,
        searchDelay: 100,
        pageLength: 10,
        order: [6, 'desc']
      });
    }
  }]);

  return UniversitiesPage;
}();

window.universitiesPage = new UniversitiesPage();
});

require.register("web/static/js/university-charts.js", function(exports, require, module) {
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dropdown = require('./components/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _datepicker = require('./components/datepicker');

var _datepicker2 = _interopRequireDefault(_datepicker);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _ajax = require('./components/ajax');

var _ajax2 = _interopRequireDefault(_ajax);

var _authentication = require('./components/authentication');

var _authentication2 = _interopRequireDefault(_authentication);

var _simpleChart = require('./components/simple-chart');

var _simpleChart2 = _interopRequireDefault(_simpleChart);

var _messageDialog = require('./components/message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _universityFilter = require('./components/universityFilter');

var _universityFilter2 = _interopRequireDefault(_universityFilter);

var _object = require('./utils/object');

var _object2 = _interopRequireDefault(_object);

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var select2 = require('select2')();

var PAGE_URL = 'university_charts';
var CHART_URL = '/' + PAGE_URL + '/generate';

var TITLES = ['Visitas', 'Ordens', 'Ordens Pagas', 'Atratividade (%)', 'Sucesso (%)', 'Conversão (%)', 'Faturamento por Ordem (R$)', 'Ticket Médio (CP) (R$)'];

var COLORS = { 'main': '#18ACC4', 'comparison': '#F4B342', 'base': '#DF5E4E' };

var DATE_FORMAT = 'DD/MM/YYYY';

var UniversityChartsPage = function () {
  function UniversityChartsPage() {
    _classCallCheck(this, UniversityChartsPage);
  }

  _createClass(UniversityChartsPage, [{
    key: 'setup',
    value: function setup() {
      var _this = this;

      this.$levelFilterSelect = (0, _jquery2.default)('.js-levels-multi-select');
      this.$levelFilterSelect.select2({ width: "resolve", height: "resolve", placeholder: "Todos" });
      this.$kindFilterSelect = (0, _jquery2.default)('.js-kinds-multi-select');
      this.$kindFilterSelect.select2({ width: "resolve", height: "resolve", placeholder: "Todos" });
      this.startDatePicker = new _datepicker2.default("start-date");
      this.endDatePicker = new _datepicker2.default("end-date");
      this.universityComparisonFilter = new _universityFilter2.default({
        subject: 'comparison'
      });

      this.universityFilter = new _universityFilter2.default({
        afterInitialSelection: this.updateReport.bind(this)
      });
      this.exportButton = (0, _jquery2.default)('.js-export-csv');

      (0, _jquery2.default)("#filters-form").submit(function (evt) {
        evt.preventDefault();
        _this.updateReport();
        (0, _jquery2.default)('.js-export-csv').addClass('hidden');
      });

      this.updateRequest = new _ajax2.default({
        url: CHART_URL,
        onLoadOverlayElement: (0, _jquery2.default)(".report-panel")
      });
      this.loadInitialFilterValues();
      this.configCsvExport();

      this.universityComparisonFilter.loadInitialValues();
      // this must be the last thing done here because it will trigger the chart generation on after page load when
      // there is a selected university
      this.universityFilter.loadInitialValues();
      UniversityChartsPage.afterShowReport();
    }
  }, {
    key: 'loadInitialFilterValues',
    value: function loadInitialFilterValues() {
      var today = (0, _moment2.default)().toDate();
      var sevenDaysBehind = (0, _moment2.default)().subtract(7, 'days').toDate();

      var startDate = (0, _jquery2.default)("#initial-start-date").val() || sevenDaysBehind;
      var endDate = (0, _jquery2.default)("#initial-end-date").val() || today;

      this.startDatePicker.setDate(startDate);
      this.endDatePicker.setDate(endDate);
    }
  }, {
    key: '_buildSeries',
    value: function _buildSeries(series, fieldName) {
      return series.map(function (serie) {
        return {
          name: serie['name'],
          data: serie[fieldName],
          color: COLORS[serie['type']]
        };
      });
    }
  }, {
    key: '_buildSeriesWithBase',
    value: function _buildSeriesWithBase(series, fieldName) {
      var mainSerie = series.find(function (s) {
        return s.type === 'main';
      });
      var comparisonSeries = this._buildSeries(series, fieldName);
      if (mainSerie.compare) {
        comparisonSeries.unshift({
          name: 'Valor Base',
          data: mainSerie['base_' + fieldName],
          color: COLORS['base']
        });
      }
      return comparisonSeries;
    }
  }, {
    key: 'updateChart',
    value: function updateChart(series) {
      var xAxisSerie = series.find(function (s) {
        return s.type === 'main';
      })['dates'];

      this.visitsChart = new _simpleChart2.default('university-chart-visits', {
        title: TITLES[0],
        type: 'column',
        xAxisLabels: xAxisSerie,
        series: this._buildSeries(series, 'visits')
      });

      this.ordersChart = new _simpleChart2.default('university-chart-orders', {
        title: TITLES[1],
        type: 'column',
        xAxisLabels: xAxisSerie,
        series: this._buildSeries(series, 'orders')
      });

      this.paidOrdersChart = new _simpleChart2.default('university-chart-paid-orders', {
        title: TITLES[2],
        type: 'column',
        xAxisLabels: xAxisSerie,
        series: this._buildSeries(series, 'paid_orders')
      });

      this.attractivenessChart = new _simpleChart2.default('university-chart-attractiveness', {
        title: TITLES[3],
        type: 'line',
        xAxisLabels: xAxisSerie,
        series: this._buildSeriesWithBase(series, 'attractiveness')
      });

      this.exclusivityChart = new _simpleChart2.default('university-chart-exclusivity', {
        title: TITLES[4],
        type: 'line',
        xAxisLabels: xAxisSerie,
        series: this._buildSeriesWithBase(series, 'exclusivity')
      });

      this.conversionChart = new _simpleChart2.default('university-chart-conversion', {
        title: TITLES[5],
        type: 'line',
        xAxisLabels: xAxisSerie,
        series: this._buildSeries(series, 'conversion')
      });

      this.studentPriceChart = new _simpleChart2.default('university-chart-student-price', {
        title: TITLES[6],
        type: 'line',
        xAxisLabels: xAxisSerie,
        series: this._buildSeries(series, 'student_price')
      });

      this.averagePriceChart = new _simpleChart2.default('university-chart-average-price', {
        title: TITLES[7],
        tooltip: TITLES[7].toLowerCase(),
        type: 'line',
        xAxisLabels: xAxisSerie,
        series: this._buildSeries(series, 'average_price')
      });
    }
  }, {
    key: 'updateReport',
    value: function updateReport() {
      var _this2 = this;

      var queryString = {};
      var inputs = [];

      this.collectMainParameters(queryString, inputs);
      this.collectComparisonParameters(queryString, inputs);

      this.updateRequest.getParallel(inputs, function (responses) {
        var chartSeries = [];
        responses.forEach(function (response, idx) {
          if (response["message"]) {
            var dialog = new _messageDialog2.default("global-dialog", "warning", "Erro");
            dialog.show(response["message"]);
          } else {
            response['data']['type'] = inputs[idx]['type'];
            response['data']['compare'] = inputs[idx]['compare_with_base'];
            chartSeries.push(response['data']);
          }
        });
        _this2.updateChart(chartSeries);
        _this2.mainChartData = chartSeries.find(function (s) {
          return s.type === 'main';
        });
        // only show export button when not comparing
        if (chartSeries.length === 1) {
          _this2.exportButton.removeClass("hidden");
        }
        UniversityChartsPage.afterShowReport();
      });

      this.updatePageHistory(queryString);
    }
  }, {
    key: 'updatePageHistory',
    value: function updatePageHistory(data) {
      var params = _jquery2.default.param(data);
      window.history.pushState("", "", PAGE_URL + '?' + params);
    }
  }, {
    key: 'collectMainParameters',
    value: function collectMainParameters(queryString, requestParams) {
      var data = {
        start_date: this.startDatePicker.getValue(),
        end_date: this.endDatePicker.getValue(),
        admin_id: _authentication2.default.getCurrentUserId(),
        level: this.$levelFilterSelect.val(),
        kind: this.$kindFilterSelect.val(),
        university_filter_type: this.universityFilter.universityTypeDropdown.getSelectedValue(),
        university_id: this.universityFilter.universityAutocomplete.getSelectedValue(),
        education_group_id: this.universityFilter.educationGroupAutocomplete.getSelectedValue(),
        compare_with_base: (0, _jquery2.default)("#compare-with-base:checked").length > 0,
        type: 'main'
      };
      _object2.default.removeIfNullOrEmpty(data);
      Object.assign(queryString, data);
      requestParams.push(data);
    }
  }, {
    key: 'collectComparisonParameters',
    value: function collectComparisonParameters(queryString, requestParams) {
      var filterType = this.universityComparisonFilter.universityTypeDropdown.getSelectedValue();
      if (filterType === 'year_over_year') {
        this.collectYearOverYearComparisonParameters(queryString, requestParams);
      } else if (['university', 'education_group'].includes(filterType)) {
        this.collectUniversityComparisonParameters(queryString, requestParams);
      }
    }
  }, {
    key: 'collectYearOverYearComparisonParameters',
    value: function collectYearOverYearComparisonParameters(queryString, requestParams) {
      // Here, we go back 364 days instead of a complete year (365). It is done because 364 is a multiple of 7,
      // which will lead to the same week day in the previous year.
      var startDate = (0, _moment2.default)(this.startDatePicker.getValue(), DATE_FORMAT).subtract(364, 'days').format(DATE_FORMAT);
      var endDate = (0, _moment2.default)(this.endDatePicker.getValue(), DATE_FORMAT).subtract(364, 'days').format(DATE_FORMAT);

      var params = {
        start_date: startDate,
        end_date: endDate,
        admin_id: _authentication2.default.getCurrentUserId(),
        level: this.$levelFilterSelect.val(),
        kind: this.$kindFilterSelect.val(),
        university_filter_type: this.universityComparisonFilter.universityTypeDropdown.getSelectedValue(),
        university_id: this.universityFilter.universityAutocomplete.getSelectedValue(),
        education_group_id: this.universityFilter.educationGroupAutocomplete.getSelectedValue(),
        type: 'comparison'
      };
      UniversityChartsPage.setQueryStringComparisonParameters(queryString, params);
      requestParams.unshift(params);
      return params;
    }
  }, {
    key: 'collectUniversityComparisonParameters',
    value: function collectUniversityComparisonParameters(queryString, requestParams) {
      var params = {
        start_date: this.startDatePicker.getValue(),
        end_date: this.endDatePicker.getValue(),
        admin_id: _authentication2.default.getCurrentUserId(),
        level: this.$levelFilterSelect.val(),
        kind: this.$kindFilterSelect.val(),
        university_filter_type: this.universityComparisonFilter.universityTypeDropdown.getSelectedValue(),
        university_id: this.universityComparisonFilter.universityAutocomplete.getSelectedValue(),
        education_group_id: this.universityComparisonFilter.educationGroupAutocomplete.getSelectedValue(),
        type: 'comparison'
      };
      UniversityChartsPage.setQueryStringComparisonParameters(queryString, params);
      requestParams.push(params);
      return params;
    }
  }, {
    key: 'configCsvExport',
    value: function configCsvExport() {
      var _this3 = this;

      var titleCsv = ["Data"].concat(TITLES.map(function (value) {
        return value.normalize('NFD').replace(/[\u0300-\u036f]/g, "");
      }));
      var columns = ["dates", "visits", "orders", "paid_orders", "attractiveness", "exclusivity", "conversion", "student_price", "average_price"];

      this.exportButton.on("click", function (e) {
        var rows = columns.map(function (column, index) {
          return [titleCsv[index]].concat(_this3.mainChartData[columns[index]]);
        });

        var csvContent = "data:text/csv;charset=ISO-8859-1,";

        rows.forEach(function (rowArray) {
          var row = rowArray.join(";").replace(/\./g, ',');
          csvContent += row + "\r\n";
        });

        var encodedUri = encodeURI(csvContent);

        var link = document.createElement("a");
        link.setAttribute("href", encodedUri);
        link.setAttribute("download", 'Relat\xF3rio - ' + _this3.mainChartData['name'] + '.csv');
        document.body.appendChild(link);

        link.click();
      });
    }
  }], [{
    key: 'setQueryStringComparisonParameters',
    value: function setQueryStringComparisonParameters(queryString, params) {
      queryString['comparison_university_id'] = params["university_id"];
      queryString['comparison_education_group_id'] = params["education_group_id"];
      queryString['comparison_university_filter_type'] = params["university_filter_type"];
      _object2.default.removeIfNullOrEmpty(params);
    }
  }, {
    key: 'afterShowReport',
    value: function afterShowReport() {
      (0, _jquery2.default)("#update-btn").removeAttr('disabled');
    }
  }]);

  return UniversityChartsPage;
}();

window.universityChartsPage = new UniversityChartsPage();
});

require.register("web/static/js/user-home.js", function(exports, require, module) {
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _userHome = require("../templates/user-home");

var _userHome2 = _interopRequireDefault(_userHome);

var _socket = require("./socket");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Vue.component('user-home', _userHome2.default);

var UserHome = function () {
  function UserHome() {
    _classCallCheck(this, UserHome);
  }

  _createClass(UserHome, [{
    key: "setup",
    value: function setup() {
      this.setupComponent();
      this.loaded = false;
    }
  }, {
    key: "setupComponent",
    value: function setupComponent() {
      var _this = this;

      var capturePeriod = document.getElementById("capture-period").value;
      var channelHash = document.getElementById("channel-hash").value;
      (0, _socket.joinSingleChannel)("home:data:" + channelHash, "panel", function (channel_type, channel, params) {
        window.HomeChannel = channel;
        console.log("channel joined. loaded: " + _this.loaded);
        if (!_this.loaded) {
          _this.loaded = true;
          window.vueApp = new Vue({
            el: '#app',
            mounted: function mounted() {
              console.log("app ready");
            }
          });
        }
      }, { capturePeriod: capturePeriod });
    }
  }]);

  return UserHome;
}();

window.userHome = new UserHome();
});

require.register("web/static/js/utils/export.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function emptyNull(value) {
  if (_lodash2.default.isNil(value)) {
    return "";
  }
  return value;
}

function exportCsvFile(filename, content) {
  var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
  saveAs(blob, filename);
}

function exportData(name_sufix, data, fields) {
  var filename = name_sufix + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
  var content = _lodash2.default.join(fields, ';') + '\n';
  var lines = data[0].length;
  var columns = data.length;
  console.log("content: " + content);
  console.log("lines: " + lines + " columns: " + columns);
  for (var i = 0; i < lines; i++) {
    var separator = '';
    for (var j = 0; j < columns; j++) {
      content = content + separator + emptyNull(data[j][i]);
      separator = ';';
    }
    content = content + '\n';
  }
  exportCsvFile(filename, content);
}

exports.default = {
  exportCsvFile: exportCsvFile,
  exportData: exportData
};
});

require.register("web/static/js/utils/object.js", function(exports, require, module) {
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AppObject = function () {
  function AppObject() {
    _classCallCheck(this, AppObject);
  }

  _createClass(AppObject, null, [{
    key: 'removeIfNullOrEmpty',
    value: function removeIfNullOrEmpty(obj) {
      if (obj == null) return null;

      Object.keys(obj).forEach(function (key) {
        if (obj[key] == null || obj[key].toString() === '') delete obj[key];
      });
      return obj;
    }
  }]);

  return AppObject;
}();

exports.default = AppObject;
});

;require.register("web/static/js/utils/string.js", function(exports, require, module) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

// File with some prototypes over the String type

exports.default = function () {

  String.prototype.nullIfBlank = function () {
    if (this.trim().length === 0) {
      return null;
    } else {
      return this;
    }
  };
}();
});

require.register("web/static/templates/analysis-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _authentication = require('../js/components/authentication');

var _authentication2 = _interopRequireDefault(_authentication);

var _messageDialog = require('../js/components/message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _iesAnalysisFilter = require('./analysis/ies-analysis-filter');

var _iesAnalysisFilter2 = _interopRequireDefault(_iesAnalysisFilter);

var _semesterEndAnalysisFilter = require('./analysis/semester-end-analysis-filter');

var _semesterEndAnalysisFilter2 = _interopRequireDefault(_semesterEndAnalysisFilter);

var _partialPresentationAnalysisFilter = require('./analysis/partial-presentation-analysis-filter');

var _partialPresentationAnalysisFilter2 = _interopRequireDefault(_partialPresentationAnalysisFilter);

var _qapPresentationFilter = require('./analysis/qap-presentation-filter');

var _qapPresentationFilter2 = _interopRequireDefault(_qapPresentationFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      semesterStart: null,
      semesterEnd: null,
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      loading: false,
      analysisType: null,
      universityOptions: [],
      universityGroupOptions: [],
      analysisOptions: [{ name: 'Taxas e Indicadores da IES', key: 'ies' }, { name: 'Apresentação parcial', key: 'partial_presentation' }]
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    IesAnalysis: _iesAnalysisFilter2.default,
    SemesterEndAnalysis: _semesterEndAnalysisFilter2.default,
    PartialPresentationAnalysis: _partialPresentationAnalysisFilter2.default,
    QapPresentation: _qapPresentationFilter2.default
  },
  mounted: function mounted() {
    var _this = this;

    console.log("mounted");
    AnalysisChannel.on('analysisData', function (payload) {
      return _this.receiveAnalysis(payload);
    });
    AnalysisChannel.on('analysisError', function (payload) {
      return _this.receiveAnalysisError(payload);
    });

    AnalysisChannel.on('citiesFilterData', function (payload) {
      return _this.receiveCitiesFilterData(payload);
    });
    AnalysisChannel.on('campusFilterData', function (payload) {
      return _this.receiveCampusFilterData(payload);
    });

    this.loading = true;
    this.loadFilters();

    var currentCapturePeriod = document.getElementById("capture-period").value;

    if (currentCapturePeriod == 8) {
      this.analysisOptions.push({ name: 'Apresentação parcial', key: 'partial_presentation' });
    }

    if (currentCapturePeriod < 8) {
      this.analysisOptions.push({ name: 'Apresentação de final de semestre', key: 'semester_end' });
    }
  },

  methods: {
    receiveCitiesFilterData: function receiveCitiesFilterData(data) {
      this.citiesOptions = data.cities;
      console.log("receiveCitiesFilterData");
    },
    receiveCampusFilterData: function receiveCampusFilterData(data) {
      this.campusOptions = data.campus;
      console.log("receiveCampusFilterData");
    },
    loadFilters: function loadFilters() {
      var _this2 = this;

      AnalysisChannel.push('loadFilters').receive('ok', function (data) {
        _this2.semesterStart = data.semesterStart;
        _this2.semesterEnd = data.semesterEnd;

        _this2.regionsOptions = data.regions;
        _this2.statesOptions = data.states;
        _this2.kindOptions = data.kinds;
        _this2.levelOptions = data.levels;
        _this2.locationOptions = data.locationTypes;
        _this2.universityOptions = data.universities;
        _this2.universityGroupOptions = data.groups;
        _this2.loading = false;
      });
    },
    reportParameters: function reportParameters() {
      if (this.analysisType.key == 'ies') {
        return this.$refs.iesFilter.filterData();
      } else if (this.analysisType.key == 'semester_end') {
        return this.$refs.semesterEndFilter.filterData();
      } else if (this.analysisType.key == 'partial_presentation') {
        return this.$refs.partialPresentationFilter.filterData();
      } else if (this.analysisType.key == 'qap_presentation') {
        return this.$refs.qapPresentationFilter.filterData();
      }
    },
    receiveAnalysis: function receiveAnalysis(data) {
      console.log("receiveAnalysis: data: " + (0, _stringify2.default)(data));
      this.loading = false;
      var dialog = new _messageDialog2.default("global-dialog", "success", "Ok");
      dialog.show("Análise finalizada");
      document.getElementById("download_frame").setAttribute('src', '/download_analysis?filename=' + data.filename + '&name=' + data.download_name);
    },
    receiveAnalysisError: function receiveAnalysisError(data) {
      var dialog = new _messageDialog2.default("global-dialog", "danger", "Erro");
      dialog.show("Erro ao gerar análise");
      this.loading = false;
    },
    validateParameters: function validateParameters() {
      if (this.analysisType.key == 'ies') {
        return this.$refs.iesFilter.validateParameters();
      } else if (this.analysisType.key == 'semester_end') {
        return this.$refs.semesterEndFilter.validateParameters();
      } else if (this.analysisType.key == 'partial_presentation') {
        return this.$refs.partialPresentationFilter.validateParameters();
      } else if (this.analysisType.key == 'qap_presentation') {
        return this.$refs.qapPresentationFilter.validateParameters();
      }
      return false;
    },
    execute: function execute() {
      if (_lodash2.default.isNil(this.analysisType)) {
        alert("Selecione uma análise");
        return;
      }
      if (!this.validateParameters()) {
        return;
      }
      this.loading = true;
      AnalysisChannel.push('generate', { type: this.analysisType.key, parameters: this.reportParameters() }).receive('timeout', function () {
        console.log("generate timeout");
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('label',[_vm._v("APRESENTAÇÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.analysisOptions,"allowEmpty":false,"label":"name","track-by":"key","placeholder":"Selecione a apresentação","selectLabel":"","deselectLabel":""},model:{value:(_vm.analysisType),callback:function ($$v) {_vm.analysisType=$$v},expression:"analysisType"}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-6"})]),_vm._v(" "),(_vm.analysisType && _vm.analysisType.key == 'ies')?[_c('ies-analysis',{ref:"iesFilter",attrs:{"semester-start":_vm.semesterStart,"semester-end":_vm.semesterEnd,"university-options":_vm.universityOptions,"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"kind-options":_vm.kindOptions,"level-options":_vm.levelOptions,"cities-options":_vm.citiesOptions,"campus-options":_vm.campusOptions}})]:_vm._e(),_vm._v(" "),(_vm.analysisType && _vm.analysisType.key == 'semester_end')?[_c('semester-end-analysis',{ref:"semesterEndFilter",attrs:{"semester-start":_vm.semesterStart,"semester-end":_vm.semesterEnd,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"kind-options":_vm.kindOptions,"level-options":_vm.levelOptions,"cities-options":_vm.citiesOptions,"campus-options":_vm.campusOptions}})]:_vm._e(),_vm._v(" "),(_vm.analysisType && _vm.analysisType.key == 'partial_presentation')?[_c('partial-presentation-analysis',{ref:"partialPresentationFilter",attrs:{"semester-start":_vm.semesterStart,"semester-end":_vm.semesterEnd,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"kind-options":_vm.kindOptions,"level-options":_vm.levelOptions,"cities-options":_vm.citiesOptions,"campus-options":_vm.campusOptions}})]:_vm._e(),_vm._v(" "),(_vm.analysisType && _vm.analysisType.key == 'qap_presentation')?[_c('qap-presentation',{ref:"qapPresentationFilter",attrs:{"university-options":_vm.universityOptions,"kind-options":_vm.kindOptions,"level-options":_vm.levelOptions}})]:_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 default-margin-top"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.execute}},[_vm._v("\n        Executar\n      ")])])]),_vm._v(" "),_c('iframe',{staticStyle:{"display":"none"},attrs:{"id":"download_frame","src":"about:blank"}})],2)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Gerador de Apresentações\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-0af29191", __vue__options__)
  } else {
    hotAPI.reload("data-v-0af29191", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/analysis/ies-analysis-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('../custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _customSearchMultiselect = require('../custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _locationFilter = require('../location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      dateRange: null,
      filterKinds: [],
      filterLevels: [],
      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Ultimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Ultimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }]
    };
  },

  props: ['universityOptions', 'kindOptions', 'levelOptions', 'locationOptions', 'regionsOptions', 'statesOptions', 'semesterStart', 'semesterEnd', 'citiesOptions', 'campusOptions'],
  mounted: function mounted() {
    this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)().toDate()];
  },

  watch: {
    citiesOptions: function citiesOptions(data) {
      this.$refs.locationFilter.setCitiesLoader(false);
    },
    campusOptions: function campusOptions(data) {
      this.$refs.locationFilter.setCampusLoader(false);
    }
  },
  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    Multiselect: _vueMultiselect2.default
  },
  methods: {
    validateParameters: function validateParameters() {
      if (_lodash2.default.isNil(this.universityFilter)) {
        alert("Selecione a universidade");
        return false;
      }
      return true;
    },
    filterData: function filterData() {
      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var baseFilters = [{ type: "university", value: this.universityFilter }];

      var filterMap = {
        initialDate: initialDate,
        finalDate: finalDate,
        baseFilters: baseFilters,
        kinds: this.filterKinds,
        levels: this.filterLevels
      };

      if (this.$refs.locationFilter.locationValue()) {
        filterMap.locationType = this.$refs.locationFilter.locationFilter();
        filterMap.locationValue = this.$refs.locationFilter.locationValue();
      }

      return filterMap;
    },
    filterComplete: function filterComplete(field) {
      var filter = this.filterData();
      if (filter) {
        this.cityFilterLoading = true;
        this.campusFilterLoading = true;

        filter.completeField = field;
        AnalysisChannel.push('filterComplete', filter).receive('timeout', function () {
          console.log('filterComplete timeout');
        });
      }
    },
    loadCities: function loadCities() {
      this.$refs.locationFilter.setCitiesLoader(true);
      this.filterComplete('city');
    },
    loadCampuses: function loadCampuses() {
      this.$refs.locationFilter.setCampusLoader(true);
      this.filterComplete('campus');
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('label',[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.universityFilter),callback:function ($$v) {_vm.universityFilter=$$v},expression:"universityFilter"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('location-filter',{ref:"locationFilter",attrs:{"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"cities-options":_vm.citiesOptions,"campus-options":_vm.campusOptions},on:{"cityLocationSelected":_vm.loadCities,"campusLocationSelected":_vm.loadCampuses}})],1)])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1c34519e", __vue__options__)
  } else {
    hotAPI.reload("data-v-1c34519e", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/analysis/partial-presentation-analysis-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('../custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _customSearchMultiselect = require('../custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _locationFilter = require('../location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _panelPrimaryFilter = require('../panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      dateRange: null,
      shortcuts: [{
        text: 'Início do ano',
        onClick: function onClick() {
          var currentYear = new Date().getFullYear();
          var final = new Date(currentYear + '-6-30');

          _this.dateRange = [(0, _moment2.default)().startOf('year').toDate(), (0, _moment2.default)(final.valueOf())];
        }
      }, {
        text: 'Final do ano',
        onClick: function onClick() {
          var currentYear = new Date().getFullYear();
          var inicial = new Date(currentYear + '-7-1');
          var final = new Date(currentYear + '-12-31 00:00:00');

          _this.dateRange = [(0, _moment2.default)(inicial.valueOf()).toDate(), (0, _moment2.default)(final.valueOf()).toDate()];
        }
      }, {
        text: 'Semestre atual',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).toDate(), (0, _moment2.default)().subtract(1, 'days').toDate()];
        }
      }],
      filterKinds: [],
      filterLevels: [],
      filterOptions: [{ name: 'Universidade', type: 'university' }, { name: 'Grupo', type: 'group' }]
    };
  },

  props: ['universityOptions', 'kindOptions', 'levelOptions', 'locationOptions', 'regionsOptions', 'statesOptions', 'semesterStart', 'semesterEnd', 'citiesOptions', 'campusOptions', 'universityGroupOptions'],
  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    Multiselect: _vueMultiselect2.default,
    PanelPrimaryFilter: _panelPrimaryFilter2.default
  },
  mounted: function mounted() {
    this.$refs.filter.setFilterType(this.filterOptions[0]);
    this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)().subtract(1, 'days').toDate()];
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log("primaryFilterSelected: " + (0, _stringify2.default)(data));
    },
    validateParameters: function validateParameters() {
      if (_lodash2.default.isNil(this.dateRange[0]) || _lodash2.default.isNil(this.dateRange[1])) {
        alert('Selecione um período');
        return false;
      }
      if (!this.$refs.filter.validateFilter()) {
        return false;
      }
      var currentFilter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(currentFilter)) {
        alert("Selecione um tipo de filtro");
        return false;
      } else {
        if (_lodash2.default.isNil(currentFilter.value)) {
          alert("Selecione um valor para o filtro");
          return false;
        }
      }
      if (_lodash2.default.isNil(this.dateRange[0]) || _lodash2.default.isNil(this.dateRange[1])) {
        alert('Selecione um período');
        return false;
      }
      return true;
    },
    filterData: function filterData() {

      if (!this.validateParameters()) {
        return;
      }
      var baseFilters = [this.$refs.filter.filterSelected()];

      var filterMap = {
        baseFilters: baseFilters,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        initialDate: this.dateRange[0],
        finalDate: this.dateRange[1]
      };

      return filterMap;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-72d4ada7", __vue__options__)
  } else {
    hotAPI.reload("data-v-72d4ada7", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/analysis/qap-presentation-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('../custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _customSearchMultiselect = require('../custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _locationFilter = require('../location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      dateRange: null,
      filterKinds: [],
      filterLevels: [],
      mergeEadAndSemi: false,
      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Ultimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Ultimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }]
    };
  },

  props: ['universityOptions', 'kindOptions', 'levelOptions', 'locationOptions', 'regionsOptions', 'statesOptions', 'semesterStart', 'semesterEnd', 'citiesOptions', 'campusOptions'],
  mounted: function mounted() {},

  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    Multiselect: _vueMultiselect2.default
  },
  methods: {
    validateParameters: function validateParameters() {
      if (_lodash2.default.isNil(this.universityFilter)) {
        alert("Selecione a universidade");
        return false;
      }
      return true;
    },
    filterData: function filterData() {

      var baseFilters = [{ type: "university", value: this.universityFilter }];

      var filterMap = {
        baseFilters: baseFilters,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        mergeEadAndSemi: this.mergeEadAndSemi
      };

      return filterMap;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('label',[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.universityFilter),callback:function ($$v) {_vm.universityFilter=$$v},expression:"universityFilter"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.mergeEadAndSemi),expression:"mergeEadAndSemi"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox","checked":""},domProps:{"checked":Array.isArray(_vm.mergeEadAndSemi)?_vm._i(_vm.mergeEadAndSemi,null)>-1:(_vm.mergeEadAndSemi)},on:{"change":function($event){var $$a=_vm.mergeEadAndSemi,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.mergeEadAndSemi=$$a.concat([$$v]))}else{$$i>-1&&(_vm.mergeEadAndSemi=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.mergeEadAndSemi=$$c}}}}),_c('label',[_vm._v("EAD E SEMI NO MESMO SLIDE")])])])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d997c2ae", __vue__options__)
  } else {
    hotAPI.reload("data-v-d997c2ae", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/analysis/semester-end-analysis-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('../custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _customSearchMultiselect = require('../custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _locationFilter = require('../location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _panelPrimaryFilter = require('../panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      dateRange: null,
      shortcuts: [{
        text: 'Início do ano',
        onClick: function onClick() {
          var currentYear = new Date().getFullYear();
          var final = new Date(currentYear + '-6-30');

          _this.dateRange = [(0, _moment2.default)().startOf('year').toDate(), (0, _moment2.default)(final.valueOf())];
        }
      }, {
        text: 'Final do ano',
        onClick: function onClick() {
          var currentYear = new Date().getFullYear();
          var inicial = new Date(currentYear - 1 + '-7-1');
          var final = new Date(currentYear - 1 + '-12-31 00:00:00');

          _this.dateRange = [(0, _moment2.default)(inicial.valueOf()).toDate(), (0, _moment2.default)(final.valueOf()).toDate()];
        }
      }, {
        text: 'Semestre atual',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).toDate(), (0, _moment2.default)(_this.semesterEnd).toDate()];
        }
      }],
      filterKinds: [],
      filterLevels: [],
      filterOptions: [{ name: 'Universidade', type: 'university' }, { name: 'Grupo', type: 'group' }],
      versionOptions: [{ name: '2019.1', type: '2019.1' }, { name: '2019.2', type: '2019.2' }, { name: '2020.1', type: '2020.1' }],
      presentationVersion: null
    };
  },

  props: ['universityOptions', 'kindOptions', 'levelOptions', 'locationOptions', 'regionsOptions', 'statesOptions', 'semesterStart', 'semesterEnd', 'citiesOptions', 'campusOptions', 'universityGroupOptions'],
  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    Multiselect: _vueMultiselect2.default,
    PanelPrimaryFilter: _panelPrimaryFilter2.default
  },

  watch: {
    presentationVersion: function presentationVersion(value) {
      console.log("presentationVersion: " + value.type + " filterLevels: " + (0, _stringify2.default)(this.filterLevels) + " TYPE: " + Array.isArray(this.filterLevels));
      if (value.type == '2019.1' && !Array.isArray(this.filterLevels)) {
        this.filterLevels = [this.filterLevels];
      }

      if (value.type == '2019.2' && Array.isArray(this.filterLevels)) {
        this.filterLevels = this.filterLevels[0];
      }
    }
  },
  mounted: function mounted() {
    this.$refs.filter.setFilterType(this.filterOptions[0]);
    this.dateRange = [this.semesterStart, this.semesterEnd];
    this.presentationVersion = this.versionOptions[2];
  },

  computed: {
    permitMultipleLevel: function permitMultipleLevel() {
      return this.presentationVersion != this.versionOptions[2];
    },
    levelsPlaceholder: function levelsPlaceholder() {
      if (this.presentationVersion != this.versionOptions[2]) {
        return "Todos os níveis";
      }
      return "Selecione o nível";
    }
  },
  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log("primaryFilterSelected: " + (0, _stringify2.default)(data));
    },
    validateParameters: function validateParameters() {
      if (!this.$refs.filter.validateFilter()) {
        return false;
      }

      var currentFilter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(currentFilter)) {
        alert("Selecione um tipo de filtro");
        return false;
      } else {
        if (_lodash2.default.isNil(currentFilter.value)) {
          alert("Selecione um valor para o filtro");
          return false;
        }
      }

      console.log("VALIDATE levels: " + (0, _stringify2.default)(this.filterLevels) + " EMPTY: " + _lodash2.default.isEmpty(this.filterLevels));

      if (this.presentationVersion == this.versionOptions[2] && _lodash2.default.isEmpty(this.filterLevels)) {
        alert("Selecione um nível");
        return false;
      }

      return true;
    },
    filterData: function filterData() {
      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var baseFilters = [this.$refs.filter.filterSelected()];

      var filterMap = {
        initialDate: initialDate,
        finalDate: finalDate,
        baseFilters: baseFilters,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        version: this.presentationVersion.type
      };

      return filterMap;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":_vm.permitMultipleLevel,"label":"name","track-by":"id","placeholder":_vm.levelsPlaceholder,"selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("VERSÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.versionOptions,"label":"name","track-by":"type","placeholder":"Selecione a versão","selectLabel":"","deselectLabel":""},model:{value:(_vm.presentationVersion),callback:function ($$v) {_vm.presentationVersion=$$v},expression:"presentationVersion"}})],1)])])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c7a14cf2", __vue__options__)
  } else {
    hotAPI.reload("data-v-c7a14cf2", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/base-chart.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _barChart = require('../js/components/vue-charts/bar-chart');

var _barChart2 = _interopRequireDefault(_barChart);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: false,
      baseSeriesColors: ['#35b6cc', '#fdc029', '#09b67c', '#bf265f', '#05869B', '#FC8400', '#006386'],
      chartData: {
        labels: [],
        datasets: []
      },
      exportChartData: {
        labels: [],
        datasets: []
      },
      exportChartOptions: {},
      chartOptions: {
        hover: {
          intersect: false
        },
        layout: {
          padding: {
            left: 0,
            right: 0,
            top: 0,
            bottom: 0
          }
        },
        tooltips: {
          enabled: true
        },
        extended: {
          drawValuesInChart: false,
          drawPercentageValuesInChart: false,
          useAlternativeDataSet: false
        },
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        legend: {
          position: 'bottom',
          labels: {
            fontColor: 'white',
            usePointStyle: true
          },
          onClick: this.onLegendClick
        },
        elements: { point: { radius: 0 } },
        scales: {
          xAxes: [{
            ticks: {
              autoSkip: false,
              display: true,
              fontColor: '#ffffff'
            },
            gridLines: {
              display: true,
              drawBorder: true
            },
            style: {
              color: '#ffffff'
            }
          }],
          yAxes: [{
            ticks: {
              display: true,
              fontColor: '#ffffff'
            }
          }]
        }
      }
    };
  },
  mounted: function mounted() {
    this.copyOptionsToExport();
  },

  props: {
    exportName: String,
    exportLink: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    baseHeight: {
      type: Number,
      default: function _default() {
        return 300;
      }
    }
  },
  components: {
    BarChart: _barChart2.default
  },
  computed: {
    showExportLink: function showExportLink() {
      if (!this.exportLink) {
        return false;
      }
      return this.chartData.datasets.length > 0;
    },
    exportFileName: function exportFileName() {
      if (_lodash2.default.isNil(this.exportName)) {
        return "chart.png";
      }
      return this.exportName + '.png';
    }
  },
  methods: {
    onLegendClick: function onLegendClick(eventData, legendItem) {
      var index = legendItem.datasetIndex;
      var currentChart = this.$refs.chart.$data._chart;
      var exportChart = this.$refs.exportChart.$data._chart;

      var meta = currentChart.getDatasetMeta(index);
      var exportMeta = exportChart.getDatasetMeta(index);

      if (meta.hidden === null) {
        meta.hidden = true;
        exportMeta.hidden = true;
      } else {
        meta.hidden = null;
        exportMeta.hidden = null;
      }

      currentChart.update();
      exportChart.update();
      this.updateExportLink();
    },
    emptyNull: function emptyNull(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      return value;
    },
    exportData: function exportData() {
      var baseName = this.exportName;
      if (_lodash2.default.isNil(baseName)) {
        baseName = 'dados';
      }
      var filename = baseName + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
      var content = "Indice";
      for (var i = 0; i < this.chartData.datasets.length; i++) {
        content = content + ',' + this.chartData.datasets[i].label;
      }
      content = content + '\n';
      for (var row = 0; row < this.chartData.labels.length; row++) {
        content = content + this.chartData.labels[row];
        for (var i = 0; i < this.chartData.datasets.length; i++) {
          content = content + ',' + this.emptyNull(this.chartData.datasets[i].data[row]);
        }
        content = content + '\n';
      }
      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    },
    setXAxesBarPercentage: function setXAxesBarPercentage(value, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.xAxes[index].barPercentage = value;
      this.copyOptionsToExport();
    },
    setXAxesAutoSkip: function setXAxesAutoSkip(value, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.xAxes[index].ticks.autoSkip = value;
      this.copyOptionsToExport();
    },
    setPadding: function setPadding(value) {
      this.chartOptions.layout.padding = value;
      this.copyOptionsToExport();
    },
    setXAxisTitle: function setXAxisTitle(label, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.xAxes[index].scaleLabel = {};
      this.chartOptions.scales.xAxes[index].scaleLabel.labelString = label;
      this.chartOptions.scales.xAxes[index].scaleLabel.display = true;
      this.chartOptions.scales.xAxes[index].scaleLabel.fontColor = '#ffffff';
    },
    setYAxisTitle: function setYAxisTitle(label, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.yAxes[index].scaleLabel = {};
      this.chartOptions.scales.yAxes[index].scaleLabel.labelString = label;
      this.chartOptions.scales.yAxes[index].scaleLabel.display = true;
      this.chartOptions.scales.yAxes[index].scaleLabel.fontColor = '#ffffff';
    },
    setYAxes: function setYAxes(value) {
      this.chartOptions.scales.yAxes = value;
    },
    setXAxes: function setXAxes(value) {
      this.chartOptions.scales.xAxes = value;
    },
    setYAxesStacked: function setYAxesStacked(index) {
      var axesIndex = index;
      if (_lodash2.default.isNil(axesIndex)) {
        axesIndex = 0;
      }
      this.chartOptions.scales.yAxes[axesIndex].stacked = true;
    },
    setXAxesStacked: function setXAxesStacked(index) {
      var axesIndex = index;
      if (_lodash2.default.isNil(axesIndex)) {
        axesIndex = 0;
      }
      this.chartOptions.scales.xAxes[axesIndex].stacked = true;
    },
    clearSeries: function clearSeries() {
      while (this.chartData.datasets.length > 0) {
        this.chartData.datasets.splice(0, 1);
        this.exportChartData.datasets.splice(0, 1);
      }
      this.updateChart();
    },
    copyOptionsToExport: function copyOptionsToExport() {
      this.exportChartOptions = _lodash2.default.cloneDeep(this.chartOptions);
      this.exportChartOptions.scales.xAxes[0].ticks.fontColor = '#000000';
      this.exportChartOptions.scales.yAxes[0].ticks.fontColor = '#000000';
      this.exportChartOptions.legend.labels.fontColor = '#000000';
      this.exportChartOptions.extended.drawValuesColor = '#000000';
    },
    setDisplayLegend: function setDisplayLegend(value) {
      this.chartOptions.legend.display = value;
    },
    setYBeginAtZero: function setYBeginAtZero(value) {
      this.chartOptions.scales.yAxes[0].ticks.beginAtZero = value;
    },
    setAlternativeDataSet: function setAlternativeDataSet(value) {
      this.chartOptions.extended.useAlternativeDataSet = value;
    },
    setToolTips: function setToolTips(value) {
      this.chartOptions.tooltips.enabled = value;
    },
    setDrawValues: function setDrawValues(value, fontSize, fontStyle) {
      this.chartOptions.extended.drawValuesInChart = value;
      this.chartOptions.extended.drawValuesColor = '#ffffff';
      if (!_lodash2.default.isNil(fontSize)) {
        this.chartOptions.extended.drawValuesSize = fontSize;
      }
      if (!_lodash2.default.isNil(fontStyle)) {
        this.chartOptions.extended.drawValueStyle = fontStyle;
      }
      this.copyOptionsToExport();
    },
    setYMax: function setYMax(value) {
      this.chartOptions.scales.yAxes[0].ticks.max = value;
      this.updateChart();
    },
    setLoader: function setLoader() {
      this.loading = true;
    },
    resetLoader: function resetLoader() {
      this.loading = false;
    },
    updateChart: function updateChart() {
      var _this = this;

      this.$refs.chart.updateChart();
      this.copyOptionsToExport();
      this.$refs.exportChart.updateChart();

      this.$nextTick(function () {
        _this.updateExportLink();
      });
    },
    updateExportLink: function updateExportLink() {
      if (this.exportLink) {
        var element = this.$refs.exportChart.$data._chart.canvas;
        var chart_data = element.toDataURL("image/jpg");
        this.$refs.exportLink.href = chart_data;
      }
    },
    setLabels: function setLabels(labels) {
      this.chartData.labels = labels;
    },
    setSeries: function setSeries(index, data, title) {
      this.setSeriesWithOptions(index, data, title, {});
    },
    setSeriesWithOptions: function setSeriesWithOptions(index, data, title, options) {
      var color = options.seriesColor;
      var fill = options.fill;
      var yAxisID = options.yAxisID;
      var xAxisID = options.xAxisID;
      var borderWidth = options.borderWidth;
      if (_lodash2.default.isNil(borderWidth)) {
        borderWidth = 1;
      }
      if (_lodash2.default.isNil(color)) {
        color = this.getNextColor(index);
      }
      if (_lodash2.default.isNil(fill)) {
        fill = false;
      }
      var datasetMap = {
        label: '',
        backgroundColor: color,
        borderColor: color,
        data: [],
        labelsData: [],
        fill: fill,
        borderWidth: borderWidth
      };
      if (options.labelsData) {
        datasetMap.labelsData = options.labelsData;
      }
      if (!_lodash2.default.isNil(yAxisID)) {
        datasetMap.yAxisID = yAxisID;
      }
      if (!_lodash2.default.isNil(xAxisID)) {
        datasetMap.xAxisID = xAxisID;
      }
      if (!_lodash2.default.isNil(options.type)) {
        datasetMap.type = options.type;
      }
      if (index >= this.chartData.datasets.length) {
        this.chartData.datasets.push(datasetMap);
      }
      this.chartData.datasets[index].data = data;
      this.chartData.datasets[index].label = title;

      this.exportChartData = _lodash2.default.cloneDeep(this.chartData);
      _lodash2.default.each(this.exportChartData.datasets, function (dataset) {
        dataset.borderWidth = 3;
      });
    },
    getNextColor: function getNextColor(index) {
      var delta = index % this.baseSeriesColors.length;
      var baseColor = this.baseSeriesColors[delta];

      var times = Math.floor(index / this.baseSeriesColors.length);

      var colors = [];
      colors.push(parseInt(baseColor.slice(1, 3), 16));
      colors.push(parseInt(baseColor.slice(3, 5), 16));
      colors.push(parseInt(baseColor.slice(5, 7), 16));

      for (var j = 0; j < times; j++) {
        for (var i = 0; i < 3; i++) {
          colors[i] -= 16;
          if (colors[i] < 0) {
            colors[i] = 255 + colors[i];
          }
        }
      }

      var redHex = colors[0].toString(16).padStart(2, '0');
      var greenHex = colors[1].toString(16).padStart(2, '0');
      var blueHex = colors[2].toString(16).padStart(2, '0');

      var finalColor = '#' + redHex + greenHex + blueHex;
      return finalColor;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"position":"relative"}},[(_vm.loading)?_c('div',{staticClass:"loader-container centered-loader-container"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showExportLink),expression:"showExportLink"}],staticStyle:{"display":"flex","justify-content":"flex-end"}},[_c('div',{staticClass:"dropdown",staticStyle:{"height":"auto !important","border":"0 !important"},attrs:{"data-ref":"export-data"}},[_vm._m(0),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu dropdown-menu-right"},[_c('li',[_c('a',{ref:"exportLink",staticClass:"clickable",attrs:{"download":_vm.exportFileName}},[_vm._v("Figura")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.exportData()}}},[_vm._v("Dados")])])])])]),_vm._v(" "),_c('bar-chart',{ref:"chart",attrs:{"data":_vm.chartData,"options":_vm.chartOptions,"height":_vm.baseHeight}}),_vm._v(" "),_c('bar-chart',{ref:"exportChart",staticStyle:{"z-index":"-1","position":"absolute","width":"100%","top":"0px"},attrs:{"data":_vm.exportChartData,"options":_vm.exportChartOptions,"height":_vm.baseHeight}})],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"height":"auto !important"},attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"glyphicon glyphicon-download"})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-03394b20", __vue__options__)
  } else {
    hotAPI.reload("data-v-03394b20", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/billing-panel.vue", function(exports, require, module) {
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _gaugeChart = require("../js/components/gauge-chart");

var _gaugeChart2 = _interopRequireDefault(_gaugeChart);

var _solidGaugeChart = require("../js/components/solid-gauge-chart");

var _solidGaugeChart2 = _interopRequireDefault(_solidGaugeChart);

var _datatable = require("../js/components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require("vue-multiselect");

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true,
      tableData: [],
      table: null,
      currentEditingPromisse: null,
      promisseInput: null,
      promisseLoading: false,

      visualizationType: 'ies',
      productLineOptions: [],
      visualizationOptions: [{ name: 'Por IES', type: 'ies' }, { name: 'Por linha de produto', type: 'product_line' }],
      visualization: null,
      initialized: false,
      productLineOption: null
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default
  },
  watch: {
    visualizationType: function visualizationType(value) {
      this.loadData();
    },
    productLineOption: function productLineOption(value) {
      if (!this.initialized) {
        return;
      }
      this.loadData();
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.visualization = this.visualizationOptions[0];

    BillingChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    BillingChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loadFilters();
  },

  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    },
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 0;
    }
  },
  methods: {
    visualizationTypeInput: function visualizationTypeInput(data) {
      var _this2 = this;

      this.visualizationType = this.visualization.type;
      this.$nextTick(function () {
        _this2.loadData();
      });
    },
    receiveFilters: function receiveFilters(data) {
      var _this3 = this;

      this.productLineOptions = data.product_lines;
      if (!_lodash2.default.isNil(data.current_product_line)) {
        var filteredOptions = _lodash2.default.filter(this.productLineOptions, function (entry) {
          return entry.id === data.current_product_line;
        });
        this.productLineOption = filteredOptions[0];
      }

      this.$nextTick(function () {
        _this3.initialized = true;
        _this3.loadData();
      });
    },
    receiveTableData: function receiveTableData(data) {
      var _this4 = this;

      console.log("receiveTableData");

      this.tableData = data.universities;
      this.loading = false;

      this.$nextTick(function () {
        _this4.table = new _datatable2.default('#report-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [11, 'desc'],
          columnDefs: [{ orderData: [15], targets: [14] }, { targets: [15], visible: false, searchable: false }]
        });
      });
    },
    loadFilters: function loadFilters() {
      BillingChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      this.tableData = [];
      this.loading = true;
      var params = {
        type: this.visualizationType
      };
      if (!_lodash2.default.isNil(this.productLineOption)) {
        params.product_line_id = this.productLineOption.id;
      }
      BillingChannel.push('loadData', params).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-12 default-margin-top"},[_c('label',[_vm._v("VISUALIZAÇÃO")]),_vm._v(" "),_c('div',{staticStyle:{"margin-left":"10px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.visualizationType),expression:"visualizationType"}],attrs:{"type":"radio","name":"kind","value":"ies"},domProps:{"checked":_vm._q(_vm.visualizationType,"ies")},on:{"change":function($event){_vm.visualizationType="ies"}}}),_vm._v(" "),_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"16px"}},[_vm._v("Por IES")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.visualizationType),expression:"visualizationType"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","name":"kind","value":"product_line","checked":""},domProps:{"checked":_vm._q(_vm.visualizationType,"product_line")},on:{"change":function($event){_vm.visualizationType="product_line"}}}),_vm._v(" "),_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"16px"}},[_vm._v("Por linha de produto")])])]),_vm._v(" "),(_vm.hasProductLineOptions)?_c('div',{staticClass:"col-md-8 col-sm-12 default-margin-top"},[_c('div',{staticStyle:{"float":"right","margin-top":"-10px"}},[_c('label',[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.productLineOption),callback:function ($$v) {_vm.productLineOption=$$v},expression:"productLineOption"}})],1)]):_vm._e()]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"report-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(university){return _c('tr',[_c('td',[_vm._v(_vm._s(university.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.university_name))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(university.account_type))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.full_count))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.not_qap_count))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.qap_count))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.qap_enrolled_count))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.qap_enrolled_rate)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.projecao_movel))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.adjusted_projection))]),_vm._v(" "),_c('td',[_vm._v("\n                    "+_vm._s(university.promisse)+"\n                    ")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.velocimetro)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.velocimetro_qap)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.meta_movel_qap))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.billing_start))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.billing_start_raw))]),_vm._v(" "),_c('td',_vm._l((university.product_lines),function(productLine){return _c('p',[_vm._v("\n                      "+_vm._s(productLine)+"\n                    ")])}),0)])}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Velocímetro QueroPago\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("IES ID")]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Vendas Semestre")]),_vm._v(" "),_c('th',[_vm._v("Vendas sem QAP")]),_vm._v(" "),_c('th',[_vm._v("Vendas com QAP")]),_vm._v(" "),_c('th',[_vm._v("Matrículados QAP")]),_vm._v(" "),_c('th',[_vm._v("Taxa matrícula QAP")]),_vm._v(" "),_c('th',[_c('p',{staticStyle:{"display":"flex"}},[_vm._v("\n                    Meta móvel\n                    "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon",staticStyle:{"padding-left":"10px"}},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_vm._v("\n                          Meta móvel com base na meta prometida. "),_c('br'),_vm._v("Quando não existe meta prometida a meta projetada é utilizada.\n                        ")])])])])]),_vm._v(" "),_c('th',[_vm._v("Meta projetada")]),_vm._v(" "),_c('th',[_vm._v("Meta prometida")]),_vm._v(" "),_c('th',[_c('p',{staticStyle:{"display":"flex"}},[_vm._v("\n                    Velocímetro\n                    "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon",staticStyle:{"padding-left":"10px"}},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_vm._v("\n                          Velocímetro com base na meta prometida. "),_c('br'),_vm._v("Quando não existe meta prometida a meta projetada é utilizada.\n                        ")])])])])]),_vm._v(" "),_c('th',[_c('p',{staticStyle:{"display":"flex"}},[_vm._v("\n                    Velocímetro QAP\n                    "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon",staticStyle:{"padding-left":"10px"}},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_vm._v("\n                          Velocímetro levando em conta apenas "),_c('br'),_vm._v("o período que a IES estava no produto.\n                        ")])])])])]),_vm._v(" "),_c('th',[_vm._v("Meta móvel QAP")]),_vm._v(" "),_c('th',[_vm._v("Data de inicio")]),_vm._v(" "),_c('th',[_vm._v("Data de inicio R")]),_vm._v(" "),_c('th',[_vm._v("Linhas de produto")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-322c1064", __vue__options__)
  } else {
    hotAPI.reload("data-v-322c1064", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/bo-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],

      dateRange: null,
      filterUniversities: null,
      filterGroups: null,
      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }],

      statusOptions: [],
      reasonsOptions: [],

      filterKinds: null,
      filterLevels: null,
      filterReason: null,
      filterStatus: null,
      filterCpf: null,

      tableData: [],
      boComments: null,
      currentBoData: null,
      table: null,

      loadingFilters: true,
      dataLoading: false,
      boDataLoading: false,
      semesterEnd: null,
      semesterStart: null,
      statuses: {
        new: 'Novo',
        in_progress: 'Em Progresso',
        resolved: 'Resolvido'
      },
      all_originators: {
        "central": "Relacionamento",
        "ies": "IES",
        "ies_intern": "IES - Interno",
        "ies_partner": "IES - Parceiro",
        "ies_student": "IES - Aluno",
        "partnerships": "Parcerias",
        "qb": "QB",
        "siteops": "SiteOps",
        "student": "Aluno",
        "content": "Setor de Informações"
      }
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default,
    ModalDialog: _modalDialog2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    BoChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    BoChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });
    BoChannel.on('boData', function (payload) {
      return _this2.receiveBoData(payload);
    });

    this.loadFilters();
  },

  methods: {
    receiveBoData: function receiveBoData(data) {
      this.boDataLoading = false;
      this.boComments = data.comments;
    },
    showBoModal: function showBoModal(boData) {
      this.boDataLoading = true;
      this.currentBoData = boData;
      this.boComments = null;
      this.$refs.boModal.show();
      BoChannel.push('loadBoData', { operation_id: boData.id }).receive('timeout', function (data) {
        console.log('bo data timeout');
      });
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.universityGroupOptions = data.groups;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;

      this.statusOptions = data.status;
      this.reasonsOptions = data.reasons;

      this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)(this.semesterEnd).toDate()];

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this3 = this;

      console.log("receiveTableData#");
      this.tableData = data.bos;

      this.$nextTick(function () {
        _this3.table = new _datatable2.default('#bo-table', {
          buttons: [{ extend: 'copy', exportOptions: { columns: ':visible' } }, { extend: 'excel', exportOptions: { columns: ':visible' } }],
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30,
          order: [15, 'desc'],
          columnDefs: [{ orderData: [16], targets: [15] }, { targets: [16], visible: false, searchable: false }, { orderData: [18], targets: [17] }, { targets: [18], visible: false, searchable: false }]
        });
      });

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      BoChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      this.dataLoading = true;
      this.tableData = [];

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var filter = {};
      filter.universities = this.filterUniversities;
      filter.groups = this.filterGroups;
      filter.reasons = this.filterReason;
      filter.status = this.filterStatus;
      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;
      filter.cpf = this.filterCpf;
      filter.initialDate = initialDate;
      filter.finalDate = finalDate;

      BoChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('modal-dialog',{ref:"boModal",attrs:{"identification":_vm.stock-_vm.modal}},[_c('div',{staticClass:"modal-header"},[_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("×")]),_vm._v(" "),_c('h2',{staticClass:"modal-title"},[_vm._v("DETALHES DO BO")])]),_vm._v(" "),(_vm.currentBoData)?_c('div',{staticClass:"modal-body"},[(_vm.boDataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('label',[_vm._v("CPF:")]),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.currentBoData.cpf))]),_vm._v(" "),_c('label',[_vm._v("OBSERVAÇÔES")]),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.currentBoData.observations))]),_vm._v(" "),_c('label',[_vm._v("COMENTÁRIOS")]),_vm._v(" "),(_vm.boComments)?[(_vm.boComments.length > 0)?_vm._l((_vm.boComments),function(comment){return _c('p',[_vm._v("\n            "+_vm._s(comment.created_at)+" - "+_vm._s(comment.content)+"\n          ")])}):[_vm._v("\n          Nenhum comentário\n        ")]]:[_vm._v("\n        Carregando ...\n      ")]],2):_vm._e(),_vm._v(" "),_c('div',{staticClass:"modal-footer"},[_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("Fechar")])])]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.universityOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Selecione as universidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.universityValueSelected},model:{value:(_vm.filterUniversities),callback:function ($$v) {_vm.filterUniversities=$$v},expression:"filterUniversities"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("GRUPOS")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.universityGroupOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Selecione os grupos","selectLabel":"","deselectLabel":""},on:{"input":_vm.universityValueSelected},model:{value:(_vm.filterGroups),callback:function ($$v) {_vm.filterGroups=$$v},expression:"filterGroups"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("STATUS")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.statusOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os status","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterStatus),callback:function ($$v) {_vm.filterStatus=$$v},expression:"filterStatus"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("MOTIVO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.reasonsOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os motivos","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterReason),callback:function ($$v) {_vm.filterReason=$$v},expression:"filterReason"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{staticClass:"form-text-input"},[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CPF")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCpf),expression:"filterCpf"}],staticClass:"multiselect__input",staticStyle:{"color":"#647383","padding-left":"10px","height":"40px"},attrs:{"placeholder":"Filtro por cpf","type":"text"},domProps:{"value":(_vm.filterCpf)},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.loadData($event)},"input":function($event){if($event.target.composing){ return; }_vm.filterCpf=$event.target.value}}})])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          BO's\n        ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table data-table-tiny data-table-no-wrap",attrs:{"id":"bo-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',{staticClass:"clickable",on:{"click":function($event){return _vm.showBoModal(entry)}}},[_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.education_group))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.carteira))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.farmer))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.quali))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.statuses[entry.status]))]),_vm._v(" "),_c('td',{staticClass:"no-wrap"},[_vm._v(_vm._s(entry.cpf))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.reason))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.final_reason))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.creation_date))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.creation_date_raw))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.update_date))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.update_date_raw))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.related_type))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.all_originators[entry.originator]))])])}),0)])])]):_vm._e()])])])],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel de BO's\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{staticClass:"no-wrap"},[_c('span',{staticClass:"small-padding-right"},[_vm._v("ID IES")])]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Grupo")]),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Farmer")]),_vm._v(" "),_c('th',[_vm._v("Quali")]),_vm._v(" "),_c('th',[_vm._v("Status")]),_vm._v(" "),_c('th',[_vm._v("CPF")]),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("Grau")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Modalidade")])]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Turno")])]),_vm._v(" "),_c('th',[_vm._v("Campus")]),_vm._v(" "),_c('th',[_vm._v("Motivo")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Motivo Final")])]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Data de criação")])]),_vm._v(" "),_c('th',[_vm._v("Data de criação R")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Data de atualização")])]),_vm._v(" "),_c('th',[_vm._v("Data de atualização R")]),_vm._v(" "),_c('th',[_vm._v("Tipo de BO")]),_vm._v(" "),_c('th',[_vm._v("Origem")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8e47f37c", __vue__options__)
  } else {
    hotAPI.reload("data-v-8e47f37c", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/comparing-chart.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _lineChart = require('../js/components/vue-charts/line-chart');

var _lineChart2 = _interopRequireDefault(_lineChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      baseSeriesColors: ['#35b6cc', '#fdc029', '#09b67c', '#bf265f', '#05869B', '#FC8400', '#006386'],
      loading: false,
      chartData: {
        labels: [],
        datasets: []
      },
      exportChartData: {
        labels: [],
        datasets: []
      },
      exportChartOptions: null,
      chartOptions: {
        hover: {
          intersect: false
        },
        layout: {},
        extended: {
          drawCurrentPointLine: false,
          currentPoint: 0
        },
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        legend: {
          position: 'bottom',
          labels: {
            fontColor: 'white',
            usePointStyle: true
          },
          onClick: this.onLegendClick
        },
        elements: { point: { radius: 0 } },
        scales: {
          xAxes: [{
            ticks: {
              display: true,
              fontColor: '#ffffff'
            },
            gridLines: {
              display: true,
              drawBorder: true
            },
            style: {
              color: '#ffffff'
            }
          }],
          yAxes: [{
            ticks: {
              display: true,
              fontColor: '#ffffff'
            }
          }]
        }
      }
    };
  },

  props: {
    exportName: String,
    exportLink: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    baseHeight: {
      type: Number,
      default: function _default() {
        return 300;
      }
    }
  },
  computed: {
    exportFileName: function exportFileName() {
      if (_lodash2.default.isNil(this.exportName)) {
        return "chart.png";
      }
      return this.exportName + '.png';
    },
    showExportLink: function showExportLink() {
      if (!this.exportLink) {
        return false;
      }
      return this.chartData.datasets.length > 0;
    }
  },
  components: {
    LineChart: _lineChart2.default
  },
  mounted: function mounted() {
    this.copyOptions();
  },

  methods: {
    setPadding: function setPadding(value) {
      this.chartOptions.layout.padding = value;
    },
    setXAxesAutoSkip: function setXAxesAutoSkip(value, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.xAxes[index].ticks.autoSkip = value;
    },
    setYAxesStacked: function setYAxesStacked(index) {
      var axesIndex = index;
      if (_lodash2.default.isNil(axesIndex)) {
        axesIndex = 0;
      }
      this.chartOptions.scales.yAxes[axesIndex].stacked = true;
    },
    setXAxesStacked: function setXAxesStacked(index) {
      var axesIndex = index;
      if (_lodash2.default.isNil(axesIndex)) {
        axesIndex = 0;
      }
      this.chartOptions.scales.xAxes[axesIndex].stacked = true;
    },
    emptyNull: function emptyNull(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      return value;
    },
    exportData: function exportData() {
      var baseName = this.exportName;
      if (_lodash2.default.isNil(baseName)) {
        baseName = 'dados';
      }
      var filename = baseName + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
      var content = "Indice";
      for (var i = 0; i < this.chartData.datasets.length; i++) {
        content = content + ',' + this.chartData.datasets[i].label;
      }
      content = content + '\n';
      for (var row = 0; row < this.chartData.labels.length; row++) {
        content = content + this.chartData.labels[row];
        for (var i = 0; i < this.chartData.datasets.length; i++) {
          content = content + ',' + this.emptyNull(this.chartData.datasets[i].data[row]);
        }
        content = content + '\n';
      }
      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    },
    copyOptions: function copyOptions() {
      this.exportChartOptions = _lodash2.default.cloneDeep(this.chartOptions);

      _lodash2.default.forEach(this.exportChartOptions.scales.xAxes, function (entry) {
        entry.ticks.fontColor = '#000000';
        if (!_lodash2.default.isNil(entry.scaleLabel)) {
          entry.scaleLabel.fontColor = '#000000';
        }
      });
      _lodash2.default.forEach(this.exportChartOptions.scales.yAxes, function (entry) {
        entry.ticks.fontColor = '#000000';
        if (!_lodash2.default.isNil(entry.scaleLabel)) {
          entry.scaleLabel.fontColor = '#000000';
        }
      });
      this.exportChartOptions.legend.labels.fontColor = '#000000';

      if (!_lodash2.default.isNil(this.exportChartOptions.extended)) {
        if (this.exportChartOptions.extended.drawCurrentPointLine) {
          this.exportChartOptions.extended.drawCurrentPointFontColor = '#000000';
        }
      }
    },
    onLegendClick: function onLegendClick(eventData, legendItem) {
      var index = legendItem.datasetIndex;
      var currentChart = this.$refs.chart.$data._chart;
      var exportChart = this.$refs.exportChart.$data._chart;

      var meta = currentChart.getDatasetMeta(index);
      var exportMeta = exportChart.getDatasetMeta(index);

      if (meta.hidden === null) {
        meta.hidden = true;
        exportMeta.hidden = true;
      } else {
        meta.hidden = null;
        exportMeta.hidden = null;
      }

      currentChart.update();
      exportChart.update();
      this.updateExportLink();
    },
    setXAxisTitle: function setXAxisTitle(label, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.xAxes[index].scaleLabel = {};
      this.chartOptions.scales.xAxes[index].scaleLabel.labelString = label;
      this.chartOptions.scales.xAxes[index].scaleLabel.display = true;
      this.chartOptions.scales.xAxes[index].scaleLabel.fontColor = '#ffffff';

      this.copyOptions();
    },
    setYAxisTitle: function setYAxisTitle(label, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.yAxes[index].scaleLabel = {};
      this.chartOptions.scales.yAxes[index].scaleLabel.labelString = label;
      this.chartOptions.scales.yAxes[index].scaleLabel.display = true;
      this.chartOptions.scales.yAxes[index].scaleLabel.fontColor = '#ffffff';

      this.copyOptions();
    },
    setLegend: function setLegend(value) {
      this.chartOptions.legend.display = value;
      this.updateChart();
    },
    setYMax: function setYMax(value, index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      this.chartOptions.scales.yAxes[index].ticks.max = value;
      this.updateChart();
    },
    removeYMax: function removeYMax(index) {
      if (_lodash2.default.isNil(index)) {
        index = 0;
      }
      delete this.chartOptions.scales.yAxes[index].ticks['max'];
    },
    setYAxes: function setYAxes(value) {
      this.chartOptions.scales.yAxes = value;
      this.copyOptions();
    },
    setXAxes: function setXAxes(value) {
      this.chartOptions.scales.xAxes = value;
      this.copyOptions();
    },
    setYTick: function setYTick(value) {
      this.chartOptions.scales.yAxes[0].ticks.display = value;
      this.updateChart();
    },
    setXTick: function setXTick(value) {
      this.chartOptions.scales.xAxes[0].ticks.display = value;
      this.updateChart();
    },
    setCurrentPoint: function setCurrentPoint(index) {
      this.chartOptions.extended.drawCurrentPointLine = true;
      this.chartOptions.extended.currentPoint = index;
      this.copyOptions();
    },
    setHorizontalPoint: function setHorizontalPoint(series, value) {
      this.chartOptions.extended.drawHorizontalLine = true;
      this.chartOptions.extended.drawHorizontalLinePoint = value;
      this.chartOptions.extended.drawHorizontalLineDataset = series;
    },
    updateChart: function updateChart() {
      this.$refs.chart.updateChart();
      this.$refs.exportChart.updateChart();

      if (this.exportLink) {
        var element = this.$refs.exportChart.$data._chart.canvas;
        var chart_data = element.toDataURL("image/jpg");
        this.$refs.exportLink.href = chart_data;
      }
    },
    updateExportLink: function updateExportLink() {
      if (this.exportLink) {
        var element = this.$refs.exportChart.$data._chart.canvas;
        var chart_data = element.toDataURL("image/jpg");
        this.$refs.exportLink.href = chart_data;
      }
    },
    setLoader: function setLoader() {
      this.loading = true;
    },
    resetLoader: function resetLoader() {
      this.loading = false;
    },
    clearSeries: function clearSeries() {
      while (this.chartData.datasets.length > 0) {
        this.chartData.datasets.splice(0, 1);
      }
      while (this.exportChartData.datasets.length > 0) {
        this.exportChartData.datasets.splice(0, 1);
      }
      this.updateChart();
    },
    setLabels: function setLabels(labels) {
      this.chartData.labels = labels;
    },
    setSeries: function setSeries(index, data, title) {
      var seriesColor = this.baseSeriesColors[index];
      this.setSeriesWithOptions(index, data, title, { seriesColor: seriesColor, fill: false });
    },
    getNextColor: function getNextColor(index) {
      var delta = index % this.baseSeriesColors.length;
      var baseColor = this.baseSeriesColors[delta];

      var times = Math.floor(index / this.baseSeriesColors.length);

      var colors = [];
      colors.push(parseInt(baseColor.slice(1, 3), 16));
      colors.push(parseInt(baseColor.slice(3, 5), 16));
      colors.push(parseInt(baseColor.slice(5, 7), 16));

      for (var j = 0; j < times; j++) {
        for (var i = 0; i < 3; i++) {
          colors[i] -= 16;
          if (colors[i] < 0) {
            colors[i] = 255 + colors[i];
          }
        }
      }

      var redHex = colors[0].toString(16).padStart(2, '0');
      var greenHex = colors[1].toString(16).padStart(2, '0');
      var blueHex = colors[2].toString(16).padStart(2, '0');

      var finalColor = '#' + redHex + greenHex + blueHex;
      return finalColor;
    },
    setSeriesWithOptions: function setSeriesWithOptions(index, data, title, options) {
      var color = options.seriesColor;
      var fill = options.fill;
      var yAxisID = options.yAxisID;
      var xAxisID = options.xAxisID;
      if (_lodash2.default.isNil(color)) {
        color = this.getNextColor(index);
      }
      if (_lodash2.default.isNil(fill)) {
        fill = false;
      }
      var datasetMap = {
        label: '',
        backgroundColor: color,
        borderColor: color,
        data: [],
        fill: fill,
        borderWidth: 2
      };
      if (!_lodash2.default.isNil(yAxisID)) {
        datasetMap.yAxisID = yAxisID;
      }
      if (!_lodash2.default.isNil(xAxisID)) {
        datasetMap.xAxisID = xAxisID;
      }
      if (!_lodash2.default.isNil(options.type)) {
        datasetMap.type = options.type;
      }
      if (index >= this.chartData.datasets.length) {
        this.chartData.datasets.push(datasetMap);
      }
      this.chartData.datasets[index].data = data;
      this.chartData.datasets[index].label = title;

      this.exportChartData = _lodash2.default.cloneDeep(this.chartData);
      _lodash2.default.each(this.exportChartData.datasets, function (dataset) {
        dataset.borderWidth = 3;
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"position":"relative"}},[(_vm.loading)?_c('div',{staticClass:"loader-container centered-loader-container"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showExportLink),expression:"showExportLink"}],staticStyle:{"display":"flex","justify-content":"flex-end"}},[_c('div',{staticClass:"dropdown",staticStyle:{"height":"auto !important","border":"0 !important"},attrs:{"data-ref":"export-data"}},[_vm._m(0),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu dropdown-menu-right"},[_c('li',[_c('a',{ref:"exportLink",staticClass:"clickable",attrs:{"download":_vm.exportFileName}},[_vm._v("Figura")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.exportData()}}},[_vm._v("Dados")])])])])]),_vm._v(" "),_c('line-chart',{ref:"chart",attrs:{"data":_vm.chartData,"options":_vm.chartOptions,"height":_vm.baseHeight}}),_vm._v(" "),_c('line-chart',{ref:"exportChart",staticStyle:{"z-index":"-1","position":"absolute","width":"100%","top":"0px","height":"100%"},attrs:{"data":_vm.exportChartData,"options":_vm.exportChartOptions,"height":_vm.baseHeight}})],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"height":"auto !important"},attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"glyphicon glyphicon-download"})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4cd3bfe5", __vue__options__)
  } else {
    hotAPI.reload("data-v-4cd3bfe5", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/comparing-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelFilter = require('./panel-filter');

var _panelFilter2 = _interopRequireDefault(_panelFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      colConfig: 6,
      loading: false,
      loadingFilters: true,
      movelMean: true,
      grouping: null,
      groupingMax: null,
      seriesSelection: null,
      currentGroupingOptions: [],
      groupingMaxOptions: [{ name: 'Top 5', id: 5 }, { name: 'Top 10', id: 10 }, { name: 'Top 15', id: 15 }, { name: 'Top 20', id: 20 }, { name: 'Máximo', id: 0 }],
      groupingOptions: [{ name: "Estado", id: "state" }, { name: "Carteira", id: "account_type" }, { name: "IES", id: "university" }, { name: "Grupo Educacional", id: "group" }, { name: "Nível", id: "level" }, { name: "Modalidade", id: "kind" }, { name: "Cidade", id: "city" }],
      seriesSelectionOptions: [{ name: 'Maiores altas', id: 'higher_up' }, { name: 'Maiores baixas', id: 'higher_down' }, { name: 'Maiores valores', id: 'higher' }, { name: 'Menores valores', id: 'lower' }],
      seriesSelectionFieldOptions: [{ name: 'Ordens', id: 'orders' }, { name: 'Visitas', id: 'visits' }, { name: 'Pagos', id: 'paids' }, { name: 'Receita', id: 'income' }, { name: 'Taxa de Sucesso', id: 'success_rate' }, { name: 'Taxa de Atratividade', id: 'atraction_rate' }, { name: 'Taxa de Conversão', id: 'conversion_rate' }],
      fullData: [],
      initiatedChartAvailable: true,
      paidsChartAvailable: true,
      visitsChartAvailable: true,
      cumRevenueChartAvailable: true,
      meanIncomeChartAvailable: true,
      ticketChartAvailable: true,
      velocityChartAvailable: false,
      incomeChartAvailable: true,
      universityVisitsChartAvailable: true,
      rawPaidsChartAvailable: true,
      cumPaidsChartAvailable: true,
      charts: [],
      seriesSelectionField: null,
      currentPrimaryType: null
    };
  },

  components: {
    PanelFilter: _panelFilter2.default,
    Multiselect: _vueMultiselect2.default,
    ComparingChart: _comparingChart2.default
  },
  computed: {
    canSelectSeries: function canSelectSeries() {
      if (this.currentPrimaryType != 'universities') {
        return true;
      }
      return _lodash2.default.isNil(this.grouping) || this.grouping['id'] != 'university';
    },
    consolidatedButtonClass: function consolidatedButtonClass() {
      if (this.colConfig == 12) {
        return "clickable";
      }
      return "active-border clickable";
    },
    expandedButtonClass: function expandedButtonClass() {
      if (this.colConfig == 6) {
        return "clickable";
      }
      return "active-border clickable";
    },
    conversionChartClass: function conversionChartClass() {
      return 'col-md-' + this.colConfig + ' col-sm-12';
    },
    chartClass: function chartClass() {
      return 'col-md-' + this.colConfig + ' col-sm-12';
    }
  },
  mounted: function mounted() {
    var _this = this;

    ComparingChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    ComparingChannel.on('ordersData', function (payload) {
      return _this.receiveOrdersData(payload);
    });

    ComparingChannel.on('citiesFilterData', function (payload) {
      return _this.receiveCitiesFilter(payload);
    });
    ComparingChannel.on('campusFilterData', function (payload) {
      return _this.receiveCampusFilter(payload);
    });

    this.currentGroupingOptions = this.groupingOptions;
    this.groupingMax = this.groupingMaxOptions[0];
    this.seriesSelection = this.seriesSelectionOptions[0];
    this.seriesSelectionField = this.seriesSelectionFieldOptions[0];

    this.charts.push(this.$refs.initiatedOrdersChart);
    this.charts.push(this.$refs.paidOrdersChart);
    this.charts.push(this.$refs.offerVisitsChart);
    this.charts.push(this.$refs.successChart);
    this.charts.push(this.$refs.conversionChart);
    this.charts.push(this.$refs.atractionChart);
    this.charts.push(this.$refs.universityVisitsChart);
    this.charts.push(this.$refs.incomeChart);
    this.charts.push(this.$refs.cumRevenueChart);
    this.charts.push(this.$refs.ticketChart);
    this.charts.push(this.$refs.meanIncomeChart);
    this.charts.push(this.$refs.rawPaidsChart);
    this.charts.push(this.$refs.cumPaidsChart);
    this.charts.push(this.$refs.velocityCompareChart);

    this.loadFilters();
  },

  methods: {
    consolidatedCharts: function consolidatedCharts() {
      this.colConfig = 6;
    },
    expandedCharts: function expandedCharts() {
      this.colConfig = 12;
    },
    receiveOrdersData: function receiveOrdersData(data) {
      this.fullData = data;
      console.log('receiveOrdersData');
      this.populateCharts();
    },
    clearCharts: function clearCharts() {
      _lodash2.default.each(this.charts, function (chart) {
        chart.clearSeries();
      });
    },
    populateCharts: function populateCharts() {
      var _this2 = this;

      if (this.fullData.length == 0) {
        return;
      }
      this.clearCharts();
      if ((0, _keys2.default)(this.fullData.university_visits).length > 0) {
        this.universityVisitsChartAvailable = true;
      } else {
        this.universityVisitsChartAvailable = false;
      }

      if ((0, _keys2.default)(this.fullData.velocimeter_mean).length > 0) {
        this.velocityChartAvailable = true;
      } else {
        this.velocityChartAvailable = false;
      }

      _lodash2.default.each(this.charts, function (chart) {
        chart.setLabels(_this2.fullData.dates);
      });

      var keys = this.fullData.keys;
      var keysNames = this.fullData.keys_names;
      var currentMax = this.groupingMax.id;
      if (currentMax == 0) currentMax = 30;

      var maximo = keys.length > currentMax ? currentMax : keys.length;
      for (var i = 0; i < maximo; i++) {
        this.$refs.initiatedOrdersChart.setSeries(i, this.fullData.initiateds[keys[i]], '' + keysNames[i]);
        this.$refs.paidOrdersChart.setSeries(i, this.fullData.paids[keys[i]], '' + keysNames[i]);
        this.$refs.offerVisitsChart.setSeries(i, this.fullData.visits[keys[i]], '' + keysNames[i]);
        this.$refs.successChart.setSeries(i, this.fullData.success[keys[i]], '' + keysNames[i]);
        this.$refs.conversionChart.setSeries(i, this.fullData.conversion[keys[i]], '' + keysNames[i]);
        this.$refs.atractionChart.setSeries(i, this.fullData.atraction[keys[i]], '' + keysNames[i]);
        this.$refs.universityVisitsChart.setSeries(i, this.fullData.university_visits[keys[i]], '' + keysNames[i]);
        this.$refs.cumRevenueChart.setSeries(i, this.fullData.cum_revenue[keys[i]], '' + keysNames[i]);
        this.$refs.incomeChart.setSeries(i, this.fullData.income[keys[i]], '' + keysNames[i]);
        this.$refs.ticketChart.setSeries(i, this.fullData.ticket[keys[i]], '' + keysNames[i]);
        this.$refs.meanIncomeChart.setSeries(i, this.fullData.mean_income[keys[i]], '' + keysNames[i]);
        this.$refs.rawPaidsChart.setSeries(i, this.fullData.raw.paids[keys[i]], '' + keysNames[i]);
        this.$refs.cumPaidsChart.setSeries(i, this.fullData.cum_paids[keys[i]], '' + keysNames[i]);
        this.$refs.velocityCompareChart.setSeries(i, this.fullData.velocimeter_mean[keys[i]], '' + keysNames[i]);
      }

      this.$nextTick(function () {
        _lodash2.default.each(_this2.charts, function (chart) {
          chart.updateChart();
        });
      });

      this.loading = false;
    },
    groupMaxSelected: function groupMaxSelected() {
      var _this3 = this;

      console.log('groupMaxSelected');
      if (this.fullData.length == 0) {
        return;
      }
      this.loading = true;
      this.$nextTick(function () {
        _this3.populateCharts();
      });
    },
    groupValueSelected: function groupValueSelected() {
      console.log('groupValueSelected');
    },
    filterGroupingOptions: function filterGroupingOptions(fields) {
      if (!_lodash2.default.isNil(this.grouping)) {
        if (_lodash2.default.includes(fields, this.grouping.id)) {
          this.grouping = null;
        }
      }
      return _lodash2.default.filter(this.groupingOptions, function (entry) {
        return !_lodash2.default.includes(fields, entry["id"]);
      });
    },
    currentPrimarySelected: function currentPrimarySelected(data) {
      this.currentPrimaryType = data[0].type;
      console.log('currentPrimarySelected: ' + (0, _stringify2.default)(data) + ' currentPrimaryType: ' + this.currentPrimaryType);
      if (data[0].type == 'university') {
        this.currentGroupingOptions = this.filterGroupingOptions(['university', 'group']);
      } else if (data[0].type == 'account_type') {
        this.currentGroupingOptions = this.filterGroupingOptions(['account_type']);
      } else if (data[0].type == 'group') {
        this.currentGroupingOptions = this.filterGroupingOptions(['group']);
      } else {
        this.currentGroupingOptions = this.groupingOptions;
      }
    },
    baseGroupingOptions: function baseGroupingOptions() {},
    currentLocationTypeSelected: function currentLocationTypeSelected(data) {
      console.log('currentLocationTypeSelected: ' + (0, _stringify2.default)(data));
      var pushComplete = false;
      if (data.type == 'city') {
        pushComplete = true;
        this.$refs.currentFilter.setCitiesLoading();
      }
      if (data.type == 'campus') {
        pushComplete = true;
        this.$refs.currentFilter.setCampusLoading();
      }
      if (pushComplete) {

        var currentFilter = this.$refs.currentFilter.filterData(true);
        currentFilter.completeField = data.type;

        ComparingChannel.push('completeLocation', currentFilter).receive('timeout', function (data) {
          console.log('complete timeout');
        });
      } else {}
    },
    currentLocationSelected: function currentLocationSelected(data) {
      console.log('currentLocationSelected: ' + (0, _stringify2.default)(data));
    },
    currentRangeSelected: function currentRangeSelected() {
      console.log('currentRangeSelected');
    },
    currentKindSelected: function currentKindSelected() {
      console.log('currentKindSelected');
    },
    currentLevelSelected: function currentLevelSelected() {
      console.log('currentLevelSelected');
    },
    receiveCitiesFilter: function receiveCitiesFilter(data) {
      this.$refs.currentFilter.setCities(data.cities);
    },
    receiveCampusFilter: function receiveCampusFilter(data) {
      this.$refs.currentFilter.setCampus(data.campus);
    },
    receiveFilters: function receiveFilters(data) {
      console.log('receiveFilters');
      this.$refs.currentFilter.setLevels(data.levels);
      this.$refs.currentFilter.setKinds(data.kinds);
      this.$refs.currentFilter.setLocations(data.locationTypes);
      this.$refs.currentFilter.setGroups(data.groupTypes);
      this.$refs.currentFilter.setAccountTypes(data.accountTypes);
      this.$refs.currentFilter.setUniversities(data.universities);
      this.$refs.currentFilter.setUniversityGroups(data.groups);

      if ((0, _moment2.default)(data.semester_end) > (0, _moment2.default)()) {
        this.$refs.currentFilter.setSemesterRange((0, _moment2.default)(data.semester_start).toDate(), (0, _moment2.default)().toDate());
      } else {
        this.$refs.currentFilter.setSemesterRange((0, _moment2.default)(data.semester_start).toDate(), (0, _moment2.default)(data.semester_end).toDate());
      }

      this.$refs.currentFilter.setDealOwners(data.dealOwners);
      this.$refs.currentFilter.setQualityOwners(data.qualityOwners);
      this.$refs.currentFilter.setRegions(data.regions);
      this.$refs.currentFilter.setStates(data.states);
      this.$refs.currentFilter.setCities([]);
      this.$refs.currentFilter.setCampus([]);
      this.$refs.currentFilter.setProductLines(data.product_lines);

      this.loadingFilters = false;
    },
    loadFilters: function loadFilters() {
      ComparingChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      var currentFilter = this.$refs.currentFilter.filterData();
      if (!currentFilter) {
        console.log("currentFilter vazio");
        return;
      }

      this.loading = true;
      var filter = { currentFilter: currentFilter };
      currentFilter.grouping = this.grouping;
      currentFilter.seriesSelection = this.seriesSelection["id"];
      currentFilter.seriesSelectionField = this.seriesSelectionField["id"];

      this.clearCharts();

      ComparingChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      }).receive('error', function (data) {
        console.log('loadData error');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-filter',{ref:"currentFilter",attrs:{"period-disabled":false,"index":"0"},on:{"primaryFilterSelected":_vm.currentPrimarySelected,"locationTypeSelected":_vm.currentLocationTypeSelected,"locationSelected":_vm.currentLocationSelected,"timeRangeSelected":_vm.currentRangeSelected,"kindSelected":_vm.currentKindSelected,"levelSelected":_vm.currentLevelSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("AGRUPAMENTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.currentGroupingOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":_vm.groupValueSelected},model:{value:(_vm.grouping),callback:function ($$v) {_vm.grouping=$$v},expression:"grouping"}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.grouping),expression:"grouping"}],staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("NÚMERO DE SÉRIES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.groupingMaxOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":_vm.groupMaxSelected},model:{value:(_vm.groupingMax),callback:function ($$v) {_vm.groupingMax=$$v},expression:"groupingMax"}})],1),_vm._v(" "),(_vm.canSelectSeries)?[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.grouping),expression:"grouping"}],staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("SELEÇÃO DE SÉRIES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.seriesSelectionOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":function($event){}},model:{value:(_vm.seriesSelection),callback:function ($$v) {_vm.seriesSelection=$$v},expression:"seriesSelection"}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.grouping),expression:"grouping"}],staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("CAMPO DE SELEÇÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"allow-empty":false,"options":_vm.seriesSelectionFieldOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":function($event){}},model:{value:(_vm.seriesSelectionField),callback:function ($$v) {_vm.seriesSelectionField=$$v},expression:"seriesSelectionField"}})],1)]:_vm._e()],2),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"default-margin-left"},[_vm._m(1)]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"small-margin-left",staticStyle:{"display":"none"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.movelMean),expression:"movelMean"}],attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.movelMean)?_vm._i(_vm.movelMean,null)>-1:(_vm.movelMean)},on:{"change":function($event){var $$a=_vm.movelMean,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.movelMean=$$a.concat([$$v]))}else{$$i>-1&&(_vm.movelMean=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.movelMean=$$c}}}}),_vm._v(" Média móvel\n                ")]),_vm._v(" "),_c('div',{staticStyle:{"justify-content":"flex-end","margin-left":"50px"}},[_c('div',{class:_vm.consolidatedButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:" glyphicon glyphicon-barcode",attrs:{"title":"Gráficos lado a lado"},on:{"click":_vm.consolidatedCharts}})]),_vm._v(" "),_c('div',{class:_vm.expandedButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:"glyphicon glyphicon-book",attrs:{"title":"Gráficos em linhas"},on:{"click":_vm.expandedCharts}})])])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("TAXA DE ATRATIVIDADE (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"atractionChart",attrs:{"export-name":"taxa_atratividade"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("TAXA DE SUCESSO (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"successChart",attrs:{"export-name":"taxa_sucesso"}})],1)]),_vm._v(" "),_c('div',{class:_vm.conversionChartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("CONVERSÃO (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"conversionChart",attrs:{"export-name":"taxa_conversao"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.initiatedChartAvailable),expression:"initiatedChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("ORDENS INICIADAS "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"initiatedOrdersChart",attrs:{"export-name":"ordens_iniciadas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.paidsChartAvailable),expression:"paidsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("ORDENS PAGAS "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"paidOrdersChart",attrs:{"export-name":"ordens_pagas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.visitsChartAvailable),expression:"visitsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VISITAS EM PÁGINAS DE OFERTA "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"offerVisitsChart",attrs:{"export-name":"visitas_ofertas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.universityVisitsChartAvailable),expression:"universityVisitsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VISITAS PÁGINA DA UNIVERSIDADE "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"universityVisitsChart",attrs:{"export-name":"visitas_universidade"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.incomeChartAvailable),expression:"incomeChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"incomeChart",attrs:{"export-name":"receita"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.velocityChartAvailable),expression:"velocityChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VELOCIMETRO "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"velocityCompareChart",attrs:{"export-name":"velocimetro"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.ticketChartAvailable),expression:"ticketChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("TICKET MEDIO "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"ticketChart",attrs:{"export-name":"ticket_medio"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.meanIncomeChartAvailable),expression:"meanIncomeChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("FAT/ORDEM "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"meanIncomeChart",attrs:{"export-name":"fat_ordem"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.cumRevenueChartAvailable),expression:"cumRevenueChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA ACUMULADA")]),_vm._v(" "),_c('comparing-chart',{ref:"cumRevenueChart",attrs:{"export-name":"receita_acumulada"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.rawPaidsChartAvailable),expression:"rawPaidsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("PAGOS (sem media móvel)")]),_vm._v(" "),_c('comparing-chart',{ref:"rawPaidsChart",attrs:{"export-name":"pagos_base"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.cumPaidsChartAvailable),expression:"cumPaidsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("ACUMULADO DE PAGOS")]),_vm._v(" "),_c('comparing-chart',{ref:"cumPaidsChart",attrs:{"export-name":"acumulado_pagos"}})],1)])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel comparativo\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dropdown",attrs:{"data-ref":"export-data"}},[_c('div',{staticClass:"dropdown-toggle",attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"flex-grow dropdown-label",staticStyle:{"margin-right":"5px"}},[_vm._v("Exportar")]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-chevron-down float-right"})]),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu"})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d39321ea", __vue__options__)
  } else {
    hotAPI.reload("data-v-d39321ea", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/competitors-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      loading: true,
      loadingFilters: true,
      loadingCompetitorsData: false,
      table: null,
      semesterStart: null,
      semesterEnd: null,
      showTables: false,
      stateFilterLoading: false,
      cityFilterLoading: false,
      visualizationType: 'percent',

      loseCount: 0,
      winCount: 0,
      currentUniversityName: null,
      onlyQp: false,

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }],
      dateRange: null,
      universityFilter: null,
      filterKinds: [],
      filterLevels: [],
      filterState: [],
      filterCity: [],

      universityOptions: [],
      kindOptions: [],
      levelOptions: [],
      stateOptions: [],
      cityOptions: [],
      universityName: '',

      competitorsTable: [],
      competitorsTablePercents: [],
      baseCompetitorsTable: [],

      chartNumbersLabels: [],
      chartNumbers: [],
      chartPercents: [],
      chartPercentsLabels: []
    };
  },

  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    BaseChart: _baseChart2.default
  },
  watch: {
    visualizationType: function visualizationType(value) {
      this.visualizationTypeInput(value);
    }
  },
  computed: {
    numberView: function numberView() {
      return this.visualizationType == 'number';
    },
    percentView: function percentView() {
      return this.visualizationType == 'percent';
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    CompetitorsChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    CompetitorsChannel.on('locationFilters', function (payload) {
      return _this2.receiveLocationFilters(payload);
    });
    CompetitorsChannel.on('competitorsData', function (payload) {
      return _this2.receiveCompetitorsData(payload);
    });
    CompetitorsChannel.on('citiesFilters', function (payload) {
      return _this2.receiveCitiesFilters(payload);
    });

    this.loadFilters();
  },

  methods: {
    visualizationTypeInput: function visualizationTypeInput(data) {
      var _this3 = this;

      this.$nextTick(function () {
        if (!_lodash2.default.isNil(_this3.$refs.loseChart)) {
          _this3.$refs.loseChart.clearSeries();
          _this3.setChartData();
        }
      });
    },
    timeRangeSelected: function timeRangeSelected(dateRange) {
      console.log("timeRangeSelected# dateRange: " + dateRange);
    },
    universityRemoved: function universityRemoved() {
      console.log("universityRemoved");
      this.nextTickloadLocationFilters();
    },
    kindRemoved: function kindRemoved() {
      console.log("kindRemoved");
      this.nextTickloadLocationFilters();
    },
    levelRemoved: function levelRemoved() {
      console.log("levelRemoved");
      this.nextTickloadLocationFilters();
    },
    kindSelected: function kindSelected(data) {
      console.log("kindSelected# data: " + (0, _stringify2.default)(data));
      this.nextTickloadLocationFilters();
    },
    levelSelected: function levelSelected(data) {
      console.log("levelSelected# data: " + (0, _stringify2.default)(data));
      this.nextTickloadLocationFilters();
    },
    stateRemoved: function stateRemoved() {
      console.log("stateRemoved");
      this.nextTickloadCityFilters();
    },
    stateSelected: function stateSelected(data) {
      console.log("stateSelected# data: " + (0, _stringify2.default)(data));
      this.nextTickloadCityFilters();
    },
    universitySelected: function universitySelected(data) {
      console.log("universitySelected# data: " + (0, _stringify2.default)(data));
      this.nextTickloadLocationFilters();
    },
    nextTickloadLocationFilters: function nextTickloadLocationFilters() {
      var _this4 = this;

      this.$nextTick(function () {
        _this4.loadLocationFilters();
      });
    },
    nextTickloadCityFilters: function nextTickloadCityFilters() {
      var _this5 = this;

      this.$nextTick(function () {
        _this5.loadCityFilters();
      });
    },
    loadCityFilters: function loadCityFilters() {
      if (_lodash2.default.isNil(this.universityFilter)) {
        this.cityOptions = [];
      } else {
        this.cityFilterLoading = true;
        var params = this.filterParams();
        CompetitorsChannel.push('completeCities', params).receive('timeout', function (data) {
          console.log('completeCities timeout');
        });
      }
    },
    loadLocationFilters: function loadLocationFilters() {
      if (_lodash2.default.isNil(this.universityFilter)) {
        this.stateOptions = [];
        this.cityOptions = [];
      } else {
        this.stateFilterLoading = true;
        this.cityFilterLoading = true;
        var params = this.filterParams();
        CompetitorsChannel.push('completeLocation', params).receive('timeout', function (data) {
          console.log('complete timeout');
        });
      }
    },
    receiveCitiesFilters: function receiveCitiesFilters(data) {
      this.cityOptions = data.cities;
      this.cityFilterLoading = false;
    },
    receiveLocationFilters: function receiveLocationFilters(data) {
      this.cityOptions = data.cities;
      this.stateFilterLoading = false;
      this.cityFilterLoading = false;
    },
    receiveFilters: function receiveFilters(data) {
      console.log('receiveFilters');
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.universityOptions = data.universities;
      this.stateOptions = data.states;

      this.dateRange = [(0, _moment2.default)().subtract(6, 'months').toDate(), (0, _moment2.default)().toDate()];

      this.loadingFilters = false;
    },
    setChartData: function setChartData() {

      if (this.visualizationType == 'number') {
        var options = { labelsData: this.chartNumbersLabels };
        this.$refs.loseChart.setSeriesWithOptions(0, this.chartNumbers, '', options);

        this.competitorsTable = this.baseCompetitorsTable;
      } else {
        var _options = { labelsData: this.chartPercentsLabels };
        this.$refs.loseChart.setSeriesWithOptions(0, this.chartPercents, '', _options);

        this.competitorsTable = this.competitorsTablePercents;
      }
      this.$refs.loseChart.setPadding({ left: 0, right: 0, top: 50, bottom: 0 });
      this.$refs.loseChart.updateChart();
    },
    receiveCompetitorsData: function receiveCompetitorsData(data) {
      var _this6 = this;

      console.log('receiveCompetitorsData');
      this.showTables = true;

      this.baseCompetitorsTable = data.competitors_table;
      this.competitorsTablePercents = data.competitors_table_percents;

      this.currentUniversityName = data.university_name;

      this.$refs.loseChart.setDrawValues(true);
      this.$refs.loseChart.setToolTips(false);
      this.$refs.loseChart.setAlternativeDataSet(true);
      this.$refs.loseChart.setYBeginAtZero(true);
      this.$refs.loseChart.setDisplayLegend(false);
      this.$refs.loseChart.setLabels(data.lose_ies);

      this.chartNumbers = data.lose_counts;
      this.chartNumbersLabels = data.lose_counts_labels;
      this.chartPercents = data.lose_percents;
      this.chartPercentsLabels = data.lose_percents_labels;

      this.setChartData();

      this.loadingCompetitorsData = false;

      this.$nextTick(function () {
        _this6.$refs.loseChart.updateChart();

        _this6.table = new _datatable2.default('#competitors-report-table', {
          deferRender: true,
          searchDelay: 500,
          order: [2, 'desc']
        });
      });
    },
    loadFilters: function loadFilters() {
      CompetitorsChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    filterParams: function filterParams() {
      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var params = {
        initialDate: initialDate, finalDate: finalDate,
        levels: this.filterLevels,
        kinds: this.filterKinds,
        cities: this.filterCity,
        states: this.filterState,
        only_qp: this.onlyQp
      };
      if (!_lodash2.default.isNil(this.universityFilter)) {
        params.university_id = this.universityFilter.id;
      }
      return params;
    },
    loadData: function loadData() {
      var _this7 = this;

      if (_lodash2.default.isNil(this.universityFilter)) {
        alert('Selecione uma universidade');
        return;
      }

      this.showTables = false;
      this.competitorsTable = [];

      this.chartNumbersLabels = [];
      this.chartPercentsLabels = [];
      this.chartNumbers = [];
      this.chartPercents = [];

      this.$refs.loseChart.clearSeries();

      var params = this.filterParams();
      CompetitorsChannel.push('loadData', params).receive('ok', function (data) {
        _this7.universityName = data.university_name;
        _this7.loadingCompetitorsData = true;
      }).receive('timeout', function (data) {
        console.log('data timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loadingFilters || _vm.loadingCompetitorsData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('label',[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.universitySelected,"remove":_vm.universityRemoved},model:{value:(_vm.universityFilter),callback:function ($$v) {_vm.universityFilter=$$v},expression:"universityFilter"}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-3"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.onlyQp),expression:"onlyQp"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox","checked":""},domProps:{"checked":Array.isArray(_vm.onlyQp)?_vm._i(_vm.onlyQp,null)>-1:(_vm.onlyQp)},on:{"change":function($event){var $$a=_vm.onlyQp,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.onlyQp=$$a.concat([$$v]))}else{$$i>-1&&(_vm.onlyQp=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.onlyQp=$$c}}}}),_c('label',[_vm._v("APENAS CONCORRENTES QUERO PAGO")])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"select":_vm.kindSelected,"remove":_vm.kindRemoved},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"select":_vm.levelSelected,"remove":_vm.levelRemoved},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[(_vm.stateFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("ESTADO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.stateOptions,"multiple":true,"label":"name","track-by":"type","placeholder":"Todos os estados","selectLabel":"","deselectLabel":""},on:{"select":_vm.stateSelected,"remove":_vm.stateRemoved},model:{value:(_vm.filterState),callback:function ($$v) {_vm.filterState=$$v},expression:"filterState"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[(_vm.cityFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.cityOptions,"multiple":true,"label":"name","track-by":"name","placeholder":"Todas as cidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterCity),callback:function ($$v) {_vm.filterCity=$$v},expression:"filterCity"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n              Atualizar\n            ")])])])])])]),_vm._v(" "),(_vm.showTables)?_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[_c('div',{staticClass:"col-md-4 col-sm-12 default-margin-top"},[_c('label',[_vm._v("VISUALIZAÇÃO")]),_vm._v(" "),_c('div',{staticStyle:{"margin-left":"10px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.visualizationType),expression:"visualizationType"}],attrs:{"type":"radio","name":"kind","value":"percent"},domProps:{"checked":_vm._q(_vm.visualizationType,"percent")},on:{"change":function($event){_vm.visualizationType="percent"}}}),_vm._v(" "),_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"16px"}},[_vm._v("Percentual")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.visualizationType),expression:"visualizationType"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","name":"kind","value":"number","checked":""},domProps:{"checked":_vm._q(_vm.visualizationType,"number")},on:{"change":function($event){_vm.visualizationType="number"}}}),_vm._v(" "),_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"16px"}},[_vm._v("Número de alunos")])])])]):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showTables),expression:"showTables"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-heading"},[_vm._v("\n          ALUNOS PERDIDOS\n          "),(_vm.visualizationType == 'percent')?[_vm._v("\n            ( % de\n          ")]:[_vm._v("\n            ( número de\n          ")],_vm._v("\n            alunos que se interessou por "+_vm._s(_vm.universityName)+" mas comprou outra IES )\n        ")],2),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('base-chart',{ref:"loseChart",attrs:{"base-height":600,"export-name":'alunos_perdidos_' + _vm.universityName}})],1)])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-heading"},[_vm._v("\n          CONCORRÊNCIA\n        ")]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingCompetitorsData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),(_vm.showTables)?_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table",attrs:{"id":"competitors-report-table"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("ID (Universidade)")]),_vm._v(" "),_c('th',[_vm._v("Universidade")]),_vm._v(" "),_c('th',[(_vm.visualizationType == 'percent')?_c('span',[_vm._v("%")]):_vm._e(),_vm._v(" Perdidos\n                      "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[(_vm.visualizationType == 'percent')?[_vm._v("Percentual dos ")]:[_vm._v("Número de ")],_vm._v("\n                            alunos que "),_c('br'),_vm._v("teve interesse em "+_vm._s(_vm.currentUniversityName)+" "),_c('br'),_vm._v("e comprou outra IES\n                          ")],2)])])]),_vm._v(" "),_c('th',[(_vm.visualizationType == 'percent')?_c('span',[_vm._v("%")]):_vm._e(),_vm._v(" Ganhos\n                      "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[(_vm.visualizationType == 'percent')?[_vm._v("Percentual dos ")]:[_vm._v("Número de ")],_vm._v("\n                            alunos que "),_c('br'),_vm._v("comprou "+_vm._s(_vm.currentUniversityName)+" "),_c('br'),_vm._v("e teve interesse em outras IES\n                          ")],2)])])]),_vm._v(" "),_c('th',{directives:[{name:"show",rawName:"v-show",value:(_vm.numberView),expression:"numberView"}]},[_vm._v("\n                      Diferença\n                    ")])])]),_vm._v(" "),_c('tbody',{attrs:{"id":"table-body"}},_vm._l((_vm.competitorsTable),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.id_ies_compra))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.ies_compra))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.n_users))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.win))]),_vm._v(" "),_c('td',{directives:[{name:"show",rawName:"v-show",value:(_vm.numberView),expression:"numberView"}]},[_vm._v(_vm._s(entry.win - entry.n_users))])])}),0)])])]):_vm._e()])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Fluxo de Concorrência\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2a0ff290", __vue__options__)
  } else {
    hotAPI.reload("data-v-2a0ff290", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/courses-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true,
      tableData: [],
      table: null,
      filterKinds: null,
      filterLevels: null,
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      universityOptions: [],
      courseOptions: [],
      filterIes: [],
      filterCourse: [],
      iesFilterLoading: false,
      courseFilterLoading: false,
      groupKind: false,
      groupIes: false,
      groupCity: false,
      hasKindField: false,
      hasIesField: false,
      cleanCanonicals: true,
      showValidIes: false
    };
  },
  mounted: function mounted() {
    var _this = this;

    CoursesChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    CoursesChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    CoursesChannel.on('citiesComplete', function (payload) {
      return _this.receiveCitiesComplete(payload);
    });
    CoursesChannel.on('universitiesComplete', function (payload) {
      return _this.receiveUniversitiesComplete(payload);
    });
    CoursesChannel.on('coursesComplete', function (payload) {
      return _this.receiveCoursesComplete(payload);
    });

    this.loadFilters();
    this.loadUniversities();
    this.loadCourses();
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default
  },
  watch: {
    cleanCanonicals: function cleanCanonicals(value) {
      this.loadCourses();
    },
    groupKind: function groupKind(value) {},
    groupIes: function groupIes(value) {},
    filterLevels: function filterLevels(value) {
      this.loadUniversities();
      this.loadCourses();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    },
    filterKinds: function filterKinds(value) {
      this.loadUniversities();
      this.loadCourses();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    },
    filterIes: function filterIes(value) {
      this.loadCourses();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    },
    filterCourse: function filterCourse(value) {
      this.loadUniversities();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    }
  },
  methods: {
    locationRemoved: function locationRemoved() {
      this.loadUniversities();
    },
    loadCities: function loadCities() {
      this.$refs.locationFilter.setCitiesLoader(true);
      var params = this.filterParams();
      CoursesChannel.push('completeCities', params).receive('timeout', function (data) {
        console.log('complete timeout');
      });
    },
    locationSelected: function locationSelected() {
      this.loadUniversities();
      this.loadCourses();
    },
    receiveCitiesComplete: function receiveCitiesComplete(data) {
      this.citiesOptions = data.cities;
      this.$refs.locationFilter.setCitiesLoader(false);
    },
    receiveCoursesComplete: function receiveCoursesComplete(data) {
      this.courseOptions = data.courses;
      this.courseFilterLoading = false;
    },
    receiveUniversitiesComplete: function receiveUniversitiesComplete(data) {
      this.universityOptions = data.universities;
      this.iesFilterLoading = false;
    },
    receiveFilters: function receiveFilters(data) {
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.locationOptions = data.locations;
      this.regionsOptions = data.regions;
      this.statesOptions = data.states;
      this.loadData();
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      console.log("receiveTableData");

      this.tableData = data.courses;
      this.hasKindField = data.has_kind_field;
      this.hasIesField = data.has_ies_field;
      this.hasCityField = data.has_city_field;
      this.loading = false;

      var orderColumn = 2;
      if (this.hasCityField) orderColumn += 2;
      if (this.hasKindField) orderColumn++;
      if (this.hasIesField) orderColumn++;

      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#report-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [orderColumn, 'desc']
        });
      });
    },
    loadCourses: function loadCourses() {
      this.courseFilterLoading = true;
      var params = this.filterParams();
      CoursesChannel.push('completeCourses', params).receive('timeout', function (data) {
        console.log('completeCourses timeout');
      });
    },
    loadUniversities: function loadUniversities() {
      this.iesFilterLoading = true;
      var params = this.filterParams();
      CoursesChannel.push('completeUniversities', params).receive('timeout', function (data) {
        console.log('completeUniversities timeout');
      });
    },
    loadFilters: function loadFilters() {
      CoursesChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    filterParams: function filterParams() {
      var params = {
        kinds: this.filterKinds,
        levels: this.filterLevels,
        universities: this.filterIes,
        groupKind: this.groupKind,
        courses: this.filterCourse,
        groupIes: this.groupIes,
        groupCity: this.groupCity,
        cleanCanonicals: this.cleanCanonicals,
        validIes: this.showValidIes
      };
      if (this.$refs.locationFilter.locationValue()) {
        params.locationType = this.$refs.locationFilter.locationFilter();
        params.locationValue = this.$refs.locationFilter.locationValue();
      }
      return params;
    },
    loadData: function loadData() {
      if (!this.$refs.locationFilter.validateFilter()) {
        return false;
      }
      this.loading = true;
      this.tableData = [];
      var params = this.filterParams();
      CoursesChannel.push('loadData', params).receive('timeout', function (data) {
        console.log('load timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('location-filter',{ref:"locationFilter",attrs:{"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"cities-options":_vm.citiesOptions},on:{"cityLocationSelected":_vm.loadCities,"locationValueSelected":_vm.locationSelected,"locationTypeRemoved":_vm.locationRemoved}}),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-6"},[_vm._m(1),_vm._v(" "),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.groupCity),expression:"groupCity"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.groupCity)?_vm._i(_vm.groupCity,null)>-1:(_vm.groupCity)},on:{"change":function($event){var $$a=_vm.groupCity,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.groupCity=$$a.concat([$$v]))}else{$$i>-1&&(_vm.groupCity=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.groupCity=$$c}}}}),_c('label',[_vm._v("CIDADE")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.groupKind),expression:"groupKind"}],staticStyle:{"margin-right":"5px","margin-left":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.groupKind)?_vm._i(_vm.groupKind,null)>-1:(_vm.groupKind)},on:{"change":function($event){var $$a=_vm.groupKind,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.groupKind=$$a.concat([$$v]))}else{$$i>-1&&(_vm.groupKind=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.groupKind=$$c}}}}),_c('label',[_vm._v("MODALIDADE")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.groupIes),expression:"groupIes"}],staticStyle:{"margin-right":"5px","margin-left":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.groupIes)?_vm._i(_vm.groupIes,null)>-1:(_vm.groupIes)},on:{"change":function($event){var $$a=_vm.groupIes,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.groupIes=$$a.concat([$$v]))}else{$$i>-1&&(_vm.groupIes=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.groupIes=$$c}}}}),_c('label',[_vm._v("IES")]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.groupIes),expression:"groupIes"}],staticStyle:{"display":"inline-block"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.showValidIes),expression:"showValidIes"}],staticStyle:{"margin-right":"5px","margin-left":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.showValidIes)?_vm._i(_vm.showValidIes,null)>-1:(_vm.showValidIes)},on:{"change":function($event){var $$a=_vm.showValidIes,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showValidIes=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showValidIes=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showValidIes=$$c}}}}),_c('label',[_vm._v("APENAS BUSCAS COM IES")]),_vm._v(" "),_vm._m(2)])])])],1),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[(_vm.iesFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small loader-grey",staticStyle:{"margin-top":"20px"}})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"ies-filter"}},[_vm._v("IES")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as IES's","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterIes),callback:function ($$v) {_vm.filterIes=$$v},expression:"filterIes"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-6"},[(_vm.courseFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small loader-grey",staticStyle:{"margin-top":"20px"}})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"course-filter"}},[_vm._v("CURSO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.courseOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os cursos","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterCourse),callback:function ($$v) {_vm.filterCourse=$$v},expression:"filterCourse"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-3"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.cleanCanonicals),expression:"cleanCanonicals"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.cleanCanonicals)?_vm._i(_vm.cleanCanonicals,null)>-1:(_vm.cleanCanonicals)},on:{"change":function($event){var $$a=_vm.cleanCanonicals,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.cleanCanonicals=$$a.concat([$$v]))}else{$$i>-1&&(_vm.cleanCanonicals=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.cleanCanonicals=$$c}}}}),_c('label',[_vm._v("APENAS CURSO MÃE")])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),(_vm.tableData.length > 0)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"report-table"}},[_c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("Curso")]),_vm._v(" "),(_vm.hasKindField)?_c('th',[_vm._v("Modalidade")]):_vm._e(),_vm._v(" "),(_vm.hasIesField)?_c('th',[_vm._v("IES")]):_vm._e(),_vm._v(" "),_c('th',[_vm._v("Nível")]),_vm._v(" "),(_vm.hasCityField)?_c('th',[_vm._v("Cidade")]):_vm._e(),_vm._v(" "),(_vm.hasCityField)?_c('th',[_vm._v("Estado")]):_vm._e(),_vm._v(" "),_c('th',[_vm._v("Buscas")])])]),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(course){return _c('tr',[_c('td',[_vm._v(_vm._s(course.clean_canonical_course_name))]),_vm._v(" "),(_vm.hasKindField)?_c('td',[_vm._v(_vm._s(course.course_kind))]):_vm._e(),_vm._v(" "),(_vm.hasIesField)?_c('td',[_vm._v(_vm._s(course.ies_name))]):_vm._e(),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.course_level))]),_vm._v(" "),(_vm.hasCityField)?_c('td',[_vm._v(_vm._s(course.city))]):_vm._e(),_vm._v(" "),(_vm.hasCityField)?_c('td',[_vm._v(_vm._s(course.state))]):_vm._e(),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.buscas))])])}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Cursos mais buscados ( janela de 1 ano )\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',[_vm._v("AGRUPAMENTOS\n                "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon",staticStyle:{"font-size":"16px"}},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_c('p',[_vm._v("Permitem o agrupamento do resultado por CIDADE / MODALIDADE / IES")])])])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon",staticStyle:{"font-size":"16px"}},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_c('p',[_vm._v("Considera apenas buscas em que o usuário selecionou uma IES")])])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-46c26961", __vue__options__)
  } else {
    hotAPI.reload("data-v-46c26961", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/cpfs-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],
      blockCount: null,
      filterKinds: null,
      filterLevels: null,

      dateRange: null,

      tableData: [],
      table: null,

      loadingFilters: true,
      dataLoading: false,
      semesterStart: null,
      semesterEnd: null,

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }]
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    CpfsChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    CpfsChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });

    this.loadFilters();
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;

      this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)(this.semesterEnd).toDate()];

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this3 = this;

      console.log("receiveTableData#");
      this.tableData = data.cpf_list;
      this.blockCount = data.n_block;

      this.$nextTick(function () {
        _this3.table = new _datatable2.default('#cpfs-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30
        });
      });

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      CpfsChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      this.dataLoading = true;
      this.tableData = [];
      this.blockCount = null;
      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var filter = this.$refs.filter.filterSelected();
      filter.initialDate = initialDate;
      filter.finalDate = finalDate;

      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;

      CpfsChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          CPFS BLOQUEADOS "),(_vm.blockCount)?_c('span',[_vm._v("- "+_vm._s(_vm.blockCount))]):_vm._e()]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table data-table-tiny",attrs:{"id":"cpfs-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',{staticClass:"no-wrap"},[_c('a',{attrs:{"target":"_blank","href":'https://vendas.querobolsa.com.br/#/user/' + entry.base_user_id}},[_vm._v(_vm._s(entry.cpf))])]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.user_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.discount_percentage))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.level))])])}),0)])])]):_vm._e()])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        CPFS\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("CPF")]),_vm._v(" "),_c('th',[_vm._v("Nome")]),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("Desconto")]),_vm._v(" "),_c('th',[_vm._v("Campus")]),_vm._v(" "),_c('th',[_vm._v("Turno")]),_vm._v(" "),_c('th',[_vm._v("Modalidade")]),_vm._v(" "),_c('th',[_vm._v("Nível")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2eb8f3a2", __vue__options__)
  } else {
    hotAPI.reload("data-v-2eb8f3a2", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/crawler-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _ref;

    return _ref = {
      dateRange: [],
      shortcuts: [],
      totalIes: null,
      historySelectionType: 'single_date',
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],

      statesOptions: [],
      regionsOptions: [],
      citiesOptions: [],
      groupingType: null,

      filterKinds: null,
      filterLevels: null,
      iesRegion: null,

      tableData: [],
      table: null,

      loadingFilters: true,
      dataLoading: false,
      iesLoading: false,
      iesStatesLoading: false,
      offersLoading: false,

      farmHuntBreakDown: false,
      soldStockBreakDown: false,
      proportionalBars: false,


      alfabeticalOrdering: false,

      groupingOptions: [{ id: 'state', name: 'Estado' }, { id: 'city', name: 'Cidade' }],

      iesLocationOptions: [{ type: 'states', name: 'Estados' }, { type: 'regions', name: 'Regiões' }],

      locationOptions: [{ type: 'states', name: 'Estados' }, { type: 'cities', name: 'Cidades' }, { type: 'regions', name: 'Regiões' }],

      dateOptions: [{ type: 'last', name: 'Ultima disponível' }, { type: 'custom', name: 'Customizada' }],

      showIESActive: true,
      showOffersActive: false,
      exportOffersLoading: false,
      exportIesLoading: false,

      offersData: []
    }, (0, _defineProperty3.default)(_ref, 'shortcuts', []), (0, _defineProperty3.default)(_ref, 'lastDate', null), (0, _defineProperty3.default)(_ref, 'initialDate', null), (0, _defineProperty3.default)(_ref, 'filtersOptions', [{ type: 'university', name: 'IES' }, { type: 'group', name: 'Grupo' }, { type: 'account_type', name: 'Carteira' }, { type: 'deal_owner', name: 'Farmer' }]), (0, _defineProperty3.default)(_ref, 'referenceDateType', null), (0, _defineProperty3.default)(_ref, 'referenceDate', null), (0, _defineProperty3.default)(_ref, 'disabledDays', []), _ref;
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    BaseChart: _baseChart2.default,
    LocationFilter: _locationFilter2.default,
    CDatePicker: _customDatePicker2.default
  },
  watch: {
    farmHuntBreakDown: function farmHuntBreakDown(value) {
      var _this = this;

      this.$nextTick(function () {
        _this.updateOffersChart();
        _this.updateProportionalBarsChart();
      });
    },
    soldStockBreakDown: function soldStockBreakDown(value) {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.updateOffersChart();
        _this2.updateProportionalBarsChart();
      });
    },
    proportionalBars: function proportionalBars(value) {
      var _this3 = this;

      this.$nextTick(function () {
        _this3.updateOffersChart();
        _this3.updateProportionalBarsChart();
      });
    },
    alfabeticalOrdering: function alfabeticalOrdering(value) {
      var _this4 = this;

      this.$nextTick(function () {
        _this4.updateOffersChart();
        _this4.updateProportionalBarsChart();
      });
    }
  },
  computed: {
    showDatePicker: function showDatePicker() {
      if (_lodash2.default.isNil(this.referenceDateType)) {
        return false;
      }
      return this.referenceDateType.type == 'custom';
    },
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this5 = this;

    CrawlerChannel.on('filterData', function (payload) {
      return _this5.receiveFilters(payload);
    });
    CrawlerChannel.on('iesData', function (payload) {
      return _this5.receiveIesData(payload);
    });
    CrawlerChannel.on('offerData', function (payload) {
      return _this5.receiveOfferData(payload);
    });
    CrawlerChannel.on('iesPerStateData', function (payload) {
      return _this5.receiveIesPerStateData(payload);
    });
    CrawlerChannel.on('downloadData', function (payload) {
      return _this5.receiveDownloadData(payload);
    });
    CrawlerChannel.on('downloadIesData', function (payload) {
      return _this5.receiveDownloadIesData(payload);
    });
    CrawlerChannel.on('downloadNoData', function (payload) {
      return _this5.receiveDownloadNoData(payload);
    });

    this.referenceDateType = this.dateOptions[0];
    this.groupingType = this.groupingOptions[0];
    this.loadFilters();
  },

  methods: {
    updateProportionalBarsChart: function updateProportionalBarsChart() {
      var offerData = this.offersData;

      var labels = [];
      labels.push('Só QB');
      labels.push('QB Melhor');
      if (this.soldStockBreakDown) {
        labels.push('EMB melhor - QB Melhor Esgotado');
      }
      labels.push('Igual');
      if (this.soldStockBreakDown) {
        labels.push('EMB melhor - QB Igual Esgotado');
        labels.push('EMB melhor');
      } else {
        labels.push('EMB melhor');
      }
      if (this.farmHuntBreakDown) {
        labels.push('Só EMB - FARM');
        labels.push('Só EMB - HUNT');
      } else {
        labels.push('Só EMB');
      }
      labels.push('Devry');

      labels = labels.reverse();

      d3.select('#offers-div-id').remove();

      var colors = [];
      var zipped = [];

      if (!this.farmHuntBreakDown && !this.soldStockBreakDown) {
        zipped = _lodash2.default.zip(offerData["chaves"], offerData["total"], offerData["grupo_devry"], offerData["so_emb"], offerData["emb_melhor"], offerData["igual"], offerData["qb_melhor"], offerData["so_qb"]);
        colors = ['red', '#ff9429', '#ffee00', '#00ec93', '#00afc7', '#004c5c'];
      } else if (this.farmHuntBreakDown && !this.soldStockBreakDown) {
        zipped = _lodash2.default.zip(offerData["chaves"], offerData["total"], offerData["grupo_devry"], offerData["so_emb_qb_hunt"], offerData["so_emb_qb_farm"], offerData["emb_melhor"], offerData["igual"], offerData["qb_melhor"], offerData["so_qb"]);
        colors = ['red', 'brown', 'orange', '#ffee00', '#00ec93', '#00afc7', '#004c5c'];
      } else if (!this.farmHuntBreakDown && this.soldStockBreakDown) {
        zipped = _lodash2.default.zip(offerData["chaves"], offerData["total"], offerData["grupo_devry"], offerData["so_emb"], offerData["emb_melhor_qb_not"], offerData["emb_melhor_qb_sold_equal"], offerData["igual"], offerData["emb_melhor_qb_sold_melhor"], offerData["qb_melhor"], offerData["so_qb"]);
        colors = ['red', '#ff9429', '#ffee00', '#ff8400', '#00ec93', '#00869c', '#00afc7', '#004c5c'];
      } else {
        zipped = _lodash2.default.zip(offerData["chaves"], offerData["total"], offerData["grupo_devry"], offerData["so_emb_qb_hunt"], offerData["so_emb_qb_farm"], offerData["emb_melhor_qb_not"], offerData["emb_melhor_qb_sold_equal"], offerData["igual"], offerData["emb_melhor_qb_sold_melhor"], offerData["qb_melhor"], offerData["so_qb"]);
        colors = ['red', 'brown', 'orange', '#ffee00', '#ff8400', '#00ec93', '#00869c', '#00afc7', '#004c5c'];
      }

      if (this.alfabeticalOrdering) {
        zipped.sort();
      }

      var mapped = _lodash2.default.map(zipped, function (entry) {
        return { 'key': entry[0], total: entry[1], 'vector': entry.splice(2, entry.length) };
      });

      var width = 800,
          height = 200,
          marginLeft = 20,
          marginRight = 10;
      var marginTop = 3;
      var marginBottom = 30;

      var x = d3.scale.linear().range([0, width - marginLeft - marginRight]);
      var y = d3.scale.linear().range([0, height - marginTop - marginBottom]);
      var n = d3.format(",d"),
          p = d3.format("%");

      var tooltip = d3.select("body").append("div").style("opacity", 0).style("position", "absolute").style("background-color", "black").style("border", "solid").style("border-width", "1px").style("border-radius", "5px").style("padding", "10px");

      var svgOffers = d3.select("#offers-bars").append("div").attr('id', 'offers-div-id').append("svg").attr("viewBox", '0 0 ' + width + ' ' + height).append("g").attr("transform", "translate(" + marginLeft + "," + marginTop + ")");

      var sumTotal = 0;
      _lodash2.default.forEach(mapped, function (entry) {
        sumTotal += eval(entry.total);
      });

      var mappedSum = mapped.reduce(function (accumulator, entry) {
        entry.offset = accumulator;
        entry.sum = accumulator + eval(entry.total);
        entry.valuesSum = 0;
        var valuesIndex = 0;
        entry.values = _lodash2.default.map(entry.vector, function (value) {
          var valueEntry = {
            'value': eval(value),
            'offset': entry.valuesSum,
            'color': colors[valuesIndex],
            'parent': entry,
            'label': labels[valuesIndex]
          };
          entry.valuesSum = entry.valuesSum + eval(value);
          valuesIndex++;
          return valueEntry;
        });
        return entry.sum;
      }, 0);

      var groupKeys = svgOffers.selectAll(".group_key").data(mapped).enter().append("g").attr("class", "group_key").attr("xlink:title", function (d) {
        return d.key;
      }).attr("transform", function (d) {
        return "translate(" + x(d.offset / mappedSum) + ")";
      });
      var parts = groupKeys.selectAll(".group_key").data(function (d) {
        return d.values;
      }).enter().append("a").attr("class", "group_key");

      parts.append("rect").attr("y", function (d) {
        return y(d.offset / d.parent.valuesSum);
      }).attr("height", function (d) {
        return y(d.value / d.parent.valuesSum);
      }).attr("width", function (d) {
        return x(d.parent.total / mappedSum);
      }).style("fill", function (d) {
        return d.color;
      }).on('mouseover', function (d) {
        tooltip.style("opacity", 1).html('<b><span style="color: white;">' + d.parent.key + '</span></b><br><div style="display: flex; align-items: center;"><div style="display: inline-block; width: 10px; height: 10px; margin-right: 5px; background-color: ' + d.color + ';">&nbsp</div><span style="color: white; font-size: 14px;">' + d.label + ": " + d.value + " %</span></div>");
      }).on('mouseout', function (d) {
        tooltip.style("opacity", 0);
      }).on('mousemove', function (d) {
        tooltip.style("left", d3.event.pageX + "px").style("top", d3.event.pageY + 28 + "px");
      });

      svgOffers.selectAll(".group_key").each(function (d) {
        if (d.total > 300) {
          d3.select(this).append('text').text(d.key).attr("y", height - marginBottom + 8).attr("font-family", "proxima-nova").attr("font-size", "8px").style("fill", "white");
        }
      });

      var currentX = 25;
      _lodash2.default.forEach(_lodash2.default.zip(labels, colors).reverse(), function (entry) {
        svgOffers.append("circle").attr("cx", currentX).attr("cy", height - marginBottom + 20).attr("r", 4).style("fill", entry[1]);
        var textInfo = svgOffers.append("text").attr("x", currentX + 8).attr("y", height - marginBottom + 20).text(entry[0]).style("font-size", "8px").style("fill", "white").attr("alignment-baseline", "middle");

        currentX += textInfo.node().getComputedTextLength() + 20;
      });

      var scale = d3.scale.linear().domain([100, 0]).range([0, height - marginTop - marginBottom]);

      var yAxis = d3.svg.axis().scale(scale).orient("left").tickFormat(function (d) {
        d3.select(this).attr('font-size', '8px').style('fill', 'white');
        return d;
      });

      svgOffers.append("g").call(yAxis, function (d) {});

      svgOffers.select(".domain").remove();
    },
    showIES: function showIES() {
      var _this6 = this;

      this.showIESActive = true;
      this.showOffersActive = false;

      this.$nextTick(function () {
        _this6.$refs.iesStatesChart.updateChart();
      });
    },
    showOffers: function showOffers() {
      var _this7 = this;

      this.showIESActive = false;
      this.showOffersActive = true;

      this.$nextTick(function () {
        _this7.$refs.offersChart.updateChart();
      });
    },
    drawIesCharts: function drawIesCharts(qb, emb, intersection) {
      var qbKey = 'QB - ' + qb;
      var embKey = 'EMB - ' + emb;
      var allKey = '' + intersection;

      var sets = [{ sets: [qbKey], size: 200 }, { sets: [embKey], size: 200 }, { sets: [qbKey, embKey], size: 100, label: allKey }];

      var width = 500;
      var height = 300;

      var colours = ['#35b6cc', '#fdc029'];
      var chart = venn.VennDiagram().width(width).height(height);
      d3.select("#ies").datum(sets).call(chart);

      var vennDiv = document.getElementById("ies");
      var vennSvg = vennDiv.children[0];

      vennSvg.removeAttribute("height");
      vennSvg.removeAttribute("width");
      vennSvg.setAttribute("viewBox", '0 0 ' + width + ' ' + height);

      d3.selectAll("#ies .venn-circle path").style("fill", function (d, i) {
        return colours[i];
      });

      d3.selectAll("#ies .venn-circle text").style("fill", function (d, i) {
        return colours[i];
      }).style("font-weight", "100").style("font-size", "36px");

      d3.selectAll("#ies text").style("fill", function (d, i) {
        return colours[i];
      }).style("font-weight", "100").style("font-size", "36px");
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('primaryFilterSelected data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.citiesOptions = data.cities;
      this.regionsOptions = data.regions;
      this.statesOptions = data.states;

      this.dealOwnerOptions = data.dealOwners;
      this.accountTypeOptions = data.accountTypes;
      this.universityGroupOptions = data.groups;

      this.loadingFilters = false;

      this.initialDate = (0, _moment2.default)(data.initial_date_filter).toDate();
      this.lastDate = (0, _moment2.default)(data.final_date_filter).toDate();

      this.dateRange = [this.initialDate, this.lastDate];

      this.disabledDays = _lodash2.default.map(data.missing_days, function (entry) {
        return (0, _moment2.default)(entry).toDate();
      });

      this.updateOffers();
      this.loadIesPerState();
    },
    receiveOfferData: function receiveOfferData(data) {
      this.offersData = data;
      this.updateProportionalBarsChart();
      this.updateOffersChart();

      this.offersLoading = false;
    },
    updateOffersChart: function updateOffersChart() {
      var _this8 = this;

      var updateData = this.offersData;

      if (this.alfabeticalOrdering) {
        var zipped = _lodash2.default.zip(this.offersData['chaves'], this.offersData['so_qb'], this.offersData['qb_melhor'], this.offersData['emb_melhor_qb_sold_melhor'], this.offersData['igual'], this.offersData['emb_melhor_qb_sold_equal'], this.offersData['emb_melhor_qb_not'], this.offersData['emb_melhor'], this.offersData['so_emb_qb_farm'], this.offersData['so_emb_qb_hunt'], this.offersData['so_emb'], this.offersData['grupo_devry']);

        zipped.sort();

        updateData = _lodash2.default.reduce(zipped, function (accumulator, entry) {
          console.log("entry: " + (0, _stringify2.default)(entry) + " accumulator: " + (0, _stringify2.default)(accumulator));
          accumulator.chaves.push(entry[0]);
          accumulator.so_qb.push(entry[1]);
          accumulator.qb_melhor.push(entry[2]);
          accumulator.emb_melhor_qb_sold_melhor.push(entry[3]);
          accumulator.igual.push(entry[4]);
          accumulator.emb_melhor_qb_sold_equal.push(entry[5]);
          accumulator.emb_melhor_qb_not.push(entry[6]);
          accumulator.emb_melhor.push(entry[7]);
          accumulator.so_emb_qb_farm.push(entry[8]);
          accumulator.so_emb_qb_hunt.push(entry[9]);
          accumulator.so_emb.push(entry[10]);
          accumulator.grupo_devry.push(entry[11]);
          return accumulator;
        }, {
          chaves: [],
          so_qb: [],
          qb_melhor: [],
          emb_melhor_qb_sold_melhor: [],
          igual: [],
          emb_melhor_qb_sold_equal: [],
          emb_melhor_qb_not: [],
          emb_melhor: [],
          so_emb_qb_farm: [],
          so_emb_qb_hunt: [],
          so_emb: [],
          grupo_devry: []
        });
      }

      this.$refs.offersChart.clearSeries();
      this.$refs.offersChart.setLabels(updateData.chaves);

      this.$refs.offersChart.setSeriesWithOptions(0, updateData.so_qb, 'Só QB', { seriesColor: '#004c5c' });
      this.$refs.offersChart.setSeriesWithOptions(1, updateData.qb_melhor, 'QB Melhor', { seriesColor: '#00afc7' });

      var currentIndex = 1;
      if (this.soldStockBreakDown) {
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.emb_melhor_qb_sold_melhor, 'EMB melhor - QB Melhor Esgotado', { seriesColor: '#00869c' });
      }

      currentIndex++;
      this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.igual, 'Igual', { seriesColor: '#00ec93' });

      if (this.soldStockBreakDown) {
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.emb_melhor_qb_sold_equal, 'EMB melhor - QB Igual Esgotado', { seriesColor: '#ff8400' });
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.emb_melhor_qb_not, 'EMB melhor', { seriesColor: '#ffee00' });
      } else {
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.emb_melhor, 'EMB melhor', { seriesColor: '#ffee00' });
      }

      if (this.farmHuntBreakDown) {
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.so_emb_qb_farm, 'Só EMB - FARM', { seriesColor: 'orange' });
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.so_emb_qb_hunt, 'Só EMB - HUNT', { seriesColor: 'brown' });
      } else {
        currentIndex++;
        this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.so_emb, 'Só EMB', { seriesColor: '#ff9429' });
      }
      currentIndex++;
      this.$refs.offersChart.setSeriesWithOptions(currentIndex, updateData.grupo_devry, 'Devry', { seriesColor: 'red' });

      this.$refs.offersChart.setXAxesStacked();
      this.$refs.offersChart.setYAxesStacked();

      this.$refs.offersChart.setYMax(100);

      this.$nextTick(function () {
        _this8.$refs.offersChart.updateChart();
      });
    },
    saveXlsx: function saveXlsx(input, filename, contentType) {
      var byteCharacters = atob(input);
      var byteNumbers = new Array(byteCharacters.length);
      for (var i = 0; i < byteCharacters.length; i++) {
        byteNumbers[i] = byteCharacters.charCodeAt(i);
      }
      var byteArray = new Uint8Array(byteNumbers);
      var blob = new Blob([byteArray], { type: contentType });

      saveAs(blob, filename);
    },
    receiveDownloadNoData: function receiveDownloadNoData(data) {
      if (data.type == 'offers') {
        alert('Sem ofertas para exportar');
        this.exportOffersLoading = false;
      } else {
        alert('Sem IES para exportar');
        this.exportIESLoading = false;
      }
    },
    receiveDownloadIesData: function receiveDownloadIesData(data) {
      this.saveXlsx(data.xlsx, data.filename, data.contentType);
      this.exportIESLoading = false;
    },
    receiveDownloadData: function receiveDownloadData(data) {
      this.saveXlsx(data.xlsx, data.filename, data.contentType);
      this.exportOffersLoading = false;
    },
    receiveIesPerStateData: function receiveIesPerStateData(data) {
      var _this9 = this;

      console.log("receiveIesPerStateData#" + (0, _stringify2.default)(data));

      this.$refs.iesStatesChart.setLabels(data.keys);

      this.$refs.iesStatesChart.setSeriesWithOptions(0, data.so_qb, 'Só QB', { seriesColor: '#00afc7' });
      this.$refs.iesStatesChart.setSeriesWithOptions(1, data.qb_e_emb, 'QB e EMB', { seriesColor: '#00ec93' });
      this.$refs.iesStatesChart.setSeriesWithOptions(2, data.so_emb, 'Só EMB', { seriesColor: 'red' });

      this.$refs.iesStatesChart.setXAxesStacked();
      this.$refs.iesStatesChart.setYAxesStacked();

      this.$refs.iesStatesChart.setYMax(100);

      this.$nextTick(function () {
        _this9.$refs.iesStatesChart.updateChart();
      });

      this.iesStatesLoading = false;
    },
    receiveIesData: function receiveIesData(data) {
      this.totalIes = data.total;

      this.drawIesCharts(data.so_qb, data.so_emb, data.qb_e_emb);
      this.iesLoading = false;
    },
    iesParamsMap: function iesParamsMap() {
      return {
        locationType: this.$refs.locationFilterIes.locationFilter(),
        locationValue: this.$refs.locationFilterIes.locationValue()
      };
    },
    loadIesPerState: function loadIesPerState() {
      if (!this.$refs.locationFilterIes.validateFilter()) {
        return false;
      }
      var params = this.iesParamsMap();

      d3.select('#ies').select('svg').remove();

      this.iesStatesLoading = true;
      this.iesLoading = true;
      CrawlerChannel.push('loadIesPerState', params).receive('timeout', function (data) {
        console.log('loadIesPerState timeout');
      });
    },
    updateIesStats: function updateIesStats() {
      this.loadIesPerState();
    },
    offersFiltersMap: function offersFiltersMap() {
      var params = this.$refs.filter.filterSelected() || {};

      params.groupingType = this.groupingType;
      params.locationType = this.$refs.locationFilter.locationFilter();
      params.locationValue = this.$refs.locationFilter.locationValue();
      params.historyType = this.historySelectionType;

      if (this.historySelectionType == 'single_date') {

        if (this.referenceDateType.type == 'custom') {
          params.dateFilter = this.referenceDate;
        }
      } else {
        params.initialDate = this.dateRange[0];
        params.finalDate = this.dateRange[1];
      }

      return params;
    },
    updateOffers: function updateOffers() {
      if (!this.$refs.locationFilter.validateFilter()) {
        return false;
      }

      if (!this.$refs.filter.validateFilter()) {
        return false;
      }

      if (this.referenceDateType.type == 'custom') {
        if (_lodash2.default.isNil(this.referenceDate)) {
          alert('Selecione a data de referência');
          return false;
        }
      }

      var params = this.offersFiltersMap();

      this.offersLoading = true;
      CrawlerChannel.push('loadOffersData', params).receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    exportIes: function exportIes() {
      if (this.exportIesLoading) {
        return;
      }
      this.exportIesLoading = true;

      var params = this.iesParamsMap();

      CrawlerChannel.push('downloadMissingIES', params).receive('timeout', function (data) {
        console.log('exportOffers timeout');
      });
    },
    exportOffers: function exportOffers() {
      if (this.exportOffersLoading) {
        return;
      }
      var params = this.offersFiltersMap();

      this.exportOffersLoading = true;

      CrawlerChannel.push('downloadMissingOffers', params).receive('timeout', function (data) {
        console.log('exportOffers timeout');
      });
    },
    loadFilters: function loadFilters() {
      CrawlerChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e()]),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[_c('ul',{staticClass:"nav navbar-nav justify-content-center"},[_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showIESActive}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showIES}},[_vm._v("IES")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showOffersActive}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showOffers}},[_vm._v("Ofertas")])])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showIESActive),expression:"showIESActive"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[_c('location-filter',{ref:"locationFilterIes",staticClass:"default-margin-left",attrs:{"class-multiplier":3,"location-options":_vm.iesLocationOptions,"cities-options":_vm.citiesOptions,"states-options":_vm.statesOptions,"regions-options":_vm.regionsOptions}}),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('button',{staticClass:"btn-submit default-margin-top",on:{"click":_vm.updateIesStats}},[_vm._v("\n                Atualizar\n              ")])])],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"row"},[(_vm.iesLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_vm._m(1)])]),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"row"},[(_vm.iesStatesLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n                  IES por estado\n\n                  "),_c('span',{staticClass:"clickable",staticStyle:{"font-size":"16px","font-weight":"bolder","float":"right"},on:{"click":_vm.exportIes}},[(_vm.exportIesLoading)?_c('div',{staticClass:"loader loader-tiny",staticStyle:{"display":"inline-block"}}):_c('span',{staticClass:"glyphicon glyphicon-download-alt"}),_vm._v("\n                    Exportar IES Só EMB\n                  ")])]),_vm._v(" "),_c('base-chart',{ref:"iesStatesChart",attrs:{"export-name":"comparativo_ies_emb","base-height":390}})],1)])])])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showOffersActive),expression:"showOffersActive"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[(_vm.offersLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n              Comparativo de Ofertas\n            ")]),_vm._v(" "),_c('div',{staticClass:"row small-margin-bottom"},[_c('div',{staticClass:"col-md-12"},[_c('panel-primary-filter',{ref:"filter",attrs:{"permit-empty":true,"filter-options":_vm.filtersOptions,"university-group-options":_vm.universityGroupOptions,"university-options":_vm.universityOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('location-filter',{ref:"locationFilter",attrs:{"class-multiplier":4,"location-options":_vm.locationOptions,"cities-options":_vm.citiesOptions,"states-options":_vm.statesOptions,"regions-options":_vm.regionsOptions}})],1),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.historySelectionType),expression:"historySelectionType"}],attrs:{"type":"radio","value":"single_date"},domProps:{"checked":_vm._q(_vm.historySelectionType,"single_date")},on:{"change":function($event){_vm.historySelectionType="single_date"}}}),_vm._v(" "),_vm._m(2),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.historySelectionType),expression:"historySelectionType"}],attrs:{"type":"radio","value":"history"},domProps:{"checked":_vm._q(_vm.historySelectionType,"history")},on:{"change":function($event){_vm.historySelectionType="history"}}}),_vm._v(" "),_vm._m(3),_c('br')])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.historySelectionType == 'history'),expression:"historySelectionType == 'history'"}],staticClass:"row"},[_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts,"not-after":_vm.lastDate,"not-before":_vm.initialDate},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.historySelectionType == 'single_date'),expression:"historySelectionType == 'single_date'"}],staticClass:"row"},[_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("AGRUPAMENTO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.groupingOptions,"label":"name","placeholder":"Selecione o agrupamento"},model:{value:(_vm.groupingType),callback:function ($$v) {_vm.groupingType=$$v},expression:"groupingType"}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6"},[_c('label',[_vm._v("DATA REFÊRENCIA")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.dateOptions,"label":"name","placeholder":"Selecione a data de referência","selected-label":"","deselect-label":""},model:{value:(_vm.referenceDateType),callback:function ($$v) {_vm.referenceDateType=$$v},expression:"referenceDateType"}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showDatePicker),expression:"showDatePicker"}],staticClass:"col-md-6"},[_c('c-date-picker',{staticClass:"default-margin-top",attrs:{"range":false,"shortcuts":_vm.shortcuts,"not-after":_vm.lastDate,"not-before":_vm.initialDate,"disabled-days":_vm.disabledDays},model:{value:(_vm.referenceDate),callback:function ($$v) {_vm.referenceDate=$$v},expression:"referenceDate"}})],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6"},[_c('button',{staticClass:"btn-submit default-margin-top",on:{"click":_vm.updateOffers}},[_vm._v("\n                      Atualizar\n                    ")])])])],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 panel-heading"},[_c('span',{staticClass:"clickable",staticStyle:{"font-size":"16px","font-weight":"bolder"},on:{"click":_vm.exportOffers}},[(_vm.exportOffersLoading)?_c('div',{staticClass:"loader loader-tiny",staticStyle:{"display":"inline-block"}}):_c('span',{staticClass:"glyphicon glyphicon-download-alt"}),_vm._v("\n                  Exportar Ofertas Só EMB\n                ")])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('label',[_vm._v("VISUALIZAÇÃO")]),_vm._v(" "),_c('div',{staticClass:"tiny-margin-left"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.farmHuntBreakDown),expression:"farmHuntBreakDown"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.farmHuntBreakDown)?_vm._i(_vm.farmHuntBreakDown,null)>-1:(_vm.farmHuntBreakDown)},on:{"change":function($event){var $$a=_vm.farmHuntBreakDown,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.farmHuntBreakDown=$$a.concat([$$v]))}else{$$i>-1&&(_vm.farmHuntBreakDown=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.farmHuntBreakDown=$$c}}}}),_c('label',[_vm._v("FARM/HUNT")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.soldStockBreakDown),expression:"soldStockBreakDown"}],staticStyle:{"margin-left":"15px","margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.soldStockBreakDown)?_vm._i(_vm.soldStockBreakDown,null)>-1:(_vm.soldStockBreakDown)},on:{"change":function($event){var $$a=_vm.soldStockBreakDown,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.soldStockBreakDown=$$a.concat([$$v]))}else{$$i>-1&&(_vm.soldStockBreakDown=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.soldStockBreakDown=$$c}}}}),_c('label',[_vm._v("ESTOQUE ESGOTADO")]),_vm._v(" "),(_vm.historySelectionType == 'single_date')?[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.proportionalBars),expression:"proportionalBars"}],staticStyle:{"margin-left":"15px","margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.proportionalBars)?_vm._i(_vm.proportionalBars,null)>-1:(_vm.proportionalBars)},on:{"change":function($event){var $$a=_vm.proportionalBars,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.proportionalBars=$$a.concat([$$v]))}else{$$i>-1&&(_vm.proportionalBars=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.proportionalBars=$$c}}}}),_c('label',[_vm._v("BARRAS PROPORCIONAIS")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.alfabeticalOrdering),expression:"alfabeticalOrdering"}],staticStyle:{"margin-left":"15px","margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.alfabeticalOrdering)?_vm._i(_vm.alfabeticalOrdering,null)>-1:(_vm.alfabeticalOrdering)},on:{"change":function($event){var $$a=_vm.alfabeticalOrdering,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.alfabeticalOrdering=$$a.concat([$$v]))}else{$$i>-1&&(_vm.alfabeticalOrdering=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.alfabeticalOrdering=$$c}}}}),_c('label',[_vm._v("ORDENAÇÃO ALFABÉTICA")])]:_vm._e()],2)])]),_vm._v(" "),_c('base-chart',{directives:[{name:"show",rawName:"v-show",value:(!_vm.proportionalBars),expression:"!proportionalBars"}],ref:"offersChart",attrs:{"export-name":"comparativo_ofertas_emb","base-height":390}}),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.proportionalBars),expression:"proportionalBars"}],attrs:{"id":"offers-bars"}},[_vm._v(" ")])],1)])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Concorrentes\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n                  IES por conjunto\n                ")]),_vm._v(" "),_c('div',{attrs:{"id":"ies"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left tiny-padding-right",staticStyle:{"font-size":"18px"}},[_vm._v("Foto diária")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Série histórica")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-352ec5bd", __vue__options__)
  } else {
    hotAPI.reload("data-v-352ec5bd", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/custom-date-picker.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vue2Datepicker = require('vue2-datepicker');

var _vue2Datepicker2 = _interopRequireDefault(_vue2Datepicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      dateRange: null,
      lang: {
        days: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],
        months: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
        placeholder: {
          date: 'Data',
          dateRange: 'Período'
        }
      }
    };
  },
  mounted: function mounted() {
    this.dateRange = this.value;
  },

  watch: {
    value: function value(data) {
      this.dateRange = this.value;
    }
  },
  props: {
    value: [Array, Date],
    notAfter: {
      type: Date,
      default: null
    },
    notBefore: {
      type: Date,
      default: null
    },
    disabled: {
      type: Boolean,
      default: false
    },
    range: {
      type: Boolean,
      default: true
    },
    disabledDays: {
      type: Array,
      default: null
    },
    shortcuts: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  components: {
    DatePicker: _vue2Datepicker2.default
  },
  methods: {
    timeRangeConfirmed: function timeRangeConfirmed() {
      console.log("timeRangeConfirmed");
    },
    timeRangeSelected: function timeRangeSelected() {
      this.$emit('input', this.dateRange);
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('date-picker',{attrs:{"disabled":_vm.disabled,"first-day-of-week":1,"lang":_vm.lang,"range":_vm.range,"shortcuts":_vm.shortcuts,"not-after":_vm.notAfter,"not-before":_vm.notBefore,"disabled-days":_vm.disabledDays},on:{"change":_vm.timeRangeSelected,"confirm":_vm.timeRangeConfirmed},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7cd552ef", __vue__options__)
  } else {
    hotAPI.reload("data-v-7cd552ef", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/custom-search-multiselect.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      selectedValue: null,
      sugestions: []
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default
  },
  props: ['value', 'options', 'label', 'placeholder', 'selectLabel', 'deselectLabel', 'selectedLabel', 'multiple', 'trackBy'],
  watch: {
    options: function options(value) {
      this.sugestions = this.options;
    },
    value: function value(_value) {
      this.selectedValue = _value;
    }
  },
  mounted: function mounted() {
    this.sugestions = this.options;
  },

  methods: {
    valueSelected: function valueSelected(data) {
      var _this = this;

      this.$nextTick(function () {
        _this.$emit('select', _this.selectedValue);
        _this.$emit('input', _this.selectedValue);
      });
    },
    valueRemoved: function valueRemoved() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.$emit('remove');
        _this2.$emit('input', _this2.selectedValue);
      });
    },
    customSearch: function customSearch(data, id) {
      if (data == '') {
        this.sugestions = this.options;
        return;
      }
      var filteredData = data.normalize('NFD').replace(/[\u0300-\u036f]/g, "");
      this.sugestions = this.options.filter(function (item_data) {
        return item_data.name.normalize('NFD').replace(/[\u0300-\u036f]/g, "").toUpperCase().includes(filteredData.toUpperCase());
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('multiselect',{attrs:{"internal-search":false,"options":_vm.sugestions,"label":_vm.label,"placeholder":_vm.placeholder,"selectLabel":_vm.selectLabel,"deselectLabel":_vm.deselectLabel,"selectedLabel":_vm.selectedLabel,"multiple":_vm.multiple,"track-by":_vm.trackBy},on:{"select":_vm.valueSelected,"remove":_vm.valueRemoved,"search-change":_vm.customSearch},model:{value:(_vm.selectedValue),callback:function ($$v) {_vm.selectedValue=$$v},expression:"selectedValue"}})}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-5c750ede", __vue__options__)
  } else {
    hotAPI.reload("data-v-5c750ede", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/dashboard.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _panelFilter = require('./panel-filter');

var _panelFilter2 = _interopRequireDefault(_panelFilter);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _export = require('../js/utils/export');

var _export2 = _interopRequireDefault(_export);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      colConfig: 6,
      loading: false,
      filtersLoading: true,
      updateEnabled: true,
      comparingMode: '',
      comparingDisabled: false,
      movelMean: true,
      lineCharts: true,
      barsValues: true,
      comparingOptions: [{ name: 'Ano a Ano', type: 'year_to_year' }, { name: 'Site Todo', type: 'all_data' }, { name: 'Customizado', type: 'custom_compare' }, { name: 'Período Anterior', type: 'previous_period' }, { name: 'Agrupamento', type: 'grouping' }, { name: 'Sem comparativo', type: 'no_compare' }],
      groupingMaxOptions: [{ name: 'Top 5', id: 5 }, { name: 'Top 10', id: 10 }, { name: 'Top 15', id: 15 }, { name: 'Top 20', id: 20 }, { name: 'Máximo', id: 0 }],
      groupingOptions: [{ name: "Estado", id: "state" }, { name: "Carteira", id: "account_type" }, { name: "IES", id: "university" }, { name: "Grupo Educacional", id: "group" }, { name: "Nível", id: "level" }, { name: "Modalidade", id: "kind" }, { name: "Cidade", id: "city" }],
      seriesSelectionOptions: [{ name: 'Maiores altas (na última semana)', id: 'higher_up' }, { name: 'Maiores baixas (na última semana)', id: 'higher_down' }, { name: 'Maiores altas (no último mês)', id: 'higher_up_month' }, { name: 'Maiores baixas (no último mês)', id: 'higher_down_month' }, { name: 'Maiores somas no período', id: 'higher' }, { name: 'Maiores valores no final', id: 'higher_final' }],
      seriesSelectionFieldOptions: [{ name: 'Ordens', id: 'orders' }, { name: 'Visitas', id: 'visits' }, { name: 'Pagos', id: 'paids' }, { name: 'Receita', id: 'income' }],
      currentGroupingOptions: [],
      grouping: null,
      groupingMax: null,
      seriesSelection: null,
      seriesSelectionField: null,
      chartsMap: {},
      chartsClassesMap: {},
      barCharts: [],
      chartsDates: [],
      chartsKeys: [],
      chartsKeysNames: [],

      seriesNames: [],
      metricsNames: [],
      metrics: [],
      metricsCompare: null,
      tableExpanded: false,
      userTableExpanded: null,
      baseMetrics: [],
      exportSelection: null,
      allCharts: ['atractionChart', 'successChart', 'conversionChart', 'ordersChart', 'paidsChart', 'visitsChart', 'universityVisitsChart', 'revenueChart', 'velocimeterChart', 'meanTicketChart', 'legacyMeanTicketChart', 'meanIncomeChart', 'legacyMeanIncomeChart', 'refundsChart', 'bosChart', 'stockChart', 'discountChart', 'offeredChart', 'exchangesChart', 'cumBosChart', 'cumRefundsChart', 'deepStockChart', 'cumPaidsChart', 'cumRevenueChart'],

      exibitionType: 'all_charts',
      customizedViewsCharts: {
        'partner_charts': ['atractionChart', 'successChart', 'conversionChart', 'ordersChart', 'paidsChart', 'visitsChart', 'deepStockChart', 'stockChart', 'discountChart', 'offeredChart'],
        'rates_charts': ['atractionChart', 'successChart', 'conversionChart', 'ordersChart', 'paidsChart', 'visitsChart'],
        'stock_charts': ['deepStockChart', 'stockChart', 'discountChart', 'offeredChart']
      },

      beginChartsAtZero: false
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    PanelFilter: _panelFilter2.default,
    BaseChart: _baseChart2.default,
    ComparingChart: _comparingChart2.default,
    ModalDialog: _modalDialog2.default
  },
  watch: {
    comparingMode: function comparingMode(value) {
      console.log("comparingMode: " + (0, _stringify2.default)(value));
      if (value.type == 'previous_period') {
        this.comparingDisabled = true;
        this.syncComparingFilters();
        this.setPreviousPeriod();
      } else {
        if (value.type == 'year_to_year') {
          this.setPreviousYearPeriod();
          this.syncComparingFilters();
        } else {
          if (value.type == 'all_data') {
            this.syncBaseComparingFilters();
            this.$refs.comparingFilter.clearPrimaryFilters();
          }
          this.setCurrentPeriod();
        }
        this.comparingDisabled = false;
      }
    }
  },
  mounted: function mounted() {
    var _this = this;

    DashboardChannel.on('filterData', function (payload) {
      return _this.receiveFilterData(payload);
    });
    DashboardChannel.on('chartData', function (payload) {
      return _this.receiveChartData(payload);
    });
    DashboardChannel.on('citiesFilterData', function (payload) {
      return _this.receiveCitiesFilterData(payload);
    });
    DashboardChannel.on('campusFilterData', function (payload) {
      return _this.receiveCampusFilterData(payload);
    });
    DashboardChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    DashboardChannel.on('tableMetrics', function (payload) {
      return _this.receiveTableMetrics(payload);
    });

    this.comparingMode = this.comparingOptions[0];

    this.currentGroupingOptions = this.groupingOptions;
    this.groupingMax = this.groupingMaxOptions[0];
    this.seriesSelection = this.seriesSelectionOptions[0];
    this.seriesSelectionField = this.seriesSelectionFieldOptions[0];

    this.hideAllCharts();
    this.loadFilters();
  },

  computed: {
    ordersChartClass: function ordersChartClass() {
      return "col-md-6";
    },
    ordersChart1Class: function ordersChart1Class() {
      return "col-md-6";
    },
    consolidatedButtonClass: function consolidatedButtonClass() {
      if (this.colConfig == 12) {
        return "clickable";
      }
      return "active-border clickable";
    },
    expandedButtonClass: function expandedButtonClass() {
      if (this.colConfig == 6) {
        return "clickable";
      }
      return "active-border clickable";
    },
    barsButtonClass: function barsButtonClass() {
      if (this.lineCharts) {
        return "clickable";
      }
      return "active-border clickable";
    },
    linesButtonClass: function linesButtonClass() {
      if (this.lineCharts) {
        return "active-border clickable";
      }
      return "clickable";
    },
    showComparingFilter: function showComparingFilter() {
      if (this.comparingMode == '') return false;
      return this.comparingMode.type == 'custom_compare';
    },
    showGroupingOptions: function showGroupingOptions() {
      if (this.comparingMode == '') return false;
      return this.comparingMode.type == 'grouping';
    },
    canSelectSeries: function canSelectSeries() {
      if (_lodash2.default.isNil(this.grouping)) return true;
      if (_lodash2.default.isNil(this.$refs.currentFilter)) return true;

      if (!_lodash2.default.isNil(this.$refs.currentFilter.baseFiltersList()[0]) && this.$refs.currentFilter.baseFiltersList()[0].type != 'universities') {
        return true;
      }
      return _lodash2.default.isNil(this.grouping) || this.grouping['id'] != 'university';
    }
  },
  methods: {
    toggleBeginAtZero: function toggleBeginAtZero() {
      var _this2 = this;

      this.loading = true;
      this.beginChartsAtZero = !this.beginChartsAtZero;
      setTimeout(function () {
        for (var chartName in _this2.chartsMap) {
          if (_this2.beginChartsAtZero) {
            _this2.$refs[chartName].setYBeginAtZero(true);
          } else {
            _this2.$refs[chartName].setYBeginAtZero(false);
          }
          _this2.$refs[chartName].updateChart();
        }
        _this2.loading = false;
      }, 50);
    },
    chartVisibleForView: function chartVisibleForView(chartName) {
      if (this.exibitionType == 'all_charts') {
        return true;
      }
      if (this.exibitionType in this.customizedViewsCharts) {
        return _lodash2.default.includes(this.customizedViewsCharts[this.exibitionType], chartName);
      }
      console.log("chartVisibleForView customizado chartName: " + chartName + " class: " + this.chartClass(chartName));
      if (this.chartClass(chartName) == 'hidden') {
        return false;
      }
      return true;
    },
    toggleChart: function toggleChart(chartName) {
      var _this3 = this;

      if (chartName in this.chartsMap) {
        this.exibitionType = 'custom_charts';
        if (this.chartClass(chartName) == 'hidden') {
          this.showChart(chartName);
          this.renderChart(chartName);
          this.$nextTick(function () {
            _this3.$refs[chartName].updateChart();
          });
        } else {
          this.closeChart(chartName);
        }
      }
    },
    setCustomizedView: function setCustomizedView(type) {
      var _this4 = this;

      if (type == 'all_charts') {
        for (var chartName in this.chartsMap) {
          this.showChart(chartName);
          this.renderChart(chartName);
        }
        this.$nextTick(function () {
          for (var chartName in _this4.chartsMap) {
            _this4.$refs[chartName].updateChart();
          }
        });
      } else {
        if (type in this.customizedViewsCharts) {
          this.closeExcept(this.customizedViewsCharts[type]);
        } else {
          return;
        }
      }
      this.exibitionType = type;
    },
    closeExcept: function closeExcept(exceptList) {
      var _this5 = this;

      for (var chartName in this.chartsMap) {
        if (!_lodash2.default.includes(exceptList, chartName)) {
          this.closeChart(chartName);
        } else {
          this.showChart(chartName);
          this.renderChart(chartName);
        }
      }
      this.$nextTick(function () {
        _lodash2.default.forEach(exceptList, function (chartName) {
          _this5.$refs[chartName].updateChart();
        });
      });
    },
    exportData: function exportData() {
      if (this.chartsKeys.length == 1) {
        this.executeExportData(0);
      } else {
        this.$refs.exportModal.show();
      }
    },
    exportBySelection: function exportBySelection() {
      if (_lodash2.default.isNil(this.exportSelection)) {
        alert('Selecione uma série para exportar');
        return;
      }
      this.$refs.exportModal.setLoader();
      this.executeExportData(this.chartsKeysNames.indexOf(this.exportSelection));
      this.$refs.exportModal.resetLoader();
      this.$refs.exportModal.close();
    },
    executeExportData: function executeExportData(index) {
      var _this6 = this;

      var key = this.chartsKeys[index];
      var exportList = [this.chartsDates];
      var fields = ['Data'];

      _lodash2.default.forEach((0, _keys2.default)(this.chartsMap), function (chartName) {
        if (chartName in _this6.$refs) {
          var chartData = _this6.chartsMap[chartName];

          console.log("NAME: " + chartData.display_name);
          fields.push(chartData.display_name);

          var baseSerie = [];
          if (_this6.lineCharts) {
            if (_this6.movelMean) {
              if (chartData.options.no_mean) {
                baseSerie = _this6.chartsMap[chartName].raw[key];
              } else {
                baseSerie = _this6.chartsMap[chartName].mean[key];
              }
            } else {
              baseSerie = _this6.chartsMap[chartName].raw[key];
            }
          } else {
            if (chartData.options.no_bar) {
              if (chartData.options.no_bar_with_mean) {
                baseSerie = _this6.chartsMap[chartName].mean[key];
              } else {
                baseSerie = _this6.chartsMap[chartName].raw[key];
              }
            } else {
              baseSerie = _this6.chartsMap[chartName].bar[key];
            }
          }

          exportList.push(baseSerie);
        }
      });

      _export2.default.exportData('dashboard_' + this.chartsKeysNames[index], exportList, fields);
    },
    positiveMetric: function positiveMetric(value) {
      return value > 0;
    },
    negativeMetric: function negativeMetric(value) {
      return value < 0;
    },
    syncComparingFilters: function syncComparingFilters() {
      this.syncBaseComparingFilters();
      this.$refs.comparingFilter.setPrimaryFilters(this.$refs.currentFilter.baseFiltersList());
      this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(this.$refs.currentFilter.dateRange[0]).subtract(12, 'months').toDate(), (0, _moment2.default)(this.$refs.currentFilter.dateRange[1]).subtract(12, 'months').toDate()]);
    },
    syncBaseComparingFilters: function syncBaseComparingFilters() {
      this.$refs.comparingFilter.setProductLineFilter(this.$refs.currentFilter.filterProductLine);
      this.$refs.comparingFilter.setProductLineSelectionType(this.$refs.currentFilter.productLineSelectionType);
      this.$refs.comparingFilter.setFilterKinds(this.$refs.currentFilter.filterKinds);
      this.$refs.comparingFilter.setFilterLevels(this.$refs.currentFilter.filterLevels);
      this.$refs.comparingFilter.setLocationValue(this.$refs.currentFilter.locationType, this.$refs.currentFilter.locationValue());
    },
    collapseTable: function collapseTable() {
      this.tableExpanded = false;
      this.userTableExpanded = false;
    },
    expandTable: function expandTable() {
      this.tableExpanded = true;
      this.userTableExpanded = true;
    },
    hasChart: function hasChart(chartName) {
      if (chartName in this.chartsMap) {
        return true;
      }
      return false;
    },
    canExpandChart: function canExpandChart(chartName) {
      return this.chartClass(chartName) == 'col-md-6';
    },
    canCollapseChart: function canCollapseChart(chartName) {
      return this.chartClass(chartName) == 'col-md-12';
    },
    chartClass: function chartClass(chartName) {
      if (chartName in this.chartsClassesMap) return this.chartsClassesMap[chartName];
      return 'col-md-' + this.colConfig;
    },
    hideAllCharts: function hideAllCharts() {
      var _this7 = this;

      _lodash2.default.forEach(this.allCharts, function (entry) {
        Vue.set(_this7.chartsClassesMap, entry, 'hidden');
      });
    },
    showChart: function showChart(chartName) {
      Vue.delete(this.chartsClassesMap, chartName);
    },
    closeChart: function closeChart(chartName) {
      Vue.set(this.chartsClassesMap, chartName, 'hidden');
    },
    collapseChart: function collapseChart(chartName) {
      var _this8 = this;

      Vue.set(this.chartsClassesMap, chartName, 'col-md-6');
      if (!this.lineCharts) {
        this.$refs[chartName].setDrawValues(false);
        this.$nextTick(function () {
          _this8.$refs[chartName].updateChart();
        });
      }
    },
    expandChart: function expandChart(chartName) {
      var _this9 = this;

      Vue.set(this.chartsClassesMap, chartName, 'col-md-12');
      if (!this.lineCharts) {
        if (_lodash2.default.includes(this.barCharts, chartName) && this.barsValues) {
          this.$refs[chartName].setDrawValues(true, 12, 'bold');
        } else {
          this.$refs[chartName].setDrawValues(false);
        }
        this.$nextTick(function () {
          _this9.$refs[chartName].updateChart();
        });
      }
    },
    setLineCharts: function setLineCharts() {
      var _this10 = this;

      this.lineCharts = true;

      if (this.hasChartData()) {
        this.loading = true;
        setTimeout(function () {
          _this10.updateChartsType();
        }, 50);
      }
    },
    setBarCharts: function setBarCharts() {
      var _this11 = this;

      this.lineCharts = false;
      if (this.hasChartData()) {
        this.loading = true;
        setTimeout(function () {
          _this11.updateChartsType();
        }, 50);
      }
    },
    consolidatedCharts: function consolidatedCharts() {
      this.setColConfig(6);
    },
    expandedCharts: function expandedCharts() {
      this.setColConfig(12);
    },
    setColConfig: function setColConfig(value) {
      var _this12 = this;

      this.loading = true;
      setTimeout(function () {
        _this12.colConfig = value;
        _this12.chartsClassesMap = {};
        if (!_this12.lineCharts) {
          _this12.setDrawValuesAllCharts();
        }
        _this12.loading = false;
      }, 50);
    },
    toggleBarsValues: function toggleBarsValues() {
      this.barsValues = !this.barsValues;
      this.setDrawValuesAllCharts();
    },
    toggleMovelMean: function toggleMovelMean() {
      var _this13 = this;

      this.loading = true;
      setTimeout(function () {
        _this13.movelMean = !_this13.movelMean;
        _this13.updateChartsType();
        _this13.loading = false;
      }, 50);
    },
    hasChartData: function hasChartData() {
      return (0, _keys2.default)(this.chartsMap).length > 0;
    },
    updateChartsType: function updateChartsType() {
      var _this14 = this;

      if (this.hasChartData()) {
        _lodash2.default.forEach((0, _keys2.default)(this.chartsMap), function (chartName) {
          if (chartName in _this14.$refs) {
            _this14.$refs[chartName].clearSeries();
            _this14.renderChart(chartName);
          }
        });

        this.$nextTick(function () {
          _lodash2.default.forEach((0, _keys2.default)(_this14.chartsMap), function (chartName) {
            if (chartName in _this14.$refs) {
              _this14.$refs[chartName].updateChart();
            }
          });
          _this14.loading = false;
        });
      }
    },
    dumpQueryString: function dumpQueryString() {
      var filter = this.filterMap(true);

      if (!_lodash2.default.isNil(filter)) {
        var queryString = '?currentFilter=' + (0, _stringify2.default)(filter['currentFilter']) + '&comparingMode=' + this.comparingMode.type;
        if (!_lodash2.default.isNil(filter['comparingFilter'])) {
          queryString = queryString + '&comparingFilter=' + (0, _stringify2.default)(filter['comparingFilter']);
        }
        if (!_lodash2.default.isNil(filter['grouping'])) {
          queryString = queryString + '&grouping=' + (0, _stringify2.default)(filter['grouping']);
        }
        queryString = queryString + '&exibitionType=' + this.exibitionType;
        window.history.pushState('', '', window.location.pathname + queryString);
      }
    },
    parseQueryString: function parseQueryString() {
      var _this15 = this;

      var urlParams = new URLSearchParams(window.location.search);

      var currentFilter = urlParams.get('currentFilter');
      var comparingMode = urlParams.get('comparingMode');
      var comparingFilter = urlParams.get('comparingFilter');
      var grouping = urlParams.get('grouping');
      var exibitionType = urlParams.get('exibitionType');
      var hasFilter = false;

      if (!_lodash2.default.isNil(exibitionType)) {
        this.exibitionType = exibitionType;
      }

      if (!_lodash2.default.isNil(currentFilter)) {
        currentFilter = JSON.parse(currentFilter);
        this.$refs.currentFilter.setFiltersData(currentFilter);
        hasFilter = true;
      }

      if (!_lodash2.default.isNil(comparingMode)) {
        var filtered = _lodash2.default.filter(this.comparingOptions, function (entry) {
          return entry.type == comparingMode;
        });

        if (filtered.length > 0) {
          this.comparingMode = filtered[0];
        }
      }

      if (!_lodash2.default.isNil(grouping)) {
        grouping = JSON.parse(grouping);
        this.grouping = grouping;

        if (!_lodash2.default.isNil(currentFilter)) {
          var filteredSeries = _lodash2.default.filter(this.seriesSelectionOptions, function (entry) {
            return entry.id == currentFilter['seriesSelection'];
          });
          if (filteredSeries.length > 0) {
            this.seriesSelection = filteredSeries[0];
          }

          var filteredSeriesField = _lodash2.default.filter(this.seriesSelectionFieldOptions, function (entry) {
            return entry.id == currentFilter['seriesSelectionField'];
          });
          if (filteredSeriesField.length > 0) {
            this.seriesSelectionField = filteredSeriesField[0];
          }
        }
      }

      if (!_lodash2.default.isNil(comparingFilter)) {
        comparingFilter = JSON.parse(comparingFilter);
        this.$refs.comparingFilter.setFiltersData(comparingFilter);
      } else {
        if (!_lodash2.default.isNil(currentFilter)) {
          this.$refs.comparingFilter.setFiltersData(currentFilter);
        }
      }

      if (hasFilter) {
        this.$nextTick(function () {
          _this15.update();
        });
      }
    },
    setInitialFilterData: function setInitialFilterData(filterComponent, data) {
      filterComponent.setLevels(data.levels);
      filterComponent.setKinds(data.kinds);
      filterComponent.setLocations(data.locationTypes);
      filterComponent.setGroups(data.groupTypes);
      filterComponent.setAccountTypes(data.accountTypes);
      filterComponent.setUniversities(data.universities);
      filterComponent.setUniversityGroups(data.groups);
      filterComponent.setSemesterRange(data.semesterStart, data.semesterEnd);
      filterComponent.setDealOwners(data.dealOwners);
      filterComponent.setQualityOwners(data.qualityOwners);
      filterComponent.setRegions(data.regions);
      filterComponent.setStates(data.states);
      filterComponent.setProductLines(data.product_lines);
      filterComponent.setFarmRegions(data.farm_regions);
      filterComponent.setCities([]);
      filterComponent.setCampus([]);
    },
    filterMap: function filterMap(ommitValidation) {
      var currentFilter = this.$refs.currentFilter.filterData(ommitValidation);
      if (!currentFilter) {
        console.log("currentFilter vazio");
        return;
      }

      var filter = { currentFilter: currentFilter };
      if (this.comparingMode.type != 'no_compare') {
        if (this.comparingMode.type == 'grouping') {
          filter.grouping = this.grouping;
          filter.currentFilter.seriesSelection = this.seriesSelection["id"];
          filter.currentFilter.seriesSelectionField = this.seriesSelectionField["id"];
        } else {
          var comparingFilter = this.$refs.comparingFilter.filterData(ommitValidation);
          if (!comparingFilter) {
            console.log("comparingFilter vazio");
          } else {
            filter.comparingFilter = comparingFilter;
          }
        }
      }
      filter.comparingMode = this.comparingMode.type;
      return filter;
    },
    filterGroupingOptions: function filterGroupingOptions(fields) {
      if (!_lodash2.default.isNil(this.grouping)) {
        if (_lodash2.default.includes(fields, this.grouping.id)) {
          this.grouping = null;
        }
      }
      return _lodash2.default.filter(this.groupingOptions, function (entry) {
        return !_lodash2.default.includes(fields, entry["id"]);
      });
    },
    completeLocation: function completeLocation(index) {
      var filter = this.$refs.currentFilter;
      if (index == 1) filter = this.$refs.comparingFilter;

      filter.setCitiesLoading();
      filter.setCampusLoading();

      console.log("completeLocation# ID: " + index + " TYPE: " + (0, _stringify2.default)(filter.getLocationType()));

      var filterParams = this.filterMap(true);
      if (_lodash2.default.isNil(filterParams)) {
        return;
      }
      filterParams.field = filter.getLocationType().type;
      filterParams.index = index;

      DashboardChannel.push('filterComplete', filterParams).receive('timeout', function () {
        console.log("filterComplete timeout");
      });
    },
    update: function update() {
      var filter = this.filterMap();
      if (_lodash2.default.isNil(filter)) {
        return;
      }

      if (this.exibitionType == 'custom_charts') {
        this.exibitionType = 'all_charts';
      }

      this.dumpQueryString();

      this.tableExpanded = false;

      this.clearCharts();
      this.hideAllCharts();

      this.chartsMap = {};
      this.loading = true;
      this.metrics = [];
      this.metricsCompare = null;
      this.exportSelection = null;
      this.metricsNames = this.baseMetrics;
      this.updateEnabled = false;

      DashboardChannel.push('filter', filter).receive('timeout', function () {
        console.log("load timeout");
      });
    },
    loadFilters: function loadFilters() {
      DashboardChannel.push('loadFilters').receive('timeout', function () {
        console.log("filters timeout");
      });
    },
    receiveCitiesFilterData: function receiveCitiesFilterData(data) {
      if (data.index == 0) {
        this.$refs.currentFilter.setCities(data.cities);
      } else {
        this.$refs.comparingFilter.setCities(data.cities);
      }
    },
    receiveCampusFilterData: function receiveCampusFilterData(data) {
      if (data.index == 0) {
        this.$refs.currentFilter.setCampus(data.campus);
      } else {
        this.$refs.comparingFilter.setCampus(data.campus);
      }
    },
    receiveFilterData: function receiveFilterData(data) {
      console.log("receiveFilterData");
      this.setInitialFilterData(this.$refs.currentFilter, data);
      this.setInitialFilterData(this.$refs.comparingFilter, data);

      this.baseMetrics = data.baseMetrics;
      this.metricsNames = this.baseMetrics;

      this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(data.semesterStart).subtract(12, 'months').toDate(), (0, _moment2.default)(data.semesterEnd).subtract(12, 'months').toDate()]);

      this.filtersLoading = false;

      this.parseQueryString();
    },
    receiveTableMetrics: function receiveTableMetrics(data) {
      this.metricsNames = data.metrics_keys;

      this.seriesNames[0] = this.$refs.currentFilter.baseFiltersCaption();

      if (this.comparingMode.type != 'no_compare') {
        if (this.comparingMode.type == 'year_to_year') {
          this.seriesNames[1] = 'Ano Anterior';
        } else {
          this.seriesNames[1] = this.$refs.comparingFilter.baseFiltersCaption();
        }
      }
    },
    receiveTableData: function receiveTableData(data) {
      console.log("receiveTableData# data: " + (0, _stringify2.default)(data));

      if (!_lodash2.default.isNil(this.userTableExpanded)) {
        this.tableExpanded = this.userTableExpanded;
      } else {
        this.tableExpanded = true;
      }

      while (this.metrics.length <= data.metric) {
        this.metrics.push([]);
      }
      var currentSeries = this.metrics[data.metric];
      while (currentSeries.length <= data.index) {
        currentSeries.push({ series_name: '-', table: {} });
      }
      currentSeries.splice(data.index, 1, data);

      var otherIndex = 1 - data.metric;
      if (this.metrics.length > otherIndex) {
        if (!_lodash2.default.isNil(this.metrics[otherIndex][data.index])) {
          if (_lodash2.default.isNil(this.metricsCompare)) {
            this.metricsCompare = [];
          }

          while (this.metricsCompare.length <= data.index) {
            this.metricsCompare.push({ series_name: '-', table: {} });
          }

          if (!_lodash2.default.isEmpty(this.metrics[otherIndex][data.index].table)) {
            var compareTable = this.calculateRelations(this.metrics[0][data.index].raw_table, this.metrics[1][data.index].raw_table);
            this.metricsCompare.splice(data.index, 1, compareTable);
          }
        }
      }
    },
    calculateRelations: function calculateRelations(baseTable, compareTable) {
      var metrics = ['atraction_rate', 'success_rate', 'conversion_rate', 'initiated_orders', 'refunds', 'visits', 'initiateds', 'exchangeds', 'mean_income', 'mean_ticket', 'legacy_mean_income', 'legacy_mean_ticket', 'income', 'qap_income', 'velocimeter', 'paids', 'bos', 'skus', 'orders_share', 'paids_share', 'visits_share'];
      var relations = _lodash2.default.map(metrics, function (metric) {
        console.log("metric: " + metric + " BASE: " + baseTable[metric] + " COMPARE: " + compareTable[metric]);
        var atual = baseTable[metric];
        var comparativo = compareTable[metric];
        if (_lodash2.default.isNil(atual) || _lodash2.default.isNil(comparativo)) {
          return '-';
        }
        var relation = (atual - comparativo) / comparativo * 100;
        return relation.toFixed(2);
      });
      console.log("relations: " + (0, _stringify2.default)(relations));
      var returnMap = {};
      _lodash2.default.forEach(_lodash2.default.zip(metrics, relations), function (entry) {
        returnMap[entry[0]] = entry[1];
      });
      return returnMap;
    },
    receiveChartData: function receiveChartData(data) {
      var _this16 = this;

      var index = data.index;
      console.log("receiveChartData# index: " + index + " this.chartsKeys: " + (0, _stringify2.default)(this.chartsKeys));
      if ('dates' in data) {
        if (index == 0) {
          this.chartsDates = data.dates;
        }
      }
      if ('keys' in data) {
        if (index == 0) {
          this.chartsKeys = data.keys;
        } else {
          this.chartsKeys = this.chartsKeys.concat(data.keys);
        }
      }
      if ('keys_names' in data) {
        if (index == 0) {
          this.chartsKeysNames = data.keys_names;
        } else {
          this.chartsKeysNames = this.chartsKeysNames.concat(data.keys_names);
        }
      }

      console.log("receiveChartData# this.chartsKeys: " + (0, _stringify2.default)(this.chartsKeys));

      _lodash2.default.forEach(data.charts, function (entry) {
        if (entry.name in _this16.$refs) {
          if (entry.name in _this16.chartsMap) {
            var entryKeys = (0, _keys2.default)(entry.raw);
            _lodash2.default.forEach(entryKeys, function (key) {
              _this16.chartsMap[entry.name].raw[key] = entry.raw[key];
              _this16.chartsMap[entry.name].mean[key] = entry.mean[key];
              _this16.chartsMap[entry.name].bar[key] = entry.bar[key];
            });
          } else {
            _this16.chartsMap[entry.name] = entry;
          }
          if (_this16.chartVisibleForView(entry.name)) {
            Vue.delete(_this16.chartsClassesMap, entry.name);
            _this16.renderChart(entry.name);
          } else {
            Vue.set(_this16.chartsClassesMap, entry.name, 'hidden');
          }
        }
      });

      this.$nextTick(function () {
        _lodash2.default.forEach(data.charts, function (entry) {
          if (entry.name in _this16.$refs) {
            _this16.$refs[entry.name].updateChart();
          }
        });
      });

      this.loading = false;
      this.$nextTick(function () {
        if (index === 0) {
          if (_this16.comparingMode.type == 'no_compare' || _this16.comparingMode.type == 'grouping') {
            _this16.updateEnabled = true;
          }
        } else {
          _this16.updateEnabled = true;
        }
      });
    },
    clearCharts: function clearCharts() {
      var _this17 = this;

      _lodash2.default.forEach((0, _keys2.default)(this.chartsMap), function (chartName) {
        if (chartName in _this17.$refs) {
          _this17.$refs[chartName].clearSeries();
          _this17.$nextTick(function () {
            _this17.$refs[chartName].updateChart();
          });
        }
      });
    },
    setDrawValuesAllCharts: function setDrawValuesAllCharts() {
      var _this18 = this;

      _lodash2.default.forEach(this.barCharts, function (chartName) {
        if (chartName in _this18.$refs) {
          if (_this18.barsValues && _this18.canCollapseChart(chartName)) {
            _this18.$refs[chartName].setDrawValues(true, 12, 'bold');
          } else {
            _this18.$refs[chartName].setDrawValues(false);
          }
          _this18.$nextTick(function () {
            _this18.$refs[chartName].updateChart();
          });
        }
      });
    },
    renderChart: function renderChart(chartName) {
      var chartData = this.chartsMap[chartName];

      var dates = this.chartsDates;
      if ('dates' in chartData) {
        dates = _lodash2.default.cloneDeep(chartData.dates);
      }
      var keys = this.chartsKeys;
      if ('keys' in chartData) {
        keys = chartData.keys;
      }
      var keysNames = this.chartsKeysNames;
      if ('keysNames' in chartData) {
        keysNames = chartData.keysNames;
      }

      var currentMax = this.groupingMax.id;
      if (currentMax == 0) currentMax = 30;

      var currentChartSeries = [];
      var chartType = null;

      if (this.lineCharts) {
        chartType = 'line';
        if (this.movelMean) {
          currentChartSeries = chartData.mean;
          if (chartData.options.no_mean) {
            currentChartSeries = chartData.raw;
          }
        } else {
          currentChartSeries = chartData.raw;
        }
      } else {
        if (chartData.options.no_bar) {
          chartType = 'line';

          if (chartData.options.no_bar_with_mean) {
            currentChartSeries = chartData.mean;
          } else {
            currentChartSeries = chartData.raw;
          }
        } else {
          chartType = 'bar';
          var barData = {};
          var barDates = [];

          for (var i = 0; i < dates.length; i += chartData.options.bar_size + 1) {
            _lodash2.default.forEach((0, _keys2.default)(chartData.bar), function (key) {
              if (!(key in barData)) {
                barData[key] = [];
              }
              barData[key].push(chartData.bar[key][i]);
            });
            barDates.push(dates[i]);
          }
          currentChartSeries = barData;
          dates = barDates;
        }
      }

      if (chartType == 'bar') {
        if (this.barCharts.indexOf(chartName) < 0) {
          this.barCharts.push(chartName);
        }
      } else {
        var currentIndex = this.barCharts.indexOf(chartName);
        if (currentIndex >= 0) {
          this.barCharts.splice(currentIndex, 1);
        }
      }

      this.$refs[chartName].setLabels(dates);

      var maximo = keys.length > currentMax ? currentMax : keys.length;
      for (var i = 0; i < maximo; i++) {
        if (chartType == 'line') {
          this.$refs[chartName].setXAxesAutoSkip(true);
          this.$refs[chartName].setDrawValues(false);
          this.$refs[chartName].setPadding({ left: 0, right: 0, top: 0, bottom: 0 });
        } else {
          this.$refs[chartName].setXAxesAutoSkip(false);

          if (this.canCollapseChart(chartName)) {
            this.$refs[chartName].setDrawValues(true, 12, 'bold');
          } else {
            this.$refs[chartName].setDrawValues(false);
          }
          this.$refs[chartName].setXAxesBarPercentage(0.7);
          this.$refs[chartName].setPadding({ left: 0, right: 0, top: 20, bottom: 0 });
        }

        var keyName = keysNames[i];
        if (keys[i] == 'base') {
          var sufix = this.$refs.currentFilter.baseFiltersCaption();
          keyName = sufix;
        }
        if (keys[i] == 'comparing') {
          if (this.comparingMode.type == 'year_to_year') {
            keyName = 'Ano Anterior';
          } else {
            keyName = this.$refs.comparingFilter.baseFiltersCaption();
          }
        }
        this.$refs[chartName].setSeriesWithOptions(i, currentChartSeries[keys[i]], keyName, { type: chartType, borderWidth: 2 });

        if (this.beginChartsAtZero) {
          this.$refs[chartName].setYBeginAtZero(true);
        } else {
          this.$refs[chartName].setYBeginAtZero(false);
        }
      }
    },
    currentKindSelected: function currentKindSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setFilterKinds(data);
    },
    currentProductLineSelectionTypeSelected: function currentProductLineSelectionTypeSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setProductLineSelectionType(data);
    },
    currentProductLineSelected: function currentProductLineSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setProductLineFilter(data);
    },
    currentLevelSelected: function currentLevelSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setFilterLevels(data);
    },
    currentRangeSelected: function currentRangeSelected(data) {
      if (this.comparingMode.type == 'custom_compare' || this.comparingMode.type == 'all_data') {
        this.$refs.comparingFilter.setDateRange(data);
      } else {
        if (this.comparingMode.type == 'previous_period') {
          this.setPreviousPeriod();
        } else {
          this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(data[0]).subtract(12, 'months').toDate(), (0, _moment2.default)(data[1]).subtract(12, 'months').toDate()]);
        }
      }
    },
    currentPrimarySelected: function currentPrimarySelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      if (this.comparingMode.type == 'all_data') {
        return;
      }
      this.$refs.comparingFilter.setPrimaryFilters(data);
    },
    currentLocationTypeSelected: function currentLocationTypeSelected(data, index) {
      var _this19 = this;

      if (!_lodash2.default.isNil(data)) {
        if (_lodash2.default.includes(['city', 'campus'], data.type)) {
          this.$nextTick(function () {
            _this19.completeLocation(index);
          });
        }
      }
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setLocationType(data);
    },
    currentLocationRemoved: function currentLocationRemoved(type, value) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setLocationValue(type, value);
    },
    currentLocationSelected: function currentLocationSelected(type, value) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setLocationValue(type, value);
    },
    setCurrentPeriod: function setCurrentPeriod() {
      this.$refs.comparingFilter.setDateRange(this.$refs.currentFilter.getDateRange());
    },
    setPreviousPeriod: function setPreviousPeriod() {
      var dateRange = this.$refs.currentFilter.getDateRange();
      var dataDiff = (0, _moment2.default)(dateRange[1]).diff((0, _moment2.default)(dateRange[0]), 'days') + 1;
      console.log("setPreviousPeriod# dataDiff: " + dataDiff);
      this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(dateRange[0]).subtract(dataDiff, 'days').toDate(), (0, _moment2.default)(dateRange[1]).subtract(dataDiff, 'days').toDate()]);
      console.log("setPreviousPeriod# RANGE: " + this.$refs.comparingFilter.getDateRange());
    },
    setPreviousYearPeriod: function setPreviousYearPeriod() {
      var dateRange = this.$refs.currentFilter.getDateRange();
      this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(dateRange[0]).subtract(12, 'months').toDate(), (0, _moment2.default)(dateRange[1]).subtract(12, 'months').toDate()]);
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('modal-dialog',{ref:"exportModal",attrs:{"identification":_vm.exporting-_vm.modal}},[_c('div',{staticClass:"modal-header"},[_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("×")]),_vm._v(" "),_c('h2',{staticClass:"modal-title"},[_vm._v("SELECIONE A SÉRIE PARA EXPORTAR")])]),_vm._v(" "),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('multiselect',{attrs:{"options":_vm.chartsKeysNames,"placeholder":"Selecione a série"},model:{value:(_vm.exportSelection),callback:function ($$v) {_vm.exportSelection=$$v},expression:"exportSelection"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"modal-footer"},[_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button"},on:{"click":_vm.exportBySelection}},[_vm._v("Exportar")])])]),_vm._v(" "),_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.filtersLoading || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-filter',{ref:"currentFilter",attrs:{"period-disabled":false,"index":"0"},on:{"primaryFilterSelected":_vm.currentPrimarySelected,"locationTypeSelected":_vm.currentLocationTypeSelected,"locationSelected":_vm.currentLocationSelected,"timeRangeSelected":_vm.currentRangeSelected,"kindSelected":_vm.currentKindSelected,"levelSelected":_vm.currentLevelSelected,"productLineSelected":_vm.currentProductLineSelected,"productLineSelectionTypeSelected":_vm.currentProductLineSelectionTypeSelected,"locationRemoved":_vm.currentLocationRemoved}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-12"},[_c('div',[_c('label',[_vm._v("COMPARATIVO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.comparingOptions,"allowEmpty":false,"label":"name","track-by":"type","placeholder":"Selecione o comparativo","selectLabel":"Enter para selecionar","deselectLabel":""},model:{value:(_vm.comparingMode),callback:function ($$v) {_vm.comparingMode=$$v},expression:"comparingMode"}})],1)])])])]),_vm._v(" "),_c('panel-filter',{directives:[{name:"show",rawName:"v-show",value:(_vm.showComparingFilter),expression:"showComparingFilter"}],ref:"comparingFilter",attrs:{"period-disabled":true,"filter-disabled":_vm.comparingDisabled,"index":"1"},on:{"locationTypeSelected":_vm.currentLocationTypeSelected}}),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showGroupingOptions),expression:"showGroupingOptions"}],staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("AGRUPAR POR")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.currentGroupingOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":_vm.groupValueSelected},model:{value:(_vm.grouping),callback:function ($$v) {_vm.grouping=$$v},expression:"grouping"}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.grouping),expression:"grouping"}],staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("NÚMERO DE SÉRIES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.groupingMaxOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":_vm.groupMaxSelected},model:{value:(_vm.groupingMax),callback:function ($$v) {_vm.groupingMax=$$v},expression:"groupingMax"}})],1),_vm._v(" "),(_vm.canSelectSeries)?[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.grouping),expression:"grouping"}],staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("SELEÇÃO DE SÉRIES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.seriesSelectionOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":function($event){}},model:{value:(_vm.seriesSelection),callback:function ($$v) {_vm.seriesSelection=$$v},expression:"seriesSelection"}})],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.grouping),expression:"grouping"}],staticClass:"col-md-3 col-sm-12"},[_c('label',[_vm._v("CAMPO DE SELEÇÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"allow-empty":false,"options":_vm.seriesSelectionFieldOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},on:{"input":function($event){}},model:{value:(_vm.seriesSelectionField),callback:function ($$v) {_vm.seriesSelectionField=$$v},expression:"seriesSelectionField"}})],1)]:_vm._e()],2),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",attrs:{"enabled":_vm.updateEnabled},on:{"click":_vm.update}},[_vm._v("\n                  Atualizar\n                ")]),_vm._v(" "),_c('div',{staticStyle:{"justify-content":"flex-end","margin-left":"50px"}},[_c('div',{class:_vm.consolidatedButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:" glyphicon glyphicon-barcode",attrs:{"title":"Gráficos lado a lado"},on:{"click":_vm.consolidatedCharts}})]),_vm._v(" "),_c('div',{class:_vm.expandedButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:"glyphicon glyphicon-book",attrs:{"title":"Gráficos em linhas"},on:{"click":_vm.expandedCharts}})])]),_vm._v(" "),_c('div',{staticStyle:{"justify-content":"flex-end","margin-left":"50px"}},[_c('div',{class:_vm.linesButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:" glyphicon glyphicon-flash",attrs:{"title":"Gráfico de linhas"},on:{"click":_vm.setLineCharts}})]),_vm._v(" "),_c('div',{class:_vm.barsButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:" glyphicon glyphicon-stats",attrs:{"title":"Gráfico de barras"},on:{"click":_vm.setBarCharts}})])]),_vm._v(" "),_c('div',{staticClass:"small-margin-left"},[_c('div',{staticClass:"dropdown",staticStyle:{"border":"none !important"},attrs:{"data-ref":"export-data"}},[_vm._m(1),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu"},[_c('li',[_c('a',{directives:[{name:"show",rawName:"v-show",value:(_vm.lineCharts),expression:"lineCharts"}],staticClass:"clickable",on:{"click":function($event){return _vm.toggleMovelMean()}}},[(_vm.movelMean)?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v(" Média móvel")])]),_vm._v(" "),_c('li',[_c('a',{directives:[{name:"show",rawName:"v-show",value:(!_vm.lineCharts),expression:"!lineCharts"}],staticClass:"clickable",on:{"click":function($event){return _vm.toggleBarsValues()}}},[(_vm.barsValues)?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v(" Valores nas barras")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.exportData()}}},[_c('span',{staticClass:"glyphicon glyphicon-download-alt"}),_vm._v("\n                          Exportar\n                        ")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.toggleBeginAtZero()}}},[(_vm.beginChartsAtZero)?_c('span',{staticClass:"glyphicon glyphicon-check"}):_vm._e(),_vm._v("\n                          Iniciar gráficos no zero\n                        ")])])])])]),_vm._v(" "),_c('div',{staticClass:"small-margin-left"},[_c('div',{staticClass:"dropdown",staticStyle:{"border":"none !important"},attrs:{"data-ref":"export-data"}},[_vm._m(2),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu"},[_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.setCustomizedView('all_charts')}}},[(_vm.exibitionType == 'all_charts')?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v("\n                          Todos os gráficos\n                        ")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.setCustomizedView('partner_charts')}}},[(_vm.exibitionType == 'partner_charts')?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v("\n                          Parceiro\n                        ")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.setCustomizedView('rates_charts')}}},[(_vm.exibitionType == 'rates_charts')?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v("\n                          Taxas\n                        ")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.setCustomizedView('stock_charts')}}},[(_vm.exibitionType == 'stock_charts')?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v("\n                          Estoque\n                        ")])]),_vm._v(" "),_c('li',{staticClass:"dropdown-submenu"},[_c('a',{staticClass:"clickable"},[(_vm.exibitionType == 'custom_charts')?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v("\n                          Escolher graficos\n                        ")]),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu"},_vm._l((_vm.chartsMap),function(entry){return _c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.toggleChart(entry.name)}}},[(_vm.chartClass(entry.name) != 'hidden')?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v("\n                              "+_vm._s(entry.display_name)+"\n                            ")])])}),0)])])])])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          CONSOLIDADO\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.tableExpanded)?_c('span',{staticClass:"glyphicon glyphicon-menu-up clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseTable()}}}):_vm._e(),_vm._v(" "),(!_vm.tableExpanded)?_c('span',{staticClass:"glyphicon glyphicon-menu-down clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandTable()}}}):_vm._e()])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.tableExpanded),expression:"tableExpanded"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[(_vm.tableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('table',{staticClass:"data-table data-table-tiny"},[_c('thead',[(_vm.metrics[0] && _vm.metricsNames)?_c('tr',[_c('th'),_vm._v(" "),_c('th',{attrs:{"colspan":_vm.metrics[0].length}},[_vm._v(_vm._s(_vm.seriesNames[0]))]),_vm._v(" "),(_vm.metrics[1])?[_c('th',{staticStyle:{"width":"70px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',{attrs:{"colspan":_vm.metrics[1].length}},[_vm._v(_vm._s(_vm.seriesNames[1]))])]:_vm._e(),_vm._v(" "),(_vm.metricsCompare)?[_c('th',{staticStyle:{"width":"70px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',{attrs:{"colspan":_vm.metricsCompare.length}},[_vm._v("Variação")])]:_vm._e()],2):_vm._e(),_vm._v(" "),_c('tr',[_c('th'),_vm._v(" "),_vm._l((_vm.metrics[0]),function(serie){return _c('th',[_vm._v("\n                        "+_vm._s(serie.series_name)+"\n                      ")])}),_vm._v(" "),(_vm.metrics[1])?[_c('th',{staticStyle:{"width":"70px","background-color":"#3B4347"}}),_vm._v(" "),_vm._l((_vm.metrics[1]),function(serie){return _c('th',[_vm._v("\n                          "+_vm._s(serie.series_name)+"\n                        ")])})]:_vm._e(),_vm._v(" "),(_vm.metricsCompare)?[_c('th',{staticStyle:{"width":"70px","background-color":"#3B4347"}}),_vm._v(" "),_vm._l((_vm.metricsCompare),function(serie,index){return _c('th',_vm._l((index + 1),function(n){return _c('span',[_vm._v("I")])}),0)})]:_vm._e()],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.metricsNames),function(metricEntry){return _c('tr',[_c('td',[_vm._v(_vm._s(metricEntry.name))]),_vm._v(" "),_vm._l((_vm.metrics[0]),function(serie){return _c('td',[_vm._v("\n                        "+_vm._s(serie.table[metricEntry.key])+"\n                      ")])}),_vm._v(" "),(_vm.metrics[1])?[_c('td'),_vm._v(" "),_vm._l((_vm.metrics[1]),function(serie){return _c('td',[_vm._v("\n                          "+_vm._s(serie.table[metricEntry.key])+"\n                        ")])})]:_vm._e(),_vm._v(" "),(_vm.metricsCompare)?[_c('td'),_vm._v(" "),_vm._l((_vm.metricsCompare),function(serie){return _c('td',{staticClass:"no-wrap"},[(_vm.positiveMetric(serie[metricEntry.key]))?_c('span',{staticClass:"glyphicon glyphicon-arrow-up compare-arrow-up"}):_vm._e(),_vm._v(" "),(_vm.negativeMetric(serie[metricEntry.key]))?_c('span',{staticClass:"glyphicon glyphicon-arrow-down compare-arrow-down"}):_vm._e(),_vm._v("\n                          "+_vm._s(serie[metricEntry.key])+" "),(serie[metricEntry.key] != '-')?_c('span',[_vm._v("%")]):_vm._e()])})]:_vm._e()],2)}),0)])])])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{class:_vm.chartClass('atractionChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Taxa de Atratividade (%)\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('atractionChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('atractionChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('atractionChart')}}}),_vm._v(" "),(_vm.canExpandChart('atractionChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('atractionChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"atractionChart",attrs:{"export-name":"taxa_atratividade"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('successChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Taxa de Sucesso (%)\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('successChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('successChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('successChart')}}}),_vm._v(" "),(_vm.canExpandChart('successChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('successChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"successChart",attrs:{"export-name":"taxa_sucesso"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('conversionChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Taxa de Conversão (%)\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('conversionChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('conversionChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('conversionChart')}}}),_vm._v(" "),(_vm.canExpandChart('conversionChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('conversionChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"conversionChart",attrs:{"export-name":"taxa_conversao"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('ordersChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Ordens Iniciadas\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('ordersChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('ordersChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('ordersChart')}}}),_vm._v(" "),(_vm.canExpandChart('ordersChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('ordersChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"ordersChart",attrs:{"export-name":"ordens_iniciadas"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('paidsChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Ordens Pagas\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('paidsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('paidsChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('paidsChart')}}}),_vm._v(" "),(_vm.canExpandChart('paidsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('paidsChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"paidsChart",attrs:{"export-name":"ordens_pagas"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('visitsChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Visitas em páginas de ofertas\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('visitsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('visitsChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('visitsChart')}}}),_vm._v(" "),(_vm.canExpandChart('visitsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('visitsChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"visitsChart",attrs:{"export-name":"visitas_ofertas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasChart('universityVisitsChart')),expression:"hasChart('universityVisitsChart')"}],class:_vm.chartClass('universityVisitsChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Visitas em páginas de universidade\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('universityVisitsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('universityVisitsChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('universityVisitsChart')}}}),_vm._v(" "),(_vm.canExpandChart('universityVisitsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('universityVisitsChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"universityVisitsChart",attrs:{"export-name":"visitas_universidade"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('revenueChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Receita ( com LTV )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('revenueChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('revenueChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('revenueChart')}}}),_vm._v(" "),(_vm.canExpandChart('revenueChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('revenueChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"revenueChart",attrs:{"export-name":"receita"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasChart('velocimeterChart')),expression:"hasChart('velocimeterChart')"}],class:_vm.chartClass('velocimeterChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Velocimetro\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('velocimeterChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('velocimeterChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('velocimeterChart')}}}),_vm._v(" "),(_vm.canExpandChart('velocimeterChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('velocimeterChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"velocimeterChart",attrs:{"export-name":"velocimetro"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('meanTicketChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Ticket Médio ( LTV )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('meanTicketChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('meanTicketChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('meanTicketChart')}}}),_vm._v(" "),(_vm.canExpandChart('meanTicketChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('meanTicketChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"meanTicketChart",attrs:{"export-name":"ticket_medio_ltv"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('legacyMeanTicketChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Ticket Médio ( Pré-Matrícula )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('legacyMeanTicketChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('legacyMeanTicketChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('legacyMeanTicketChart')}}}),_vm._v(" "),(_vm.canExpandChart('legacyMeanTicketChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('legacyMeanTicketChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"legacyMeanTicketChart",attrs:{"export-name":"ticket_medio_pef"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('meanIncomeChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Faturamento por ordem ( LTV )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('meanIncomeChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('meanIncomeChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('meanIncomeChart')}}}),_vm._v(" "),(_vm.canExpandChart('meanIncomeChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('meanIncomeChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"meanIncomeChart",attrs:{"export-name":"faturamento_por_ordem_ltv"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('legacyMeanIncomeChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Faturamento por ordem ( Pré-Matricula )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('legacyMeanIncomeChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('meanIncomeChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('meanIncomeChart')}}}),_vm._v(" "),(_vm.canExpandChart('legacyMeanIncomeChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('meanIncomeChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"legacyMeanIncomeChart",attrs:{"export-name":"faturamento_por_ordem_pef"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('refundsChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          REEMBOLSOS\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('refundsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('refundsChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('refundsChart')}}}),_vm._v(" "),(_vm.canExpandChart('refundsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('refundsChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"refundsChart",attrs:{"export-name":"reembolsos"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('cumRefundsChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          REEMBOLSOS / PAGOS ( acumulado no período )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('cumRefundsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('cumRefundsChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('cumRefundsChart')}}}),_vm._v(" "),(_vm.canExpandChart('cumRefundsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('cumRefundsChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"cumRefundsChart",attrs:{"export-name":"reembolsos_acumulados_por_pagos"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('bosChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          BOS\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('bosChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('bosChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('bosChart')}}}),_vm._v(" "),(_vm.canExpandChart('bosChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('bosChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"bosChart",attrs:{"export-name":"bos"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('cumBosChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          BOS / PAGOS ( acumulado no período )\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('cumBosChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('cumBosChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('cumBosChart')}}}),_vm._v(" "),(_vm.canExpandChart('cumBosChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('cumBosChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"cumBosChart",attrs:{"export-name":"bos_acumulados_por_pagos"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('stockChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Estoque - SKU's\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('stockChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('stockChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('stockChart')}}}),_vm._v(" "),(_vm.canExpandChart('stockChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('stockChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"stockChart",attrs:{"export-name":"estoque"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('discountChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Estoque - Média do desconto oferecido\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('discountChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('discountChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('discountChart')}}}),_vm._v(" "),(_vm.canExpandChart('discountChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('discountChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"discountChart",attrs:{"export-name":"desconto"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('offeredChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Estoque - Média do preço oferecido\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('offeredChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('offeredChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('offeredChart')}}}),_vm._v(" "),(_vm.canExpandChart('offeredChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('offeredChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"offeredChart",attrs:{"export-name":"preco_oferecido"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasChart('deepStockChart')),expression:"hasChart('deepStockChart')"}],class:_vm.chartClass('deepStockChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Estoque profundo - SKU's\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('deepStockChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('deepStockChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('deepStockChart')}}}),_vm._v(" "),(_vm.canExpandChart('deepStockChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('deepStockChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"deepStockChart",attrs:{"export-name":"estoque_profundo"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('exchangesChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Trocas realizadas\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('exchangesChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('exchangesChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('exchangesChart')}}}),_vm._v(" "),(_vm.canExpandChart('exchangesChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('exchangesChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"exchangesChart",attrs:{"export-name":"trocas_realizadas"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('cumPaidsChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Acumulado de pagos\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('cumPaidsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('cumPaidsChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('cumPaidsChart')}}}),_vm._v(" "),(_vm.canExpandChart('cumPaidsChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('cumPaidsChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"cumPaidsChart",attrs:{"export-name":"acumulado_de_pagos"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass('cumRevenueChart')},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Acumulado de receita\n          "),_c('div',{staticStyle:{"float":"right"}},[(_vm.canCollapseChart('cumRevenueChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-left clickable",attrs:{"title":"Colapsar"},on:{"click":function($event){return _vm.collapseChart('cumRevenueChart')}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-remove-sign clickable",attrs:{"title":"Fechar gráfico"},on:{"click":function($event){return _vm.closeChart('cumRevenueChart')}}}),_vm._v(" "),(_vm.canExpandChart('cumRevenueChart'))?_c('span',{staticClass:"glyphicon glyphicon-menu-right clickable",attrs:{"title":"Expandir"},on:{"click":function($event){return _vm.expandChart('cumRevenueChart')}}}):_vm._e()])]),_vm._v(" "),_c('base-chart',{ref:"cumRevenueChart",attrs:{"export-name":"acumulado_de_receita"}})],1)])])],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Dashboard\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dropdown-toggle",attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"flex-grow dropdown-label",staticStyle:{"margin-right":"5px"}},[_vm._v("Opções")]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-chevron-down float-right"})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dropdown-toggle",attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"flex-grow dropdown-label",staticStyle:{"margin-right":"5px"}},[_vm._v("Exibição")]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-chevron-down float-right"})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-1dd31ec6", __vue__options__)
  } else {
    hotAPI.reload("data-v-1dd31ec6", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/demand-curves.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelFilter = require('./panel-filter');

var _panelFilter2 = _interopRequireDefault(_panelFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _scatterChart = require('./scatter-chart');

var _scatterChart2 = _interopRequireDefault(_scatterChart);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _queryString = require('../js/query-string');

var _queryString2 = _interopRequireDefault(_queryString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loadingFilters: true,
      coursesLoading: false,
      movelMean: true,
      dataLoading: false,
      canonicalCoursesOptions: [],
      canonicalCourse: null,
      totalPoints: null,
      usedPoints: null,
      currentOfferedPrice: null,
      currentDemandCoverage: null,
      simulatedDemandCoverage: null,
      currentCoverage: null,
      currentFullPrice: null,
      simulatedPrice: null,
      simulatedCoverage: null,
      currentOptimalPrice: null,
      calculatedOptimalDemand: null,
      calculatedOptimalPrice: null,
      calculatedSecondOptimalDemand: [],
      calculatedSecondOptimalPrice: [],
      curvePoints: null,
      optimizedOptions: [{ id: 'optimal', name: 'Ponto ótimo' }, { id: 'custom', name: 'Customizada' }, { id: 'none', name: 'Sem simulação' }],
      optimizedPointType: null,
      optimalIndex: null,
      currentLocationType: null,
      currentLocationValue: null,
      hasData: false,
      priceSeries: [],
      revenueSeries: [],
      currentSecondCoverage: [],
      simulatedSecondCoverage: [],
      currentSecondDemandCoverage: [],
      simulatedSecondDemandCoverage: [],
      simulatedPriceSecond: [null, null, null],
      simulatedDiscountSecond: [],
      simulatedRectangleColor: '#FDB913',
      currentOfferedRectangleColor: '#bbbbbb',
      simulationDash: [15, 2],
      offeredDash: [15, 5],
      secondDemandData: false,
      secondOptimalIndexes: [],
      loadingSecondDemandData: false
    };
  },

  components: {
    PanelFilter: _panelFilter2.default,
    ScatterChart: _scatterChart2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default
  },
  mounted: function mounted() {
    var _this = this;

    DemandCurvesChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    DemandCurvesChannel.on('demandData', function (payload) {
      return _this.receiveDemandData(payload);
    });
    DemandCurvesChannel.on('demandNoData', function (payload) {
      return _this.receiveDemandNoData(payload);
    });
    DemandCurvesChannel.on('loadingSecondDemandData', function () {
      return _this.receiveLoadingSecondDemandData();
    });
    DemandCurvesChannel.on('demandNoSecondData', function () {
      return _this.receiveDemandNoSecondData();
    });

    DemandCurvesChannel.on('demandData2', function (payload) {
      return _this.receiveDemandData(payload);
    });

    DemandCurvesChannel.on('secondDemandDataManhaSimplificado', function (payload) {
      return _this.receiveSecondDemandDataManhaSimplificado(payload);
    });
    DemandCurvesChannel.on('secondDemandDataTardeSimplificado', function (payload) {
      return _this.receiveSecondDemandDataTardeSimplificado(payload);
    });
    DemandCurvesChannel.on('secondDemandDataNoiteSimplificado', function (payload) {
      return _this.receiveSecondDemandDataNoiteSimplificado(payload);
    });

    DemandCurvesChannel.on('citiesFilters', function (payload) {
      return _this.receiveCitiesFilters(payload);
    });
    DemandCurvesChannel.on('coursesFilters', function (payload) {
      return _this.receiveCoursesFilters(payload);
    });

    this.optimizedPointType = this.optimizedOptions[0];

    this.loadFilters();
  },

  computed: {
    hasFullPrice: function hasFullPrice() {
      return !_lodash2.default.isNil(this.currentFullPrice);
    },
    fullTest: function fullTest() {
      return _lodash2.default.isNil(this.currentFullPrice);
    },
    hasSimulations: function hasSimulations() {
      return !_lodash2.default.isNil(this.simulatedPrice);
    },
    currentDiscount: function currentDiscount() {
      if (_lodash2.default.isNil(this.currentOfferedPrice) || _lodash2.default.isNil(this.currentFullPrice)) {
        return null;
      }
      return Math.round((this.currentFullPrice - this.currentOfferedPrice) / this.currentFullPrice * 100);
    },
    simulatedDiscount: function simulatedDiscount() {
      if (_lodash2.default.isNil(this.simulatedPrice) || _lodash2.default.isNil(this.currentFullPrice)) {
        return null;
      }
      return Math.round((this.currentFullPrice - this.simulatedPrice) / this.currentFullPrice * 100);
    },
    simulatedDiscount0: function simulatedDiscount0() {
      if (_lodash2.default.isNil(this.simulatedPriceSecond[0]) || _lodash2.default.isNil(this.currentFullPrice)) {
        return null;
      }
      return Math.round((this.currentFullPrice - this.simulatedPriceSecond[0]) / this.currentFullPrice * 100);
    },
    simulatedDiscount1: function simulatedDiscount1() {
      if (_lodash2.default.isNil(this.simulatedPriceSecond[1]) || _lodash2.default.isNil(this.currentFullPrice)) {
        return null;
      }
      return Math.round((this.currentFullPrice - this.simulatedPriceSecond[1]) / this.currentFullPrice * 100);
    },
    simulatedDiscount2: function simulatedDiscount2() {
      if (_lodash2.default.isNil(this.simulatedPriceSecond[2]) || _lodash2.default.isNil(this.currentFullPrice)) {
        return null;
      }
      return Math.round((this.currentFullPrice - this.simulatedPriceSecond[2]) / this.currentFullPrice * 100);
    }
  },
  methods: {
    dumpQueryString: function dumpQueryString() {
      var filter = this.getFilter();
      if (!_lodash2.default.isNil(filter)) {
        var queryString = '?currentFilter=' + (0, _stringify2.default)(filter['currentFilter']);
        window.history.pushState('', '', window.location.pathname + queryString);
      }
    },
    parseQueryString: function parseQueryString() {
      var _this2 = this;

      var urlParams = new URLSearchParams(window.location.search);
      var hasFilter = false;

      var currentFilter = urlParams.get('currentFilter');
      if (!_lodash2.default.isNil(currentFilter)) {
        currentFilter = JSON.parse(currentFilter);
        this.$refs.currentFilter.setFiltersData(currentFilter);
        if (!_lodash2.default.isNil(currentFilter['canonicalCourse'])) {
          this.canonicalCourse = _queryString2.default.solveEntry(this.canonicalCoursesOptions, currentFilter['canonicalCourse'].id, 'id');
        }
        hasFilter = true;
      }

      if (hasFilter) {
        this.$nextTick(function () {
          _this2.loadData();
        });
      }
    },
    exportData: function exportData() {
      var zipped = _lodash2.default.zip(this.priceSeries, this.revenueSeries);
      var filename = "curva_demanda_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';

      var content = "% Demanda;Preço;% Receita\n";
      _lodash2.default.each(zipped, function (entry) {
        content = content + entry[0].x + ";" + entry[0].y + ";" + entry[1].y + "\n";
      });

      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    },
    setChartRectangles: function setChartRectangles(chart, chartIndex) {
      console.log("setChartRectangles: " + chartIndex + " TYPE: " + this.optimizedPointType.id + " CURR_OFFERED: " + this.currentOfferedPrice);
      var curveRects = [];
      var currentOfferedPoint = chart.solvePlotData({ y: this.currentOfferedPrice }, 0);

      if (this.optimizedPointType.id == 'custom') {
        var currentOptimalPoint = chart.solvePlotData({ y: this.currentOptimalPrice }, 0);
        var coverage = { x: currentOptimalPoint.x };
        var currentCoveragePoint = chart.solvePlotData(coverage, 1);

        this.$set(this.simulatedSecondCoverage, chartIndex, currentCoveragePoint.y.toFixed(1));
        this.$set(this.simulatedSecondDemandCoverage, chartIndex, currentCoveragePoint.x.toFixed(1));
        curveRects.push({ x: 0, y: 0, to_scale_point: currentOptimalPoint, color: this.simulatedRectangleColor, dash: this.simulationDash, legend: 'Preço simulado' });
      }

      if (this.optimizedPointType.id == 'optimal') {
        this.$set(this.simulatedSecondCoverage, chartIndex, 100.0);
        this.$set(this.simulatedSecondDemandCoverage, chartIndex, this.calculatedSecondOptimalDemand[chartIndex]);
        this.$set(this.simulatedPriceSecond, chartIndex, this.calculatedSecondOptimalPrice[chartIndex]);

        curveRects.push({ x: 0, y: 0, to_point: { dataset: 0, index: this.secondOptimalIndexes[chartIndex] - 1 }, color: this.simulatedRectangleColor, dash: this.simulationDash, legend: 'Preço simulado', legendColor: '#FFFFFF' });
      }

      if (!_lodash2.default.isNil(this.currentOfferedPrice)) {
        var currenteCoveragePoint = chart.solvePlotData({ x: currentOfferedPoint.x }, 1);
        this.$set(this.currentSecondCoverage, chartIndex, currenteCoveragePoint.y.toFixed(1));
        this.$set(this.currentSecondDemandCoverage, chartIndex, currenteCoveragePoint.x.toFixed(1));
        curveRects.push({ x: 0, y: 0, to_scale_point: currentOfferedPoint, color: this.currentOfferedRectangleColor, dash: this.offeredDash, legend: 'Preço médio no site', legendColor: '#FFFFFF' });
      }

      chart.setRectangles(curveRects);
      chart.updateChart();
    },
    setRectangles: function setRectangles() {
      var curveRects = [];
      var currentOfferedPoint = this.$refs.demandCurveChart.solvePlotData({ y: this.currentOfferedPrice }, 0);

      if (this.optimizedPointType.id == 'custom') {
        var currentOptimalPoint = this.$refs.demandCurveChart.solvePlotData({ y: this.currentOptimalPrice }, 0);
        var coverage = { x: currentOptimalPoint.x };
        var currentCoveragePoint = this.$refs.demandCurveChart.solvePlotData(coverage, 1);
        this.simulatedCoverage = currentCoveragePoint.y.toFixed(1);
        this.simulatedDemandCoverage = currentCoveragePoint.x.toFixed(1);
        curveRects.push({ x: 0, y: 0, to_scale_point: currentOptimalPoint, color: this.simulatedRectangleColor, dash: this.simulationDash, legend: 'Preço simulado' });
      }

      if (this.optimizedPointType.id == 'optimal') {
        this.simulatedCoverage = 100.0;
        this.simulatedDemandCoverage = this.calculatedOptimalDemand;
        this.simulatedPrice = this.calculatedOptimalPrice;
        curveRects.push({ x: 0, y: 0, to_point: { dataset: 0, index: this.optimalIndex - 1 }, color: this.simulatedRectangleColor, dash: this.simulationDash, legend: 'Preço simulado', legendColor: '#FFFFFF' });
      }

      if (!_lodash2.default.isNil(this.currentOfferedPrice)) {
        var currenteCoveragePoint = this.$refs.demandCurveChart.solvePlotData({ x: currentOfferedPoint.x }, 1);
        this.currentCoverage = currenteCoveragePoint.y.toFixed(1);
        this.currentDemandCoverage = currenteCoveragePoint.x.toFixed(1);
        curveRects.push({ x: 0, y: 0, to_scale_point: currentOfferedPoint, color: this.currentOfferedRectangleColor, dash: this.offeredDash, legend: 'Preço médio no site', legendColor: '#FFFFFF' });
      }

      this.$refs.demandCurveChart.setRectangles(curveRects);
      this.$refs.demandCurveChart.updateChart();
    },
    setOptimalOffered: function setOptimalOffered() {
      console.log("setOptimalOffered# currentOfferedPrice: " + this.currentOptimalPrice);
      this.simulatedPrice = this.currentOptimalPrice;
      this.simulatedPriceSecond[0] = this.currentOptimalPrice;
      this.simulatedPriceSecond[1] = this.currentOptimalPrice;
      this.simulatedPriceSecond[2] = this.currentOptimalPrice;
      this.setRectangles();

      this.setChartRectangles(this.$refs.secondDemandCurveManhaSimplificado, 0);
      this.setChartRectangles(this.$refs.secondDemandCurveTardeSimplificado, 1);
      this.setChartRectangles(this.$refs.secondDemandCurveNoiteSimplificado, 2);
      this.updateCharts();
    },
    optimizedSelected: function optimizedSelected(data) {
      console.log("optimizedSelected: " + (0, _stringify2.default)(data));
      if (data.id == 'optimal' || data.id == 'none') {
        if (data.id == 'none') {
          this.currentOptimalPrice = null;
          this.simulatedPrice = null;

          this.simulatedPriceSecond[0] = null;
          this.simulatedPriceSecond[1] = null;
          this.simulatedPriceSecond[2] = null;
        }
        this.setRectangles();

        this.setChartRectangles(this.$refs.secondDemandCurveManhaSimplificado, 0);
        this.setChartRectangles(this.$refs.secondDemandCurveTardeSimplificado, 1);
        this.setChartRectangles(this.$refs.secondDemandCurveNoiteSimplificado, 2);

        this.updateCharts();
      }
    },
    updateCharts: function updateCharts() {
      var _this3 = this;

      this.$nextTick(function () {
        _this3.$refs.demandCurveChart.updateChart();
        _this3.$refs.secondDemandCurveManhaSimplificado.updateChart();
        _this3.$refs.secondDemandCurveTardeSimplificado.updateChart();
        _this3.$refs.secondDemandCurveNoiteSimplificado.updateChart();
      });
    },
    currentPrimarySelected: function currentPrimarySelected() {
      var _this4 = this;

      console.log('currentPrimarySelected');

      this.$nextTick(function () {
        _this4.completeCourses();
      });
    },
    currentLocationTypeSelected: function currentLocationTypeSelected(data) {
      if (_lodash2.default.isNil(data)) {
        return;
      }
      console.log('currentLocationTypeSelected ' + data.type);
      this.currentLocationType = data.type;
      if (data.type == 'city') {
        var currentFilter = this.$refs.currentFilter.filterData(true);
        if (!currentFilter) {
          console.log("current filter vazio");
          currentFilter = {};
        }
        currentFilter.canonicalCourse = this.canonicalCourse;
        var filter = { currentFilter: currentFilter };

        this.$refs.currentFilter.setCitiesLoading();

        DemandCurvesChannel.push('completeCities', filter).receive('timeout', function (data) {
          console.log('completeCities timeout');
        });
      }
    },
    completeCourses: function completeCourses() {
      console.log("completeCourses");
      var currentFilter = this.$refs.currentFilter.filterData(true);
      if (!currentFilter) {
        currentFilter = {};

        return;
      }
      var filter = { currentFilter: currentFilter };

      DemandCurvesChannel.push('completeCourses', filter).receive('timeout', function (data) {
        console.log('completeCourses timeout');
      });
    },
    currentLocationSelected: function currentLocationSelected(type, value) {
      console.log('currentLocationSelected: ' + (0, _stringify2.default)(type) + " value: " + (0, _stringify2.default)(value));
      this.currentLocationValue = value;
    },
    currentRangeSelected: function currentRangeSelected() {
      console.log('currentRangeSelected');
    },
    currentKindSelected: function currentKindSelected() {
      console.log('currentKindSelected');
    },
    currentLevelSelected: function currentLevelSelected() {
      console.log('currentLevelSelected');
    },
    receiveDemandNoData: function receiveDemandNoData(data) {
      this.dataLoading = false;
      this.totalPoints = 0;
      this.usedPoints = 0;
      alert("Sem pontos para traçar");
    },
    receiveDemandNoSecondData: function receiveDemandNoSecondData() {
      this.loadingSecondDemandData = false;
    },
    receiveLoadingSecondDemandData: function receiveLoadingSecondDemandData() {
      this.loadingSecondDemandData = true;
    },
    solveSimulatedPrice: function solveSimulatedPrice(input, max_index, chart_index) {
      this.calculatedSecondOptimalPrice[chart_index] = input[max_index - 1].y;
      this.calculatedSecondOptimalDemand[chart_index] = input[max_index - 1].x;
      this.simulatedPriceSecond[chart_index] = this.calculatedSecondOptimalPrice[chart_index];
      this.simulatedSecondCoverage[chart_index] = 100;
    },
    receiveSecondDemandDataTardeSimplificado: function receiveSecondDemandDataTardeSimplificado(data) {
      var _this5 = this;

      this.secondDemandData = true;
      this.$refs.secondDemandCurveTardeSimplificado.setXAxisTitle(0, "Demanda capturada (%)");
      this.$refs.secondDemandCurveTardeSimplificado.setYAxisTitle(0, "Preço (R$)");
      this.$refs.secondDemandCurveTardeSimplificado.setYAxisTitle(1, "Receita (%)");
      this.$refs.secondDemandCurveTardeSimplificado.setSeries(0, data.offered, "Preco oferecido");
      this.$refs.secondDemandCurveTardeSimplificado.setSeries(1, data.revenue, "Receita esperada");
      this.secondOptimalIndexes[1] = data.max_index;

      this.solveSimulatedPrice(data.offered, data.max_index, 1);

      this.setChartRectangles(this.$refs.secondDemandCurveTardeSimplificado, 1);

      this.$nextTick(function () {
        _this5.$refs.secondDemandCurveTardeSimplificado.updateChart();
      });
    },
    receiveSecondDemandDataNoiteSimplificado: function receiveSecondDemandDataNoiteSimplificado(data) {
      var _this6 = this;

      this.secondDemandData = true;
      this.$refs.secondDemandCurveNoiteSimplificado.setXAxisTitle(0, "Demanda capturada (%)");
      this.$refs.secondDemandCurveNoiteSimplificado.setYAxisTitle(0, "Preço (R$)");
      this.$refs.secondDemandCurveNoiteSimplificado.setYAxisTitle(1, "Receita (%)");
      this.$refs.secondDemandCurveNoiteSimplificado.setSeries(0, data.offered, "Preco oferecido");
      this.$refs.secondDemandCurveNoiteSimplificado.setSeries(1, data.revenue, "Receita esperada");
      this.secondOptimalIndexes[2] = data.max_index;

      this.solveSimulatedPrice(data.offered, data.max_index, 2);

      this.setChartRectangles(this.$refs.secondDemandCurveNoiteSimplificado, 2);

      this.$nextTick(function () {
        _this6.$refs.secondDemandCurveNoiteSimplificado.updateChart();
      });
    },
    receiveSecondDemandDataManhaSimplificado: function receiveSecondDemandDataManhaSimplificado(data) {
      var _this7 = this;

      this.loadingSecondDemandData = false;

      this.secondDemandData = true;
      this.$refs.secondDemandCurveManhaSimplificado.setXAxisTitle(0, "Demanda capturada (%)");
      this.$refs.secondDemandCurveManhaSimplificado.setYAxisTitle(0, "Preço (R$)");
      this.$refs.secondDemandCurveManhaSimplificado.setYAxisTitle(1, "Receita (%)");
      this.$refs.secondDemandCurveManhaSimplificado.setSeries(0, data.offered, "Preco oferecido");
      this.$refs.secondDemandCurveManhaSimplificado.setSeries(1, data.revenue, "Receita esperada");
      this.secondOptimalIndexes[0] = data.max_index;

      this.solveSimulatedPrice(data.offered, data.max_index, 0);

      this.setChartRectangles(this.$refs.secondDemandCurveManhaSimplificado, 0);

      this.$nextTick(function () {
        _this7.$refs.secondDemandCurveManhaSimplificado.updateChart();
      });
    },
    receiveDemandData: function receiveDemandData(data) {
      if (!_lodash2.default.isNil(data.current_offered)) {
        this.currentOfferedPrice = eval(data.current_offered).toFixed(2);
      }
      if (!_lodash2.default.isNil(data.current_full) && data.current_full != '') {
        this.currentFullPrice = eval(data.current_full).toFixed(2);
      }

      this.optimalIndex = data.max_index;
      this.curvePoints = data.points_count;

      this.calculatedOptimalPrice = data.offered[data.max_index - 1].y;
      this.calculatedOptimalDemand = data.offered[data.max_index - 1].x;
      this.simulatedPrice = this.calculatedOptimalPrice;
      this.simulatedCoverage = 100;


      this.$refs.demandCurveChart.setXAxisTitle(0, "Demanda capturada (%)");
      this.$refs.demandCurveChart.setYAxisTitle(0, "Preço (R$)");
      this.$refs.demandCurveChart.setYAxisTitle(1, "Receita (%)");

      this.$refs.demandCurveChart.setSeries(0, data.offered, "Preco oferecido");
      this.$refs.demandCurveChart.setSeries(1, data.revenue, "Receita esperada");

      this.priceSeries = data.offered;
      this.revenueSeries = data.revenue;

      this.setRectangles();
      this.$refs.demandCurveChart.updateChart();

      this.dataLoading = false;
      this.hasData = true;
    },
    receiveCitiesFilters: function receiveCitiesFilters(data) {
      this.$refs.currentFilter.setCities(data.cities);
    },
    receiveCoursesFilters: function receiveCoursesFilters(data) {
      this.coursesLoading = true;
      this.canonicalCoursesOptions = data.courses;
      this.coursesLoading = false;
    },
    receiveFilters: function receiveFilters(data) {
      console.log('receiveFilters');
      this.$refs.currentFilter.setLevels(data.levels);
      this.$refs.currentFilter.setKinds(data.kinds);
      this.$refs.currentFilter.setLocations(data.locationTypes);
      this.$refs.currentFilter.setGroups(data.groupTypes);
      this.$refs.currentFilter.setAccountTypes(data.accountTypes);
      this.$refs.currentFilter.setUniversities(data.universities);
      this.$refs.currentFilter.setUniversityGroups(data.groups);
      this.$refs.currentFilter.setSemesterRange((0, _moment2.default)().subtract(6, 'months').toDate(), (0, _moment2.default)().toDate());
      this.$refs.currentFilter.setDealOwners(data.dealOwners);
      this.$refs.currentFilter.setQualityOwners(data.qualityOwners);
      this.$refs.currentFilter.setRegions(data.regions);
      this.$refs.currentFilter.setStates(data.states);
      this.$refs.currentFilter.setCities([]);
      this.$refs.currentFilter.setCampus([]);

      this.baseCanonicalCoursesOptions = data.courses;
      this.canonicalCoursesOptions = data.courses;

      this.loadingFilters = false;

      this.parseQueryString();
    },
    loadFilters: function loadFilters() {
      DemandCurvesChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    getFilter: function getFilter() {
      var currentFilter = this.$refs.currentFilter.filterData();
      if (!currentFilter) {
        console.log("currentFilter vazio");
        return;
      }
      currentFilter.canonicalCourse = this.canonicalCourse;
      return { currentFilter: currentFilter };
    },
    loadData: function loadData() {
      var filter = this.getFilter();
      if (!filter) {
        return;
      }

      this.curvePoints = null;
      this.currentOfferedPrice = null;
      this.optimizedPointType = this.optimizedOptions[0];
      this.simulatedPrice = null;
      this.currentFullPrice = null;

      this.$refs.demandCurveChart.clearSeries();

      this.$refs.secondDemandCurveManhaSimplificado.clearSeries();
      this.$refs.secondDemandCurveTardeSimplificado.clearSeries();
      this.$refs.secondDemandCurveNoiteSimplificado.clearSeries();

      this.dataLoading = true;
      this.totalPoints = null;
      this.usedPoints = null;
      this.hasData = false;
      this.secondDemandData = false;

      DemandCurvesChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });

      this.dumpQueryString();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-filter',{ref:"currentFilter",attrs:{"period-disabled":false,"index":"0"},on:{"primaryFilterSelected":_vm.currentPrimarySelected,"locationTypeSelected":_vm.currentLocationTypeSelected,"locationSelected":_vm.currentLocationSelected,"timeRangeSelected":_vm.currentRangeSelected,"kindSelected":_vm.currentKindSelected,"levelSelected":_vm.currentLevelSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.coursesLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("CURSO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.canonicalCoursesOptions,"label":"name","placeholder":"Todos os cursos","selectLabel":"Enter para selecionar","deselectLabel":""},model:{value:(_vm.canonicalCourse),callback:function ($$v) {_vm.canonicalCourse=$$v},expression:"canonicalCourse"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"default-margin-left"},[_c('div',{staticClass:"dropdown",on:{"click":_vm.exportData}},[_vm._m(1)])]):_vm._e()])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[(_vm.simulatedPrice || _vm.currentOfferedPrice)?_c('div',{staticStyle:{"float":"right"}},[_c('table',{staticClass:"data-table data-table-tiny"},[_c('thead',[_c('tr',[_c('th'),_vm._v(" "),(_vm.currentOfferedPrice)?_c('th',[_vm._v("Atual")]):_vm._e(),_vm._v(" "),(_vm.simulatedPrice)?_c('th',[_vm._v("Simulação")]):_vm._e()])]),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("Preço cheio")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                    R$ "+_vm._s(_vm.currentFullPrice)+"\n                  ")]:[_vm._v("\n                    -\n                  ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                    R$ "+_vm._s(_vm.currentFullPrice)+"\n                  ")]:[_vm._v("\n                    -\n                  ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Preço com desconto")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v("R$ "+_vm._s(_vm.currentOfferedPrice))]):_vm._e(),_vm._v(" "),(_vm.simulatedPrice)?_c('td',[_vm._v("R$ "+_vm._s(_vm.simulatedPrice))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Desconto (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                    "+_vm._s(_vm.currentDiscount)+"%\n                  ")]:[_vm._v("\n                    -\n                  ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                    "+_vm._s(_vm.simulatedDiscount)+"%\n                  ")]:[_vm._v("\n                    -\n                  ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Receita ótima (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentCoverage)+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPrice)?_c('td',[_vm._v(_vm._s(_vm.simulatedCoverage)+"%")]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Demanda capturada (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentDemandCoverage)+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPrice)?_c('td',[_vm._v(_vm._s(_vm.simulatedDemandCoverage)+"%")]):_vm._e()])])])]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          CURVA DE DEMANDA ( PRIMEIRA GERAÇÃO )\n          "),(_vm.curvePoints)?_c('p',[_vm._v("Número de pontos: "+_vm._s(_vm.curvePoints))]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3"},[_c('label',{attrs:{"for":""}},[_vm._v("SIMULAÇÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.optimizedOptions,"label":"name","track-by":"id","placeholder":"Selecione o tipo","selectLabel":"","deselectLabel":"","allow-empty":false},on:{"input":_vm.optimizedSelected},model:{value:(_vm.optimizedPointType),callback:function ($$v) {_vm.optimizedPointType=$$v},expression:"optimizedPointType"}})],1),_vm._v(" "),(_vm.optimizedPointType && _vm.optimizedPointType.id == 'custom')?[_c('div',{staticClass:"col-md-3"},[_c('label',{attrs:{"for":""}},[_vm._v("VALOR")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.currentOptimalPrice),expression:"currentOptimalPrice"}],staticClass:"multiselect__input",staticStyle:{"color":"#000000","height":"40px"},attrs:{"type":"text"},domProps:{"value":(_vm.currentOptimalPrice)},on:{"input":function($event){if($event.target.composing){ return; }_vm.currentOptimalPrice=$event.target.value}}})]),_vm._v(" "),_c('div',{staticClass:"col-md-3"},[_c('button',{staticClass:"btn-submit",staticStyle:{"margin-top":"25px"},on:{"click":_vm.setOptimalOffered}},[_vm._v("\n                  Setar\n                ")])])]:_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-3"})],2)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('scatter-chart',{ref:"demandCurveChart",attrs:{"export-name":"curva_de_demanda","base-height":600}})],1)])])])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.secondDemandData || _vm.loadingSecondDemandData),expression:"secondDemandData || loadingSecondDemandData"}]},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[(_vm.loadingSecondDemandData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e()]),_vm._v(" "),_vm._m(2)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[(_vm.simulatedPriceSecond[0] || _vm.currentOfferedPrice)?_c('div',{staticStyle:{"float":"right"}},[_c('table',{staticClass:"data-table data-table-tiny"},[_c('thead',[_c('tr',[_c('th'),_vm._v(" "),(_vm.currentOfferedPrice)?_c('th',[_vm._v("Atual")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[0])?_c('th',[_vm._v("Simulação")]):_vm._e()])]),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("Preço cheio")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        R$ "+_vm._s(_vm.currentFullPrice)+"\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[0])?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        R$ "+_vm._s(_vm.currentFullPrice)+"\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Preço com desconto")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v("R$ "+_vm._s(_vm.currentOfferedPrice))]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[0])?_c('td',[_vm._v("R$ "+_vm._s(_vm.simulatedPriceSecond[0]))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Desconto (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        "+_vm._s(_vm.currentDiscount)+"%\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[0])?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        "+_vm._s(_vm.simulatedDiscount0)+"%\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Receita ótima (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentSecondCoverage[0])+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[0])?_c('td',[_vm._v(_vm._s(_vm.simulatedSecondCoverage[0])+"%")]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Demanda capturada (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentSecondDemandCoverage[0])+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[0])?_c('td',[_vm._v(_vm._s(_vm.simulatedSecondDemandCoverage[0])+"%")]):_vm._e()])])])]):_vm._e(),_vm._v(" "),_vm._m(3),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('scatter-chart',{ref:"secondDemandCurveManhaSimplificado",attrs:{"export-name":"curva_de_demanda_segunda_geracao","base-height":600}})],1)])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[(_vm.simulatedPriceSecond[1] || _vm.currentOfferedPrice)?_c('div',{staticStyle:{"float":"right"}},[_c('table',{staticClass:"data-table data-table-tiny"},[_c('thead',[_c('tr',[_c('th'),_vm._v(" "),(_vm.currentOfferedPrice)?_c('th',[_vm._v("Atual")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[1])?_c('th',[_vm._v("Simulação")]):_vm._e()])]),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("Preço cheio")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        R$ "+_vm._s(_vm.currentFullPrice)+"\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[1])?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        R$ "+_vm._s(_vm.currentFullPrice)+"\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Preço com desconto")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v("R$ "+_vm._s(_vm.currentOfferedPrice))]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[1])?_c('td',[_vm._v("R$ "+_vm._s(_vm.simulatedPriceSecond[1]))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Desconto (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        "+_vm._s(_vm.currentDiscount)+"%\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[1])?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        "+_vm._s(_vm.simulatedDiscount1)+"%\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Receita ótima (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentSecondCoverage[1])+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[1])?_c('td',[_vm._v(_vm._s(_vm.simulatedSecondCoverage[1])+"%")]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Demanda capturada (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentSecondDemandCoverage[1])+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[1])?_c('td',[_vm._v(_vm._s(_vm.simulatedSecondDemandCoverage[1])+"%")]):_vm._e()])])])]):_vm._e(),_vm._v(" "),_vm._m(4),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('scatter-chart',{ref:"secondDemandCurveTardeSimplificado",attrs:{"export-name":"curva_de_demanda_segunda_geracao","base-height":600}})],1)])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[(_vm.simulatedPriceSecond[2] || _vm.currentOfferedPrice)?_c('div',{staticStyle:{"float":"right"}},[_c('table',{staticClass:"data-table data-table-tiny"},[_c('thead',[_c('tr',[_c('th'),_vm._v(" "),(_vm.currentOfferedPrice)?_c('th',[_vm._v("Atual")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[2])?_c('th',[_vm._v("Simulação")]):_vm._e()])]),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("Preço cheio")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        R$ "+_vm._s(_vm.currentFullPrice)+"\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[2])?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        R$ "+_vm._s(_vm.currentFullPrice)+"\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Preço com desconto")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v("R$ "+_vm._s(_vm.currentOfferedPrice))]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[2])?_c('td',[_vm._v("R$ "+_vm._s(_vm.simulatedPriceSecond[2]))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Desconto (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        "+_vm._s(_vm.currentDiscount)+"%\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[2])?_c('td',[(_vm.hasFullPrice)?[_vm._v("\n                        "+_vm._s(_vm.simulatedDiscount2)+"%\n                      ")]:[_vm._v("\n                        -\n                      ")]],2):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Receita ótima (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentSecondCoverage[2])+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[2])?_c('td',[_vm._v(_vm._s(_vm.simulatedSecondCoverage[2])+"%")]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Demanda capturada (%)")]),_vm._v(" "),(_vm.currentOfferedPrice)?_c('td',[_vm._v(_vm._s(_vm.currentSecondDemandCoverage[2])+"%")]):_vm._e(),_vm._v(" "),(_vm.simulatedPriceSecond[2])?_c('td',[_vm._v(_vm._s(_vm.simulatedSecondDemandCoverage[2])+"%")]):_vm._e()])])])]):_vm._e(),_vm._v(" "),_vm._m(5),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('scatter-chart',{ref:"secondDemandCurveNoiteSimplificado",attrs:{"export-name":"curva_de_demanda_segunda_geracao","base-height":600}})],1)])])])])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Curvas de demanda\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dropdown-toggle"},[_c('span',{staticClass:"flex-grow dropdown-label"},[_vm._v("Exportar Tabela")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n            CURVAS DE SEGUNDA GERAÇAO\n          ")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n            MANHÃ\n\n            "),_c('div',{staticClass:"row"})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n            TARDE\n\n            "),_c('div',{staticClass:"row"})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n            NOITE\n\n            "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3"})])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e6927d50", __vue__options__)
  } else {
    hotAPI.reload("data-v-e6927d50", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/farm-campaign.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true,
      loadingVelocimeter: true,
      loadingStockData: true,
      tableData: [],
      velocimeterTableData: [],
      accountTypeFilter: null,
      accountTypeOptions: [{ name: "Carteira 1", id: 1 }, { name: "Carteira 2", id: 2 }, { name: "Carteira 3", id: 3 }, { name: "Carteira 4", id: 4 }]
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default
  },
  mounted: function mounted() {
    var _this = this;

    FarmCampaignChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    FarmCampaignChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    FarmCampaignChannel.on('velocimeterTableData', function (payload) {
      return _this.receiveVelocimeterTableData(payload);
    });

    this.loadData();
  },

  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0 || this.velocimeterTableData.length > 0;
    },
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 0;
    }
  },
  methods: {
    filterValueSelected: function filterValueSelected() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.loadData();
      });
    },
    filterValueRemoved: function filterValueRemoved() {
      var _this3 = this;

      this.$nextTick(function () {
        _this3.loadData();
      });
    },
    visualizationTypeInput: function visualizationTypeInput(data) {
      var _this4 = this;

      this.visualizationType = this.visualization.type;
      this.$nextTick(function () {
        _this4.loadData();
      });
    },
    receiveFilters: function receiveFilters(data) {
      console.log("receiveFilters");
    },
    receiveTableData: function receiveTableData(data) {
      var _this5 = this;

      console.log("receiveTableData");

      this.tableData = data.ranking;
      this.loadingStockData = false;
      this.loading = this.loadingVelocimeter;

      this.$nextTick(function () {
        _this5.table = new _datatable2.default('#stock-table', {
          paging: true,
          deferRender: true,
          pageLength: 20,
          searching: false,
          order: [2, 'desc'],
          buttons: []
        });

        _this5.table = new _datatable2.default('#velocimeter-table', {
          paging: true,
          deferRender: true,
          searching: false,
          pageLength: 20,
          order: [2, 'desc'],
          buttons: []
        });
      });
    },
    receiveVelocimeterTableData: function receiveVelocimeterTableData(data) {
      var _this6 = this;

      console.log("receiveVelocimeterTableData");

      this.velocimeterTableData = data.ranking;
      this.loadingVelocimeter = false;
      this.loading = this.loadingStockData;

      this.$nextTick(function () {
        _this6.table = new _datatable2.default('#current-velocimeter-table', {
          paging: true,
          deferRender: true,
          pageLength: 20,
          searching: false,
          order: [2, 'desc'],
          buttons: []
        });
      });
    },
    loadData: function loadData() {
      this.tableData = [];
      this.velocimeterTableData = [];
      this.loading = true;
      this.loadingVelocimeter = true;
      this.loadingStockData = true;
      var params = {
        account_type: this.accountTypeFilter
      };
      FarmCampaignChannel.push('loadData', params).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e()]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("CARTEIRA")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.accountTypeOptions,"label":"name","track-by":"id","placeholder":"Todas as carteira","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected,"remove":_vm.filterValueRemoved},model:{value:(_vm.accountTypeFilter),callback:function ($$v) {_vm.accountTypeFilter=$$v},expression:"accountTypeFilter"}})],1)])])])])])]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VARIAÇÃO DE VELOCÍMETRO DE ESTOQUE PROFUNDO")]),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"500px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"stock-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.key_account))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.carteira))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.crescimento_estoque_profundo))])])}),0)])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-4"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VARIAÇÃO DE VELOCÍMETRO")]),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"500px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"velocimeter-table"}},[_vm._m(2),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.key_account))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.carteira))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.crescimento_velocimetro))])])}),0)])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-4"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VELOCÍMETRO ATUAL")]),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"500px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"current-velocimeter-table"}},[_vm._m(3),_vm._v(" "),_c('tbody',_vm._l((_vm.velocimeterTableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.key_account))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.account_type))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed))])])}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Campanha do Farm\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("FARMER")]),_vm._v(" "),_c('th',[_vm._v("CARTEIRA")]),_vm._v(" "),_c('th',[_vm._v("(%)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("FARMER")]),_vm._v(" "),_c('th',[_vm._v("CARTEIRA")]),_vm._v(" "),_c('th',[_vm._v("(%)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("FARMER")]),_vm._v(" "),_c('th',[_vm._v("CARTEIRA")]),_vm._v(" "),_c('th',[_vm._v("(%)")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-8c13e30e", __vue__options__)
  } else {
    hotAPI.reload("data-v-8c13e30e", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/farm-key-accounts.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

var _messageDialog = require('../js/components/message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _sazonalityChart = require('./sazonality-chart');

var _sazonalityChart2 = _interopRequireDefault(_sazonalityChart);

var _gaugeChart = require('../js/components/gauge-chart');

var _gaugeChart2 = _interopRequireDefault(_gaugeChart);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      title: null,
      lastDate: null,
      tableData: [],
      hasData: false,
      loading: true,
      productLineFilter: null,
      productLineOptions: [],
      totalChart: null,
      farmChart: null,
      farmChartIntermediate: null,
      sazonalityOption: null,
      table: null,
      managerAccess: null,
      rankingSelection: '',
      capturePeriod: null,
      fullVelocimeter: null
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    SazonalityChart: _sazonalityChart2.default
  },
  computed: {
    chartsClass: function chartsClass() {
      if (this.capturePeriod != 6 || !_lodash2.default.isNil(this.productLineFilter) && this.productLineFilter.id == 8) {
        return "col-md-4 col-sm-12 no-padding";
      }
      return "col-md-3 col-sm-12 no-padding";
    },
    hasIntermediateChart: function hasIntermediateChart() {
      if (this.capturePeriod != 6 || !_lodash2.default.isNil(this.productLineFilter) && this.productLineFilter.id == 8) {
        return false;
      }
      return true;
    },
    isManager: function isManager() {
      return !_lodash2.default.isNil(this.managerAccess) && this.managerAccess.manager;
    },
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 1;
    }
  },
  mounted: function mounted() {
    var _this = this;

    FarmKeyAccountChannel.on('farmData', function (payload) {
      return _this.receiveTableData(payload);
    });
    FarmKeyAccountChannel.on('filterData', function (payload) {
      return _this.receiveFilters(payload);
    });
    FarmKeyAccountChannel.on('sazonalityData', function (payload) {
      return _this.receiveSazonalityData(payload);
    });
    FarmKeyAccountChannel.on('totalGoal', function (payload) {
      return _this.receiveTotalGoal(payload);
    });

    this.capturePeriod = document.getElementById("capture-period").value;

    this.loadFilters();
    this.loadSazonality();
    this.loadTotalGoal();
  },

  watch: {
    productLineFilter: function productLineFilter(value) {
      this.loadData();
      if (!_lodash2.default.isNil(value)) {
        this.sazonalityOption = value.id;
      }
    },
    sazonalityOption: function sazonalityOption(value) {
      this.loadSazonality();
    },
    rankingSelection: function rankingSelection(value) {
      console.log("rankingSelection");

      this.loadData();
    }
  },
  props: {
    panelType: {
      type: String,
      default: 'Farm'
    }
  },
  methods: {
    createFullGoalChart: function createFullGoalChart() {
      if (!_lodash2.default.isNil(this.totalChart)) {
        this.totalChart.destroy();
      }

      this.totalChart = new _gaugeChart2.default('time-chart-total', {
        title: 'Meta empresa',
        tooltip: ' % de parcerias'
      });

      this.totalChart.getSeries(0).setData([]);
      this.totalChart.getSeries(0).addPoint(this.fullVelocimeter);
    },
    loadTotalGoal: function loadTotalGoal() {
      FarmKeyAccountChannel.push('loadTotalGoal').receive('timeout', function () {
        console.log('loadTotalGoal fimeout');
      });
    },
    createCharts: function createCharts() {

      this.farmChart = new _gaugeChart2.default('time-chart-farmer', {
        title: 'Meta Total',
        tooltip: ' % de parcerias'
      });

      this.farmChartIntermediate = new _gaugeChart2.default('time-chart-farmer-intermediate', {
        title: 'Meta intermediária',
        tooltip: ' % de parcerias'
      });

      this.createFullGoalChart();
    },
    destroyCharts: function destroyCharts() {
      if (!_lodash2.default.isNil(this.farmChart)) {
        this.farmChart.destroy();
      }
      if (!_lodash2.default.isNil(this.farmChartIntermediate)) {
        this.farmChartIntermediate.destroy();
      }
    },
    receiveTotalGoal: function receiveTotalGoal(data) {
      this.fullVelocimeter = data.total_goal;
      this.createFullGoalChart();
    },
    receiveSazonalityData: function receiveSazonalityData(data) {
      this.$refs.sazonalityChart.setCurrentSazonality(data);
    },
    loadSazonality: function loadSazonality() {
      var params = {
        product_line_id: this.sazonalityOption
      };
      this.$refs.sazonalityChart.setLoader();
      FarmKeyAccountChannel.push('loadSazonality', params).receive('ok', function (data) {
        console.log("received: ok");
      });
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      this.createCharts();

      this.tableData = data.ranking_data;
      this.lastDate = data.last_date;
      this.title = data.title;
      this.loading = false;
      this.hasData = true;

      console.log("receiveTableData# access_map: " + (0, _stringify2.default)(data.access_map));

      this.managerAccess = data.access_map;

      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#report-table', {
          deferRender: true,
          searchDelay: 500,
          order: [8, 'desc']
        });
        _this2.recalculateTotals();
        var instance = _this2;
        _this2.table.onFilter(function () {
          setTimeout(function () {
            instance.recalculateTotals();
          }, 300);
        });
      });
    },
    receiveFilters: function receiveFilters(data) {
      this.productLineOptions = data.product_lines;
      if (!_lodash2.default.isNil(data.current_product_line)) {
        var filteredOptions = _lodash2.default.filter(this.productLineOptions, function (entry) {
          return entry.id === data.current_product_line;
        });
        console.log("filteredOptions: " + (0, _stringify2.default)(filteredOptions));
        this.productLineFilter = filteredOptions[0];
      } else {
        this.loadData();
      }
    },
    loadFilters: function loadFilters() {
      FarmKeyAccountChannel.push('loadFilters').receive('timeout', function () {
        console.log("loadFilter timeout");
      });
    },
    recalculateTotals: function recalculateTotals() {
      var newPercent = null;
      var newPercentIntermediate = null;
      var nRows = this.table.getFilteredRows().nodes().length;
      if (nRows > 0) {
        var filteredData = this.table.getFilteredRows().data();

        var movelGoalColumn = 5;
        var movelGoalIntermediateColumn = 6;
        var realizedColumn = 7;

        var realized = 0;
        var movel_goal = 0;
        var movel_goal_intermediate = 0;
        for (var i = 0; i < nRows; i++) {
          movel_goal += filteredData[i][movelGoalColumn].parseMoney();
          movel_goal_intermediate += filteredData[i][movelGoalIntermediateColumn].parseMoney();
          realized += filteredData[i][realizedColumn].parseMoney();
        }

        newPercent = parseFloat((realized / movel_goal * 100).toFixed(2));
        newPercentIntermediate = parseFloat((realized / movel_goal_intermediate * 100).toFixed(2));
      }
      if (!_lodash2.default.isNil(newPercent)) {
        this.farmChart.getSeries(0).setData([]);
        this.farmChart.getSeries(0).addPoint(newPercent);
      }
      if (!_lodash2.default.isNil(newPercentIntermediate)) {
        this.farmChartIntermediate.getSeries(0).setData([]);
        this.farmChartIntermediate.getSeries(0).addPoint(newPercentIntermediate);
      }
    },
    loadData: function loadData() {
      var _this3 = this;

      this.destroyCharts();
      var params = {};
      if (!_lodash2.default.isNil(this.productLineFilter)) {
        params.productLine = this.productLineFilter.id;
      }
      params.ranking = this.rankingSelection;
      this.loading = true;
      this.hasData = false;
      var channelCall = 'load';
      if (this.panelType == 'Quali') {
        channelCall = 'loadQuali';
      }
      FarmKeyAccountChannel.push(channelCall, params).receive('timeout', function () {
        console.log("load timeout");
      });

      this.$nextTick(function () {
        _this3.createFullGoalChart();
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[(_vm.isManager)?[_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.rankingSelection),expression:"rankingSelection"}],staticStyle:{"color":"#000000","background-color":"#ffffff","border-radius":"5px","margin-left":"10px"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.rankingSelection=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{"value":""}},[_vm._v(_vm._s(_vm.panelType))]),_vm._v(" "),_c('option',{attrs:{"value":"all"}},[_vm._v("All "+_vm._s(_vm.panelType))])])]:[_vm._v("\n          "+_vm._s(_vm.title)+"\n        ")],_vm._v("\n         - Meta móvel atualizada em: "+_vm._s(_vm.lastDate)+"\n       ")],2)])]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"charts-panels col-md-12"},[_c('div',{class:_vm.chartsClass},[_vm._m(0)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasIntermediateChart),expression:"hasIntermediateChart"}],class:_vm.chartsClass},[_vm._m(1)]),_vm._v(" "),_c('div',{class:_vm.chartsClass},[_vm._m(2)]),_vm._v(" "),_c('sazonality-chart',{ref:"sazonalityChart",class:_vm.chartsClass,model:{value:(_vm.sazonalityOption),callback:function ($$v) {_vm.sazonalityOption=$$v},expression:"sazonalityOption"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[(_vm.hasProductLineOptions)?_c('div',{staticClass:"row"},[_c('div',{staticStyle:{"float":"right","margin-right":"10px"}},[_c('label',[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.productLineFilter),callback:function ($$v) {_vm.productLineFilter=$$v},expression:"productLineFilter"}})],1)]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding"},[(_vm.hasData)?_c('div',[_c('table',{staticClass:"data-table",attrs:{"id":"report-table"}},[_vm._m(3),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.owner))]),_vm._v(" "),_c('td',[_vm._l((entry.account_types),function(account_type){return [_vm._v("\n                       C"+_vm._s(account_type)+"\n                    ")]})],2),_vm._v(" "),_c('td',[_vm._l((entry.regions),function(region){return [_vm._v("\n                       "+_vm._s(region)+"\n                    ")]})],2),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.product_line_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.semester_goal)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.mobile_goal)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.mobile_goal_intermediate)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.realized)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toPercentage")(entry.speed)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toPercentage")(entry.speed_intermediate)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toPercentage")(entry.legacy_speed)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.legacy_realized)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.visits))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.mean_income)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toPercentage")(entry.conversion)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toPercentage")(entry.atraction)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toPercentage")(entry.success)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.current_goal_gap)))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm._f("toDelimited")(entry.goal_gap)))])])}),0)])]):_vm._e()])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('div',{staticClass:"chart chart-padding",attrs:{"id":"time-chart-farmer"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('div',{staticClass:"chart chart-padding",attrs:{"id":"time-chart-farmer-intermediate"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('div',{staticClass:"chart chart-padding",attrs:{"id":"time-chart-total"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("Key Account")]),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Região")]),_vm._v(" "),_c('th',[_vm._v("Segmento")]),_vm._v(" "),_c('th',[_vm._v("Meta semestre (R$)")]),_vm._v(" "),_c('th',[_vm._v("Meta móvel (R$)")]),_vm._v(" "),_c('th',[_vm._v("Meta móvel (intermediária) (R$)")]),_vm._v(" "),_c('th',[_vm._v("Realizado QAP (R$)")]),_vm._v(" "),_c('th',[_vm._v("LTV Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("LTV Speed (intermediária) (%)")]),_vm._v(" "),_c('th',[_vm._v("Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("Realizado (R$)")]),_vm._v(" "),_c('th',[_vm._v("Visitas em ofertas")]),_vm._v(" "),_c('th',[_vm._v("Faturamento por ordem (R$)")]),_vm._v(" "),_c('th',[_vm._v("Conversão")]),_vm._v(" "),_c('th',[_vm._v("Atratividade")]),_vm._v(" "),_c('th',[_vm._v("Sucesso")]),_vm._v(" "),_c('th',[_vm._v("Gap Atual (R$)")]),_vm._v(" "),_c('th',[_vm._v("Gap Semestre (R$)")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b3aa9306", __vue__options__)
  } else {
    hotAPI.reload("data-v-b3aa9306", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/farm-ranking-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true,
      tableData: [],
      table: null
    };
  },
  mounted: function mounted() {
    var _this = this;

    FarmRankingChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loadData();
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default
  },
  methods: {
    gradientStyle: function gradientStyle(value) {
      var formattedValue = Math.abs(Math.round(value));
      var styleValue = 'height: 40px; width: ' + formattedValue + 'px;';
      if (value < 0) {
        styleValue = styleValue + 'float: right;';
      }
      console.log("styleValue: " + styleValue);
      return styleValue;
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      console.log("receiveTableData");

      this.tableData = data.farmers;
      this.loading = false;

      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#report-table', {
          paging: false,
          deferRender: true,
          searchDelay: 500,
          order: [10, 'desc'],
          columnDefs: [{
            targets: [11, 12, 14, 15],
            orderable: false
          }]
        });
      });
    },
    loadData: function loadData() {
      this.tableData = [];
      FarmRankingChannel.push('loadData').receive('timeout', function (data) {
        console.log('load timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e()]),_vm._v(" "),(_vm.tableData.length > 0)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"report-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.farmer))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.account_type))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed_to_ref))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.team_speed_to_ref_mean))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed_to_team))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.service_level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.service_level_to_ref))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.team_service_level_to_ref_mean))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.service_level_to_team))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed_metric))]),_vm._v(" "),_c('td',{staticStyle:{"padding":"0px !important"}},[(entry.speed_metric_float < 0)?[_c('div',{staticClass:"red-gradient",style:(_vm.gradientStyle(entry.speed_metric_float))})]:_vm._e()],2),_vm._v(" "),_c('td',{staticStyle:{"padding":"0px !important"}},[(entry.speed_metric_float >= 0)?[_c('div',{staticClass:"blue-gradient",style:(_vm.gradientStyle(entry.speed_metric_float))})]:_vm._e()],2),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.service_level_metric))]),_vm._v(" "),_c('td',{staticStyle:{"padding":"0px !important"}},[(entry.service_level_metric_float < 0)?[_c('div',{staticClass:"red-gradient",style:(_vm.gradientStyle(entry.service_level_metric_float))})]:_vm._e()],2),_vm._v(" "),_c('td',{staticStyle:{"padding":"0px !important"}},[(entry.service_level_metric_float >= 0)?[_c('div',{staticClass:"blue-gradient",style:(_vm.gradientStyle(entry.service_level_metric_float))})]:_vm._e()],2)])}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Farm Ranking\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("Farmer")]),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Velocimetro")]),_vm._v(" "),_c('th',[_vm._v("Velocimetro - 100%")]),_vm._v(" "),_c('th',[_vm._v("Media do time [Velocimentro - 100%]")]),_vm._v(" "),_c('th',[_vm._v("(Velocimetro - 100%) - (Media do time)")]),_vm._v(" "),_c('th',[_vm._v("Nível Serviço")]),_vm._v(" "),_c('th',[_vm._v("Nível Serviço - 80%")]),_vm._v(" "),_c('th',[_vm._v("Media do time [Nível Serviço - 80%]")]),_vm._v(" "),_c('th',[_vm._v("(Nível Serviço - 80%) - (Media do time)")]),_vm._v(" "),_c('th',[_vm._v("Métrica velocimetro")]),_vm._v(" "),_c('th',{staticClass:"exclude"},[_vm._v(" ")]),_vm._v(" "),_c('th',{staticClass:"exclude"},[_vm._v(" ")]),_vm._v(" "),_c('th',[_vm._v("Métrica nivel serviço")]),_vm._v(" "),_c('th',{staticClass:"exclude"},[_vm._v(" ")]),_vm._v(" "),_c('th',{staticClass:"exclude"},[_vm._v(" ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-486b3594", __vue__options__)
  } else {
    hotAPI.reload("data-v-486b3594", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/farm-universities.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

var _messageDialog = require('../js/components/message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      lastDate: null,
      tableData: [],
      loading: true,
      productLineFilter: null,
      productLineOptions: [],
      hasData: false,
      initialized: false
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default
  },
  computed: {
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 1;
    }
  },
  mounted: function mounted() {
    var _this = this;

    FarmUniversitiesChannel.on('universitiesData', function (payload) {
      return _this.receiveTableData(payload);
    });
    FarmUniversitiesChannel.on('filterData', function (payload) {
      return _this.receiveFilters(payload);
    });
    console.log("mounted");

    this.loadFilters();
  },

  watch: {
    productLineFilter: function productLineFilter(value) {
      if (!this.initialized) {
        return;
      }
      this.loadData();
    }
  },
  methods: {
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      this.tableData = data.universities_data;
      this.lastDate = data.last_date;
      this.loading = false;
      this.hasData = true;

      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#report-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [8, 'desc']
        });
      });
    },
    receiveFilters: function receiveFilters(data) {
      var _this3 = this;

      this.productLineOptions = data.product_lines;

      if (!_lodash2.default.isNil(data.current_product_line)) {
        var filteredOptions = _lodash2.default.filter(this.productLineOptions, function (entry) {
          return entry.id === data.current_product_line;
        });
        this.productLineFilter = filteredOptions[0];
      }

      this.$nextTick(function () {
        _this3.initialized = true;
        _this3.loadData();
      });
    },
    loadFilters: function loadFilters() {
      FarmUniversitiesChannel.push('loadFilters').receive('timeout', function () {
        console.log("loadFilter timeout");
      });
    },
    loadData: function loadData() {
      var params = {};
      if (!_lodash2.default.isNil(this.productLineFilter)) {
        params.productLine = this.productLineFilter.id;
      }
      this.loading = true;
      this.hasData = false;
      FarmUniversitiesChannel.push('load', params).receive('timeout', function () {
        console.log("load timeout");
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("Universidades - Meta móvel atualizada em: "+_vm._s(_vm.lastDate))])])]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[(_vm.hasProductLineOptions)?_c('div',{staticStyle:{"float":"right","margin-top":"-10px"}},[_c('label',[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.productLineFilter),callback:function ($$v) {_vm.productLineFilter=$$v},expression:"productLineFilter"}})],1):_vm._e(),_vm._v(" "),(_vm.hasData)?_c('div',[_c('table',{staticClass:"data-table",attrs:{"id":"report-table"}},[_vm._m(0),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.education_group_name))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.account_type))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.owner))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.quality_owner))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.semester_goal_formatted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.mobile_goal_formatted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.realized_formatted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.legacy_speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.legacy_realized_formatted))]),_vm._v(" "),_c('td',[(entry.partner_plus)?[_vm._v("QB+")]:[_vm._v("Simples")],(entry.billing)?[_vm._v(" - QAP")]:void 0],2),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.status))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.new_orders_per_visits)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_per_new_orders)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.mean_income))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.visits))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.initiated_orders))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_orders))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_orders_per_visits)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.exchangeds))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.last_day_velocity)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.last_week_velocity)+"%")])])}),0)])]):_vm._e()])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("ID")]),_vm._v(" "),_c('th',[_vm._v("Universidade")]),_vm._v(" "),_c('th',[_vm._v("Grupo")]),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Farm")]),_vm._v(" "),_c('th',[_vm._v("Qualidade")]),_vm._v(" "),_c('th',[_vm._v("Meta semestre (R$)")]),_vm._v(" "),_c('th',[_vm._v("Meta móvel (R$)")]),_vm._v(" "),_c('th',[_vm._v("Realizado QAP (R$)")]),_vm._v(" "),_c('th',[_vm._v("QAP Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("Realizado (R$)")]),_vm._v(" "),_c('th',[_vm._v("Tipo")]),_vm._v(" "),_c('th',[_vm._v("Situação")]),_vm._v(" "),_c('th',[_vm._v("Atratividade")]),_vm._v(" "),_c('th',[_vm._v("Sucesso")]),_vm._v(" "),_c('th',[_vm._v("Faturamento por ordem R$")]),_vm._v(" "),_c('th',[_vm._v("Visitas em ofertas")]),_vm._v(" "),_c('th',[_vm._v("Orders iniciadas")]),_vm._v(" "),_c('th',[_vm._v("Orders pagas")]),_vm._v(" "),_c('th',[_vm._v("Conversão")]),_vm._v(" "),_c('th',[_vm._v("Trocas")]),_vm._v(" "),_c('th',[_vm._v("QAP Speed 1d (%)")]),_vm._v(" "),_c('th',[_vm._v("QAP Speed 7d (%)")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c57642d6", __vue__options__)
  } else {
    hotAPI.reload("data-v-c57642d6", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/funnel-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

var _export = require('../js/utils/export');

var _export2 = _interopRequireDefault(_export);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      coursesOptions: [],


      filterKinds: [],
      filterLevels: [],


      tableData: [],
      table: null,
      hasChartData: false,

      loadingFilters: true,
      dataLoading: false,
      currentFilter: null,
      filterCourse: null
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    BaseChart: _baseChart2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this = this;

    FunnelChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    FunnelChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loadFilters();
  },

  methods: {
    drawFunnel: function drawFunnel(data) {
      var width = 800;
      var height = 500;
      var horizontalMargin = 20;
      var marginTop = 20;

      d3.select('#funnel-div-id').remove();

      var svgFunnel = d3.select("#funnel").append("div").attr('id', 'funnel-div-id').append("svg").attr("viewBox", '0 0 ' + width + ' ' + height).append("g").attr("transform", "translate(" + horizontalMargin + "," + marginTop + ")");

      var xScale = d3.scale.linear().range([0, width]);
      var yScale = d3.scale.linear().range([0, height]);

      var funnelFullSize = 500;
      var rowHeigth = 70;
      var deslocation = 30;

      var visitsPart = '0 0, ' + funnelFullSize + ' 0, ' + (funnelFullSize - deslocation) + ' ' + rowHeigth + ', ' + deslocation + ' ' + rowHeigth + ', 0 0';
      var ordersPart = deslocation + ' ' + rowHeigth + ', ' + (funnelFullSize - deslocation) + ' ' + rowHeigth + ', ' + (funnelFullSize - 2 * deslocation) + ' ' + 2 * rowHeigth + ', ' + 2 * deslocation + ' ' + 2 * rowHeigth + ', ' + deslocation + ' ' + rowHeigth;
      var paidsPart = 2 * deslocation + ' ' + 2 * rowHeigth + ', ' + (funnelFullSize - 2 * deslocation) + ' ' + 2 * rowHeigth + ', ' + (funnelFullSize - 3 * deslocation) + ' ' + 3 * rowHeigth + ', ' + 3 * deslocation + ' ' + 3 * rowHeigth + ', ' + 2 * deslocation + ' ' + 2 * rowHeigth;
      var revenuePart = 3 * deslocation + ' ' + 3 * rowHeigth + ', ' + (funnelFullSize - 3 * deslocation) + ' ' + 3 * rowHeigth + ', ' + (funnelFullSize - 4 * deslocation) + ' ' + 4 * rowHeigth + ', ' + 4 * deslocation + ' ' + 4 * rowHeigth + ', ' + 3 * deslocation + ' ' + 3 * rowHeigth;

      console.log(visitsPart);

      svgFunnel.append('polyline').attr('points', visitsPart).style('stroke', 'blue').style('fill', '#333333');

      var text = svgFunnel.append('text').text('VISITAS').style('fill', 'white');
      var textLength = text.node().getComputedTextLength();
      text.attr('y', rowHeigth / 2).attr('x', (funnelFullSize - textLength) / 2);

      text = svgFunnel.append('text').text(data.visits).style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', rowHeigth / 2 + 15).attr('x', (funnelFullSize - textLength) / 2);

      svgFunnel.append('polyline').attr('points', ordersPart).style('stroke', 'blue').style('fill', '#333333');

      text = svgFunnel.append('text').text('ATRATIVIDADE').style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', 1.5 * rowHeigth).attr('x', (funnelFullSize - textLength) / 2);

      text = svgFunnel.append('text').text(data.atraction_rate).style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', 1.5 * rowHeigth + 15).attr('x', (funnelFullSize - textLength) / 2);

      svgFunnel.append('polyline').attr('points', paidsPart).style('stroke', 'blue').style('fill', '#333333');

      text = svgFunnel.append('text').text('SUCESSO').style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', 2.5 * rowHeigth).attr('x', (funnelFullSize - textLength) / 2);
      text = svgFunnel.append('text').text(data.success_rate).style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', 2.5 * rowHeigth + 15).attr('x', (funnelFullSize - textLength) / 2);

      svgFunnel.append('polyline').attr('points', revenuePart).style('stroke', 'blue').style('fill', '#333333');

      text = svgFunnel.append('text').text('PEF').style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', 3.5 * rowHeigth).attr('x', (funnelFullSize - textLength) / 2);

      text = svgFunnel.append('text').text(data.mean_ticket).style('fill', 'white');
      textLength = text.node().getComputedTextLength();
      text.attr('y', 3.5 * rowHeigth + 15).attr('x', (funnelFullSize - textLength) / 2);

      var arc = d3.svg.arc().innerRadius(35).outerRadius(40).startAngle(45 * (Math.PI / 180)).endAngle(3);


      var seta = '20 20, 0 10, 20 0';


      svgFunnel.append('polyline').attr('points', seta).style('stroke', 'blue').style('fill', 'blue').attr("transform", 'translate(' + (funnelFullSize - 5) + ', ' + (rowHeigth + 25) + ')');

      svgFunnel.append("path").attr("d", arc).attr("transform", 'translate(' + funnelFullSize + ', ' + rowHeigth + ')').style('fill', 'blue');

      text = svgFunnel.append('text').text('ORDENS').style('fill', 'white');
      text.attr('y', rowHeigth).attr('x', funnelFullSize + 43);

      text = svgFunnel.append('text').text(data.initiated_orders).style('fill', 'white');
      text.attr('y', rowHeigth + 15).attr('x', funnelFullSize + 43);

      svgFunnel.append("path").attr("d", arc).attr("transform", 'translate(' + funnelFullSize + ', ' + rowHeigth * 2 + ')').style('fill', 'blue');

      svgFunnel.append('polyline').attr('points', seta).style('stroke', 'blue').style('fill', 'blue').attr("transform", 'translate(' + (funnelFullSize - 5) + ', ' + (2 * rowHeigth + 25) + ')');

      text = svgFunnel.append('text').text('PAGOS').style('fill', 'white');
      text.attr('y', 2 * rowHeigth).attr('x', funnelFullSize + 43);

      text = svgFunnel.append('text').text(data.paid_follow_ups).style('fill', 'white');
      text.attr('y', 2 * rowHeigth + 15).attr('x', funnelFullSize + 43);

      svgFunnel.append("path").attr("d", arc).attr("transform", 'translate(' + funnelFullSize + ', ' + rowHeigth * 3 + ')').style('fill', 'blue');

      svgFunnel.append('polyline').attr('points', seta).style('stroke', 'blue').style('fill', 'blue').attr("transform", 'translate(' + (funnelFullSize - 5) + ', ' + (3 * rowHeigth + 25) + ')');

      text = svgFunnel.append('text').text('RECEITA').style('fill', 'white');
      text.attr('y', 3 * rowHeigth).attr('x', funnelFullSize + 43);

      text = svgFunnel.append('text').text(data.total_revenue).style('fill', 'white');
      text.attr('y', 3 * rowHeigth + 15).attr('x', funnelFullSize + 43);
    },
    receiveTableData: function receiveTableData(data) {
      this.tableData = data.table;

      this.drawFunnel(data.table);

      console.log("table: " + (0, _stringify2.default)(data.table));

      this.dataLoading = false;
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;


      this.loadingFilters = false;
    },
    loadFilters: function loadFilters() {
      FunnelChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      if (_lodash2.default.isNil(this.filterUniversity)) {
        alert('Selecione a Universidade');
        return;
      }
      this.dataLoading = true;
      this.tableData = [];

      var filter = {
        kinds: this.filterKinds,
        levels: this.filterLevels,
        university: this.filterUniversity
      };

      FunnelChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","track-by":"id","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterUniversity),callback:function ($$v) {_vm.filterUniversity=$$v},expression:"filterUniversity"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEIS")]),_vm._v(" "),_c('multiselect',{attrs:{"multiple":true,"options":_vm.levelOptions,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADES")]),_vm._v(" "),_c('multiselect',{attrs:{"multiple":true,"options":_vm.kindOptions,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),_vm._m(1)])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Funil KPI's\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{attrs:{"id":"funnel"}})])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-26953f6b", __vue__options__)
  } else {
    hotAPI.reload("data-v-26953f6b", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/ies-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _queryString = require('../js/query-string');

var _queryString2 = _interopRequireDefault(_queryString);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      accountTypeOptions: [],
      productLineOptions: [],
      dealOwnerOptions: [],
      productLineFilter: null,
      loadingFilters: true,
      loading: false,
      minimumSpeed: null,
      projectedSpeed: null
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default,
    ComparingChart: _comparingChart2.default
  },
  mounted: function mounted() {
    var _this = this;

    IesChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    IesChannel.on('goalChartData', function (payload) {
      return _this.receiveGoalChartData(payload);
    });

    var yAxesConfig = [{
      position: 'right',
      id: 'y-axis-0',
      ticks: {
        display: true,
        fontColor: '#ffffff'
      }
    }, {
      position: 'left',
      id: 'y-axis-1',
      ticks: {
        display: true,
        fontColor: '#ffffff'
      }
    }];

    this.$refs.goalChart.setYAxes(yAxesConfig);
    this.$refs.cumGoalChart.setYAxes(yAxesConfig);

    this.loadFilters();
  },

  methods: {
    dumpQueryString: function dumpQueryString() {
      var queryString = '';

      if (!this.$refs.filter.validateFilter()) {
        return;
      }

      if (_lodash2.default.isNil(this.productLineFilter)) {
        return;
      }

      var filter = this.filtersMap();
      queryString = '?type=' + filter['type'];
      if (!_lodash2.default.isNil(filter['value'])) {
        queryString = queryString + '&value=' + (0, _stringify2.default)(filter['value']);
      }
      queryString = queryString + '&product_line_id=' + filter['product_line_id'];

      window.history.pushState('', '', window.location.pathname + queryString);
    },
    parseQueryString: function parseQueryString() {
      var _this2 = this;

      var urlParams = new URLSearchParams(window.location.search);

      var filterType = urlParams.get('type');
      var filterValue = urlParams.get('value');
      var productLineFilter = urlParams.get('product_line_id');

      if (!_lodash2.default.isNil(filterValue)) {
        filterValue = JSON.parse(filterValue);
      }
      var hasFilter = false;
      if (!_lodash2.default.isNil(filterType)) {
        hasFilter = true;
      }

      console.log('productLineFilter: ' + productLineFilter + ' filterType: ' + filterType + ' filterValue: ' + (0, _stringify2.default)(filterValue));

      this.productLineFilter = _queryString2.default.solveEntry(this.productLineOptions, productLineFilter, 'id');
      this.$refs.filter.setFilterType(_queryString2.default.solveEntry(this.filterOptions, filterType, 'type'));
      if (filterType == 'university') {
        this.$refs.filter.setUniversityFilter(_queryString2.default.solveEntry(this.universityOptions, filterValue.id, 'id'));
      }
      if (filterType == 'group') {
        this.$refs.filter.setUniversityGroupFilter(_queryString2.default.solveEntry(this.universityGroupOptions, filterValue.id, 'id'));
      }
      if (filterType == 'account_type') {
        this.$refs.filter.setAccountTypeFilter(_queryString2.default.solveEntry(this.accountTypeOptions, filterValue.id, 'id'));
      }
      if (filterType == 'deal_owner' || filterType == 'deal_owner_ies') {
        this.$refs.filter.setDealOwnerFilter(_queryString2.default.solveEntry(this.dealOwnerOptions, filterValue.id, 'id'));
      }

      if (hasFilter) {
        this.$nextTick(function () {
          _this2.loadData();
        });
      }
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('primaryFilterSelected: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.universityGroupOptions = data.groups;
      this.accountTypeOptions = data.account_types;
      this.filterOptions = data.filters;
      this.productLineOptions = data.product_lines;
      this.dealOwnerOptions = data.deal_owners;

      this.loadingFilters = false;

      this.parseQueryString();
    },
    receiveGoalChartData: function receiveGoalChartData(data) {
      var _this3 = this;

      this.$refs.goalChart.setLabels(data.dates);
      this.$refs.goalChart.setSeries(0, data.goal_projection, "META");
      this.$refs.goalChart.setSeries(1, data.revenue, "RECEITA");
      this.$refs.goalChart.setSeriesWithOptions(2, data.velocimeter, "VELOCIMETRO", { yAxisID: 'y-axis-1', fill: false });

      this.$refs.cumGoalChart.setLabels(data.dates);
      this.$refs.cumGoalChart.setSeries(0, data.goal_projection_sum, "META");
      this.$refs.cumGoalChart.setSeries(1, data.revenue_sum, "RECEITA");
      this.$refs.cumGoalChart.setSeriesWithOptions(2, data.velocimeter_sum, "VELOCIMETRO", { yAxisID: 'y-axis-1', fill: false });

      this.$refs.goalChart.setYAxisTitle("Receita (R$)", 0);
      this.$refs.goalChart.setYAxisTitle("Velocímetro (%)", 1);

      this.$refs.cumGoalChart.setYAxisTitle("Receita (R$)", 0);
      this.$refs.cumGoalChart.setYAxisTitle("Velocímetro (%)", 1);

      var maxVelocity = _lodash2.default.max(data.velocimeter);
      if (data.minimum_speed > maxVelocity) {
        var maxValue = Math.ceil(data.minimum_speed * 1.1 / 10) * 10;
        this.$refs.goalChart.setYMax(maxValue, 1);
      } else {
        this.$refs.goalChart.removeYMax(1);
      }

      this.minimumSpeed = data.minimum_speed_formatted;
      this.projectedSpeed = data.projected_velocity_formatted;

      this.$refs.goalChart.setHorizontalPoint(2, data.minimum_speed);

      this.$nextTick(function () {
        _this3.$refs.goalChart.updateChart();
        _this3.$refs.cumGoalChart.updateChart();
      });

      this.loading = false;
    },
    loadFilters: function loadFilters() {
      IesChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    filtersMap: function filtersMap() {
      var filter = this.$refs.filter.filterSelected();
      filter.product_line_id = this.productLineFilter.id;
      return filter;
    },
    loadData: function loadData() {
      if (!this.$refs.filter.validateFilter()) {
        return;
      }

      if (_lodash2.default.isNil(this.productLineFilter)) {
        alert("Selecione a linha de produto");
        return;
      }
      var filter = this.filtersMap();

      this.dumpQueryString();

      this.loading = true;
      this.$refs.cumGoalChart.clearSeries();
      this.$refs.goalChart.clearSeries();
      this.minimumSpeed = null;
      this.projectedSpeed = null;

      IesChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"account-type-options":_vm.accountTypeOptions,"deal-owner-options":_vm.dealOwnerOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","placeholder":"Selecione a linha de produto","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.productLineFilter),callback:function ($$v) {_vm.productLineFilter=$$v},expression:"productLineFilter"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('table',{staticClass:"data-table data-table-tiny no-wrap"},[_vm._m(1),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v(_vm._s(_vm.minimumSpeed))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.projectedSpeed))])])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-8 col-sm-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA e VELOCIMETRO ( meta movel )")]),_vm._v(" "),_c('comparing-chart',{ref:"goalChart",attrs:{"export-name":"receita_e_velocimetro"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA e VELOCIMETRO ( acumulado )")]),_vm._v(" "),_c('comparing-chart',{ref:"cumGoalChart",attrs:{"export-name":"receita_e_velocimetro_acumulados"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"})])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel de Velocímetro\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("Velocidade mínima para bater a meta")]),_vm._v(" "),_c('th',{staticStyle:{"width":"200px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',[_vm._v("Velocímetro final projetado na velocidade atual")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-c0c7c280", __vue__options__)
  } else {
    hotAPI.reload("data-v-c0c7c280", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/ies-stats.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _productLinesFilter = require('./product-lines-filter');

var _productLinesFilter2 = _interopRequireDefault(_productLinesFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      dateRange: null,
      filterKinds: null,
      filterLevels: null,
      filterType: null,
      filterOptions: [],
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      productLineOptions: [],
      loading: true,
      hasRevenueData: true,

      ownedUniversityFilter: null,
      universityFilter: null,
      universityGroupFilter: null,
      farmRegionFilter: null,
      ownedUniversityOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      farmRegionOptions: [],

      semesterStart: null,
      semesterEnd: null,
      tableData: [],
      accountTypeFilter: null,
      acountTypeOptions: [{ name: "C1", id: 1 }, { name: "C2", id: 2 }, { name: "C3", id: 3 }, { name: "C4", id: 4 }, { name: "C5", id: 5 }]
    };
  },

  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    ProductLinesFilter: _productLinesFilter2.default
  },
  mounted: function mounted() {
    var _this = this;

    console.log("mounted");
    IesStatsChannel.on('filtersData', function (payload) {
      return _this.receiveFilters(payload);
    });
    IesStatsChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loading = true;
    this.loadFilters();
  },

  methods: {
    dashboardLink: function dashboardLink(university_id) {
      var productLineFilters = this.$refs.productLineFilter.filters();

      var productLineFilterStr = '';
      if ('productLine' in productLineFilters) {
        if (!_lodash2.default.isNil(productLineFilters.productLine)) {
          productLineFilterStr = ',"productLine":{%22id%22:' + productLineFilters.productLine.id + '}';
        }
      } else {
        var mappedKinds = _lodash2.default.map(productLineFilters.kinds, function (entry) {
          return '{%22id%22:' + entry.id + '}';
        });
        var mappedLevels = _lodash2.default.map(productLineFilters.levels, function (entry) {
          return '{%22id%22:' + entry.id + '}';
        });
        productLineFilterStr = ',"productLineSelectionType":"kind_and_level","kinds":[' + mappedKinds + '],"levels":[' + mappedLevels + ']';
      }

      return 'dashboard?currentFilter={%22baseFilters%22:[{%22type%22:%22universities%22,%22value%22:[{%22id%22:' + university_id + '}]}]' + productLineFilterStr + '}&comparingMode=no_compare';
    },
    currentFilterValue: function currentFilterValue() {
      if (this.filterType.type == "group") {
        return this.universityGroupFilter.id;
      }
      if (this.filterType.type == "university") {
        return this.universityFilter.id;
      }
      if (this.filterType.type == "account_type") {
        return this.accountTypeFilter;
      }
      if (this.filterType.type == "farm_region") {
        return this.farmRegionFilter;
      }
      return;
    },
    update: function update() {
      if (_lodash2.default.isNil(this.dateRange[0]) || _lodash2.default.isNil(this.dateRange[1])) {
        alert('Selecione um período');
        return;
      }

      console.log("this.farmRegionFilter: " + this.farmRegionFilter + " - " + (0, _stringify2.default)(this.farmRegionFilter));

      if (this.filterType.type == 'farm_region' && (_lodash2.default.isNil(this.farmRegionFilter) || _lodash2.default.isEmpty(this.farmRegionFilter))) {
        alert('Selecione uma região');
        return;
      }

      this.loading = true;
      this.tableData = [];

      var productLineFilters = this.$refs.productLineFilter.filters();

      var parameter = {
        filterType: this.filterType.type,
        filterValue: this.currentFilterValue(),
        initialDate: this.dateRange[0],
        finalDate: this.dateRange[1],
        kinds: productLineFilters.kinds,
        levels: productLineFilters.levels
      };

      if ('productLine' in productLineFilters) {
        parameter.productLine = productLineFilters.productLine;
      }

      IesStatsChannel.push('filter', parameter).receive('timeout', function () {
        console.log("filter timeout");
      });
    },
    loadFilters: function loadFilters() {
      IesStatsChannel.push('loadFilters').receive('timeout', function () {
        console.log("filters timeout");
      });
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      console.log("receiveTableData");
      this.tableData = data.universities;
      this.hasRevenueData = data.has_revenue_data;
      this.loading = false;

      this.$nextTick(function () {

        _this2.table = new _datatable2.default('#ies-stats-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [8, 'desc']
        });
      });
    },
    receiveFilters: function receiveFilters(data) {
      console.log("receiveFilters");
      this.loading = false;
      this.levelOptions = data.levels;
      this.kindOptions = data.kinds;
      this.filterOptions = data.filters;
      this.universityGroupOptions = data.groups;
      this.farmRegionOptions = data.farm_regions;
      this.universityOptions = data.universities;
      this.ownedUniversityOptions = data.owned_universities;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;
      this.productLineOptions = data.product_lines;

      if (!_lodash2.default.isNil(data.current_product_line)) {
        var filteredOptions = _lodash2.default.filter(this.productLineOptions, function (entry) {
          return entry.id === data.current_product_line;
        });

        this.$refs.productLineFilter.setProductLineFilter(filteredOptions[0]);
      }

      this.dateRange = [this.semesterStart, this.semesterEnd];

      this.filterType = this.filterOptions[0];

      this.update();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('product-lines-filter',{ref:"productLineFilter",attrs:{"kind-options":_vm.kindOptions,"level-options":_vm.levelOptions,"product-line-options":_vm.productLineOptions}})],1),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('label',{attrs:{"for":""}},[_vm._v("FILTRO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.filterOptions,"label":"name","placeholder":"Selecione o tipo de filtro","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado","allow-empty":false},model:{value:(_vm.filterType),callback:function ($$v) {_vm.filterType=$$v},expression:"filterType"}})],1),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'owned_universities')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.ownedUniversityOptions,"label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.ownedUniversityFilter),callback:function ($$v) {_vm.ownedUniversityFilter=$$v},expression:"ownedUniversityFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'university')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.universityFilter),callback:function ($$v) {_vm.universityFilter=$$v},expression:"universityFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'group')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("GRUPO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.universityGroupOptions,"label":"name","placeholder":"Selecione o grupo","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.universityGroupFilter),callback:function ($$v) {_vm.universityGroupFilter=$$v},expression:"universityGroupFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'account_type')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("CARTEIRA")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.acountTypeOptions,"label":"name","track-by":"id","placeholder":"Selecione as carteiras","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado","multiple":true},model:{value:(_vm.accountTypeFilter),callback:function ($$v) {_vm.accountTypeFilter=$$v},expression:"accountTypeFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'farm_region')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("REGIÃO DO FARM")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.farmRegionOptions,"label":"name","track-by":"id","placeholder":"Selecione a regiões","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado","multiple":true},model:{value:(_vm.farmRegionFilter),callback:function ($$v) {_vm.farmRegionFilter=$$v},expression:"farmRegionFilter"}})],1)]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.update}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),(_vm.tableData.length > 0)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table",attrs:{"id":"ies-stats-table"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("ID")]),_vm._v(" "),_c('th',[_vm._v("Universidade")]),_vm._v(" "),_c('th',[_vm._v("Grupo")]),_vm._v(" "),_c('th',[_vm._v("Região")]),_vm._v(" "),_c('th',[_vm._v("Farm")]),_vm._v(" "),_c('th',[_vm._v("Qualidade")]),_vm._v(" "),(_vm.hasRevenueData)?[_c('th',[_vm._v("Meta semestre (R$)")]),_vm._v(" "),_c('th',[_vm._v("Meta móvel (R$)")]),_vm._v(" "),_c('th',[_vm._v("Realizado LTV (R$)")]),_vm._v(" "),_c('th',[_vm._v("LTV Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("Realizado (R$)")])]:_vm._e(),_vm._v(" "),_c('th',[_vm._v("Tipo")]),_vm._v(" "),_c('th',[_vm._v("Situação")]),_vm._v(" "),_c('th',[_vm._v("Visitas em ofertas")]),_vm._v(" "),_c('th',[_vm._v("Orders iniciadas")]),_vm._v(" "),_c('th',[_vm._v("Atratividade")]),_vm._v(" "),_c('th',[_vm._v("Orders pagas")]),_vm._v(" "),_c('th',[_vm._v("Sucesso")]),_vm._v(" "),_c('th',[_vm._v("Conversão")]),_vm._v(" "),_c('th',[_vm._v("Reembolsos")]),_vm._v(" "),_c('th',[_vm._v("Taxa de Reembolsos")]),_vm._v(" "),_c('th',[_vm._v("Trocas")]),_vm._v(" "),_c('th',[_vm._v("Faturamento por ordem R$")]),_vm._v(" "),_c('th',[_vm._v("Receita Total")]),_vm._v(" "),_c('th',[_vm._v("Receita Reembolsada")]),_vm._v(" "),_c('th',[_vm._v("Ticket Médio R$")]),_vm._v(" "),(_vm.hasRevenueData)?[_c('th',[_vm._v("LTV Speed 1d (%)")]),_vm._v(" "),_c('th',[_vm._v("LTV Speed 7d (%)")]),_vm._v(" "),_c('th',[_vm._v("GAP atual")]),_vm._v(" "),_c('th',[_vm._v("GAP semestre")])]:_vm._e(),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Ações")])],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.education_group_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.farm_region))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.owner))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.quality_owner))]),_vm._v(" "),(_vm.hasRevenueData)?[_c('td',[_vm._v(_vm._s(entry.semester_goal_formatted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.mobile_goal_formatted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.realized_formatted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.legacy_speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.legacy_realized_formatted))])]:_vm._e(),_vm._v(" "),_c('td',[(entry.partner_plus)?[_vm._v("QB+")]:[_vm._v("Simples")],(entry.billing)?[_vm._v(" - QAP")]:void 0],2),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.status))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.visits))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.initiated_orders))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.new_orders_per_visits)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_orders))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_per_new_orders)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_orders_per_visits)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.refundeds))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.refunded_per_paid_orders)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.exchangeds))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.mean_income))]),_vm._v(" "),_c('td',[_c('div',{staticClass:"no-wrap"},[_vm._v("R$ "+_vm._s(entry.total_revenue))])]),_vm._v(" "),_c('td',[_c('div',{staticClass:"no-wrap"},[_vm._v("R$ "+_vm._s(entry.total_refunded))])]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.average_ticket))]),_vm._v(" "),(_vm.hasRevenueData)?[_c('td',[_vm._v(_vm._s(entry.last_day_velocity)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.last_week_velocity)+"%")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.gap_to_goal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.gap_to_semester_goal))])]:_vm._e(),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.account_type))]),_vm._v(" "),_c('td',[_c('a',{attrs:{"href":_vm.dashboardLink(entry.university_id),"target":"_blank"}},[_vm._v("\n                      Dashboard\n                    ")])])],2)}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Estatísticas das IES\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7c6a13db", __vue__options__)
  } else {
    hotAPI.reload("data-v-7c6a13db", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/inep-entrants.vue", function(exports, require, module) {
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _messageDialog = require("../js/components/message-dialog");

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _datatable = require("../js/components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require("vue-multiselect");

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customSearchMultiselect = require("./custom-search-multiselect");

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _panelPrimaryFilter = require("./panel-primary-filter");

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _locationFilter = require("./location-filter");

var _locationFilter2 = _interopRequireDefault(_locationFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterUniversity: null,
      universityOptions: [],
      stateOptions: [],
      filterState: null,
      loadingFilters: true,
      loading: false,
      tableData: [],
      tableGroupingFieldTitle: null,
      tableGroupingFieldName: null,
      grouping: null,
      groupingOptions: [{ name: 'Modalidade', key: 'kind' }, { name: 'Estado', key: 'state' }]
    };
  },
  mounted: function mounted() {
    var _this = this;

    InepChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    InepChannel.on('inepEntrants', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loadFilters();
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    LocationFilter: _locationFilter2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  methods: {
    loadFilters: function loadFilters() {
      InepChannel.push('loadFilters').receive('timeout', function () {
        console.log("return timeout");
      });
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.stateOptions = data.states;
      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      this.tableData = data.entrants;
      this.tableGroupingFieldTitle = data.grouping_field_title;
      this.tableGroupingFieldName = data.grouping_field_name;
      this.loading = false;
      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#inep-entrants', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [0, 'asc']
        });
      });
    },
    loadData: function loadData() {
      this.loading = true;
      this.tableData = [];
      var filters = {
        university_id: this.filterUniversity.id

      };
      if (!_lodash2.default.isNil(this.filterState)) {
        filters.state = this.filterState.type;
      }
      if (!_lodash2.default.isNil(this.grouping)) {
        filters.grouping = this.grouping.key;
      }
      InepChannel.push('loadEntrants', filters).receive('timeout', function () {
        console.log("load timeout");
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loadingFilters || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-6"},[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","track-by":"id","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterUniversity),callback:function ($$v) {_vm.filterUniversity=$$v},expression:"filterUniversity"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("ESTADO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.stateOptions,"label":"name","track-by":"type","placeholder":"Todos os estados","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterState),callback:function ($$v) {_vm.filterState=$$v},expression:"filterState"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("AGRUPAMENTO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.groupingOptions,"label":"name","track-by":"key","placeholder":"Sem agrupamento","selectLabel":"","deselectLabel":""},model:{value:(_vm.grouping),callback:function ($$v) {_vm.grouping=$$v},expression:"grouping"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                Atualizar\n              ")])])])])])])]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"inep-entrants"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("Ano")]),_vm._v(" "),_c('th',[_vm._v("Ingressantes")]),_vm._v(" "),(_vm.tableGroupingFieldName)?_c('th',[_vm._v(_vm._s(_vm.tableGroupingFieldTitle))]):_vm._e()])]),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.ano_ingresso))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.quantidade))]),_vm._v(" "),(_vm.tableGroupingFieldName)?_c('td',[_vm._v(_vm._s(entry[_vm.tableGroupingFieldName]))]):_vm._e()])}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Ingressantes INEP\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-6b5e52bc", __vue__options__)
  } else {
    hotAPI.reload("data-v-6b5e52bc", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/inep-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

var _messageDialog = require('../js/components/message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this,
        _ref;

    return _ref = {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      locationOptions: [{ name: 'Região', type: 'region' }, { name: 'Estado', type: 'state' }, { name: 'Cidade', type: 'city' }],

      citiesOptions: [],
      statesOptions: [],
      regionsOptions: [],

      dateRange: null,
      filterUniversities: null,
      filterGroups: null,
      kindFilter: 1,

      hasChartsData: false,

      showCoveragePanel: true,
      showMissingPanel: false,
      showStatesPanel: false,
      showIESPanel: false,
      hasMissingData: false,
      hasStatesTable: false,
      hasIESTable: false,
      iesTableLoading: true,
      statesTableLoading: true,
      missingTableLoading: true,

      showCoverageChart: true,
      showStatesCoverageChart: false,
      showIesCoverageChart: false,
      loadingStatesData: false,
      loadingIesData: false,
      loadingCharts: false,

      filterCanonicals: '20_top_clean',
      initialDate: null,
      lastDate: null,

      baseYear: null,
      previousYear: null,

      showInepEntrantsActive: false,
      showInepStockActive: true,

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }],

      tableStates: null,
      tableIES: null,
      tableMissing: null,

      loading: false,
      loadingFilters: true,

      semesterEnd: null,
      semesterStart: null,

      currentType: null,
      currentValue: null,
      statesTable: [],
      iesTable: [],
      missingStock: [],
      previousSemester: null,
      previousYearSemester: null,

      coverageChartLoaded: false,
      iesChartLoaded: false,
      statesChartLoaded: false,

      chartsDates: [],

      statesKeys: null,
      statesMap: null,
      statesMapPrevious: null,

      iesKeys: null,
      iesKeysNames: null,
      iesMap: null,

      nStatesSeries: null,
      seriesOptions: [{ name: "5", id: 5 }, { name: "10", id: 10 }, { name: "Todos", id: "all" }],
      statesOrdering: null,
      statesOrderingOptions: [{ name: "Maior número de alunos", key: "students" }, { name: "Menor cobertura", key: "coverage" }],
      nIesSeries: null,
      iesSeriesOptions: [{ name: "5", id: 5 }, { name: "10", id: 10 }, { name: "Máximo", id: 20 }],
      iesOrdering: null,
      dataInitialized: false

    }, (0, _defineProperty3.default)(_ref, 'showInepStockActive', true), (0, _defineProperty3.default)(_ref, 'showInepEntrantsActive', false), (0, _defineProperty3.default)(_ref, 'filterUniversity', null), (0, _defineProperty3.default)(_ref, 'filterState', null), (0, _defineProperty3.default)(_ref, 'tableData', []), (0, _defineProperty3.default)(_ref, 'tableGroupingFieldTitle', null), (0, _defineProperty3.default)(_ref, 'tableGroupingFieldName', null), (0, _defineProperty3.default)(_ref, 'grouping', null), (0, _defineProperty3.default)(_ref, 'groupingOptions', [{ name: 'Modalidade', key: 'kind' }, { name: 'Estado', key: 'state' }]), _ref;
  },

  watch: {
    kindFilter: function kindFilter(value) {
      if (!_lodash2.default.isNil(this.currentType)) {
        this.loadData(this.currentType, this.currentValue);
      }
    },
    filterCanonicals: function filterCanonicals(value) {
      if (!_lodash2.default.isNil(this.currentType)) {
        this.loadData(this.currentType, this.currentValue);
      }
    },
    dateRange: function dateRange(value) {
      if (!_lodash2.default.isNil(this.currentType)) {
        this.loadChartData(this.currentType, this.currentValue);
      }
    },
    nStatesSeries: function nStatesSeries(value) {
      console.log("nStatesSeries");
      if (this.hasChartsData) {
        this.$refs.statesCoverageChart.clearSeries();
        this.$refs.previousStatesCoverageChart.clearSeries();
        this.setStatesCharts();
        this.updateCharts();
      }
    },
    statesOrdering: function statesOrdering(value) {
      console.log("statesOrdering");
      if (this.hasChartsData) {
        this.loadStatesChart();
      }
    },
    nIesSeries: function nIesSeries(value) {
      console.log("nIesSeries");
      if (this.hasChartsData) {
        this.$refs.iesCoverageChart.clearSeries();
        this.setIesCharts();
        this.updateCharts();
      }
    },
    iesOrdering: function iesOrdering(value) {
      console.log("iesOrdering");
      if (this.hasChartsData) {
        this.loadIesChart();
      }
    }
  },
  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default,
    ModalDialog: _modalDialog2.default,
    LocationFilter: _locationFilter2.default,
    ComparingChart: _comparingChart2.default
  },
  computed: {
    hasEntrantsData: function hasEntrantsData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    InepPanelChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    InepPanelChannel.on('citiesFilter', function (payload) {
      return _this2.receiveCitiesFilter(payload);
    });

    InepPanelChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });
    InepPanelChannel.on('iesTableData', function (payload) {
      return _this2.receiveIesTableData(payload);
    });
    InepPanelChannel.on('statesTableData', function (payload) {
      return _this2.receiveStatesTableData(payload);
    });
    InepPanelChannel.on('missingStock', function (payload) {
      return _this2.receiveMissingStock(payload);
    });

    InepPanelChannel.on('coverageChartData', function (payload) {
      return _this2.receiveCoverageChartData(payload);
    });
    InepPanelChannel.on('statesChartData', function (payload) {
      return _this2.receiveStatesChartData(payload);
    });
    InepPanelChannel.on('iesChartData', function (payload) {
      return _this2.receiveIesChartData(payload);
    });

    InepPanelChannel.on('inepEntrants', function (payload) {
      return _this2.receiveEntrantsTableData(payload);
    });

    this.nIesSeries = this.iesSeriesOptions[0];
    this.nStatesSeries = this.seriesOptions[0];
    this.statesOrdering = this.statesOrderingOptions[0];
    this.iesOrdering = this.statesOrderingOptions[0];

    this.loadFilters();
  },

  methods: {
    showInepStock: function showInepStock() {
      this.showInepStockActive = true;
      this.showInepEntrantsActive = false;
    },
    showInepEntrants: function showInepEntrants() {
      this.showInepStockActive = false;
      this.showInepEntrantsActive = true;
    },
    hideAll: function hideAll() {
      this.showCoveragePanel = false;
      this.showMissingPanel = false;
      this.showStatesPanel = false;
      this.showIESPanel = false;
    },
    showStates: function showStates() {
      this.hideAll();
      this.showStatesPanel = true;
    },
    showIES: function showIES() {
      this.hideAll();
      this.showIESPanel = true;
    },
    showCoverage: function showCoverage() {
      var _this3 = this;

      this.hideAll();
      this.showCoveragePanel = true;

      this.$nextTick(function () {
        _this3.$refs.coverageChart.updateChart();
        _this3.$refs.statesCoverageChart.updateChart();
        _this3.$refs.previousStatesCoverageChart.updateChart();
        _this3.$refs.iesCoverageChart.updateChart();
      });
    },
    showMissing: function showMissing() {
      this.hideAll();
      this.showMissingPanel = true;
    },
    loadCities: function loadCities(data) {
      console.log('loadCities');
      this.$refs.locationFilter.setCitiesLoader(true);
      this.completeCities(this.currentType, this.currentValue);
    },
    locationSelected: function locationSelected(data) {
      console.log('locationSelected');
      if (!_lodash2.default.isNil(this.currentType)) {
        this.loadData(this.currentType, this.currentValue);
      }
    },
    locationRemoved: function locationRemoved(data) {
      var _this4 = this;

      this.$nextTick(function () {
        console.log('locationRemoved' + (0, _stringify2.default)(_this4.$refs.locationFilter.locationValue()));
        _this4.loadData(_this4.currentType, _this4.currentValue);
      });
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      var filterData = this.$refs.filter.filterSelected();
      if (!_lodash2.default.isNil(filterData.value) && filterData.value != '' || filterData.type == 'all') {
        this.loadData(filterData.type, filterData.value);
      } else {
        this.data = [];
      }
    },
    receiveMissingStock: function receiveMissingStock(data) {
      var _this5 = this;

      this.missingStock = data.courses;
      if (this.missingStock.length > 0) {
        this.hasMissingData = true;

        this.$nextTick(function () {
          _this5.tableMissing = new _datatable2.default('#inep-missing', {
            paging: true,
            deferRender: true,
            searchDelay: 500,
            pageLength: 30,
            order: [2, 'desc']
          });

          _this5.missingTableLoading = false;
        });
      } else {
        this.missingTableLoading = false;
      }

      this.verifyLoadingState();
    },
    receiveCitiesFilter: function receiveCitiesFilter(data) {
      this.citiesOptions = data.cities;
      this.$refs.locationFilter.setCitiesLoader(false);
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.universityGroupOptions = data.groups;
      this.filterOptions = data.filters;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;
      this.statesOptions = data.states;
      this.regionsOptions = data.regions;

      this.accountTypeOptions = data.account_types;
      this.dealOwnerOptions = data.deal_owners;

      this.initialDate = (0, _moment2.default)(this.semesterStart).toDate();
      this.lastDate = (0, _moment2.default)(this.semesterEnd).toDate();

      this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)(this.semesterEnd).toDate()];

      this.loadingFilters = false;
    },
    receiveIesTableData: function receiveIesTableData(data) {
      var _this6 = this;

      this.iesTable = data.ies_table;
      this.hasIESTable = true;

      this.$nextTick(function () {
        _this6.tableIES = new _datatable2.default('#inep-ies-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30,
          order: [3, 'desc']
        });

        _this6.iesTableLoading = false;
      });

      this.verifyLoadingState();
    },
    receiveStatesTableData: function receiveStatesTableData(data) {
      var _this7 = this;

      this.statesTable = data.states_table;
      this.hasStatesTable = true;

      this.$nextTick(function () {
        _this7.tableStates = new _datatable2.default('#inep-states-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30,
          order: [1, 'desc']
        });

        _this7.statesTableLoading = false;
      });

      this.verifyLoadingState();
    },
    receiveTableData: function receiveTableData(data) {
      this.baseYear = data.base_year;
      this.previousYear = data.previous_year;

      this.previousSemester = data.previous_semester;
      this.previousYearSemester = data.previous_year_semester;
    },
    receiveCoverageChartData: function receiveCoverageChartData(data) {
      console.log("receiveCoverageChartData");
      this.chartsDates = data.dates;
      this.currentPoint = data.current_point;

      this.$refs.coverageChart.setLabels(data.dates);
      this.$refs.coverageChart.setSeries(0, data.sem2, data.sem2_name);
      this.$refs.coverageChart.setSeries(1, data.sem1, data.sem1_name);
      this.$refs.coverageChart.setSeries(2, data.sem, data.sem_name);

      if (!_lodash2.default.isNil(this.currentPoint)) {
        this.$refs.coverageChart.setCurrentPoint(this.currentPoint);
      }

      this.coverageChartLoaded = true;

      this.verifyChartsReady();

      this.verifyLoadingState();
    },
    receiveStatesChartData: function receiveStatesChartData(data) {
      console.log("receiveStatesChartData");

      if (data.has_states_data) {
        this.statesKeys = data.states_keys;
        this.statesMap = data.states_map;
        this.statesMapPrevious = data.states_map_previous;

        if (!_lodash2.default.isEmpty(this.chartsDates)) {
          this.setStatesCharts();
        }
      }

      this.statesChartLoaded = true;

      this.verifyChartsReady();

      this.loadingStatesData = false;

      this.verifyLoadingState();
    },
    setStatesCharts: function setStatesCharts() {
      var _this8 = this;

      if (_lodash2.default.isNil(this.statesKeys)) {
        return;
      }
      this.showStatesCoverageChart = true;
      this.$refs.statesCoverageChart.setLabels(this.chartsDates);
      var index = 0;
      _lodash2.default.forEach(this.statesKeys, function (key) {
        if (_this8.nStatesSeries.id != 'all') {
          if (index >= _this8.nStatesSeries.id) {
            return;
          }
        }
        _this8.$refs.statesCoverageChart.setSeries(index, _this8.statesMap[key], key);
        index = index + 1;
      });

      if (!_lodash2.default.isNil(this.currentPoint)) {
        this.$refs.statesCoverageChart.setCurrentPoint(this.currentPoint);
      }

      index = 0;
      this.$refs.previousStatesCoverageChart.setLabels(this.chartsDates);
      _lodash2.default.forEach(this.statesKeys, function (key) {
        if (_this8.nStatesSeries.id != 'all') {
          if (index >= _this8.nStatesSeries.id) {
            return;
          }
        }
        _this8.$refs.previousStatesCoverageChart.setSeries(index, _this8.statesMapPrevious[key], key);
        index = index + 1;
      });
    },
    receiveIesChartData: function receiveIesChartData(data) {
      if (data.has_ies_data) {

        this.iesKeys = data.ies_keys;
        this.iesKeysNames = data.ies_keys_names;
        this.iesMap = data.ies_map;

        if (!_lodash2.default.isEmpty(this.chartsDates)) {
          this.setIesCharts();
        }
      }

      this.iesChartLoaded = true;
      this.verifyChartsReady();
      this.loadingIesData = false;

      this.verifyLoadingState();
    },
    setIesCharts: function setIesCharts() {
      var _this9 = this;

      if (_lodash2.default.isNil(this.iesKeys)) {
        return;
      }
      this.showIesCoverageChart = true;

      this.$refs.iesCoverageChart.setLabels(this.chartsDates);
      var index = 0;
      _lodash2.default.forEach(this.iesKeys, function (key) {
        if (index >= _this9.nIesSeries.id) {
          return;
        }
        _this9.$refs.iesCoverageChart.setSeries(index, _this9.iesMap[key], _this9.iesKeysNames[index]);
        index = index + 1;
      });

      if (!_lodash2.default.isNil(this.currentPoint)) {
        this.$refs.iesCoverageChart.setCurrentPoint(this.currentPoint);
      }
    },
    completeCities: function completeCities() {
      var params = this.filterParams();
      InepPanelChannel.push('completeCities', params).receive('timeout', function (data) {
        console.log('complete timeout');
      });
    },
    filterParams: function filterParams() {
      var params = { type: this.currentType, value: this.currentValue, kind_id: this.kindFilter, canonicals: this.filterCanonicals };
      if (this.$refs.locationFilter.locationValue()) {
        params.locationType = this.$refs.locationFilter.locationFilter();
        params.locationValue = this.$refs.locationFilter.locationValue();
      }
      return params;
    },
    loadFilters: function loadFilters() {
      InepPanelChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadChartData: function loadChartData(type, value) {
      this.loadingCharts = true;
      this.executeLoadData(type, value, 'loadChartData');
    },
    loadData: function loadData(type, value) {
      this.loading = true;
      this.dataInitialized = false;
      this.hideAll();
      this.showCoveragePanel = true;

      this.hasMissingData = false;
      this.hasStatesTable = false;
      this.hasIESTable = false;

      this.iesTableLoading = true;
      this.statesTableLoading = true;
      this.missingTableLoading = true;

      this.executeLoadData(type, value, 'loadData');
    },
    loadIesChart: function loadIesChart() {
      console.log("loadIesChart");

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      this.loadingIesData = true;

      var params = this.filterParams();
      params.initialDate = initialDate;
      params.finalDate = finalDate;
      params.iesOrdering = this.iesOrdering.key;

      InepPanelChannel.push('loadIesChartData', params).receive('timeout', function (data) {
        console.log('loadIesChartData timeout');
      });
    },
    loadStatesChart: function loadStatesChart() {
      console.log("loadStatesChart");

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      this.loadingStatesData = true;

      var params = this.filterParams();
      params.initialDate = initialDate;
      params.finalDate = finalDate;
      params.statesOrdering = this.statesOrdering.key;

      InepPanelChannel.push('loadStatesChartData', params).receive('timeout', function (data) {
        console.log('loadStatesChartData timeout');
      });
    },
    verifyLoadingState: function verifyLoadingState() {
      this.loading = !this.hasIESTable || !this.coverageChartLoaded || !this.hasStatesTable || this.missingTableLoading && !this.hasMissingData;
    },
    verifyChartsReady: function verifyChartsReady() {
      this.hasChartsData = this.coverageChartLoaded && this.iesChartLoaded && this.statesChartLoaded;
      if (this.hasChartsData) {
        this.loadingCharts = false;
        this.updateCharts();
        if (!this.dataInitialized) {
          this.dataInitialized = true;
        }
      }
    },
    updateCharts: function updateCharts() {
      var _this10 = this;

      this.$nextTick(function () {
        _this10.$refs.coverageChart.updateChart();
        _this10.$refs.statesCoverageChart.updateChart();
        _this10.$refs.iesCoverageChart.updateChart();
        _this10.$refs.previousStatesCoverageChart.updateChart();
      });
    },
    executeLoadData: function executeLoadData(type, value, action) {
      this.currentType = type;
      this.currentValue = value;

      this.coverageChartLoaded = false;
      this.iesChartLoaded = false;
      this.statesChartLoaded = false;

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var params = this.filterParams();
      params.initialDate = initialDate;
      params.finalDate = finalDate;
      params.statesOrdering = this.statesOrdering.key;
      params.iesOrdering = this.iesOrdering.key;

      this.$refs.coverageChart.clearSeries();
      this.$refs.statesCoverageChart.clearSeries();
      this.$refs.iesCoverageChart.clearSeries();
      this.$refs.previousStatesCoverageChart.clearSeries();

      this.showStatesCoverageChart = false;
      this.showIesCoverageChart = false;

      InepPanelChannel.push(action, params).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    },
    receiveEntrantsTableData: function receiveEntrantsTableData(data) {
      var _this11 = this;

      this.tableData = data.entrants;
      this.tableGroupingFieldTitle = data.grouping_field_title;
      this.tableGroupingFieldName = data.grouping_field_name;
      this.loading = false;
      this.$nextTick(function () {
        _this11.table = new _datatable2.default('#inep-entrants', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [0, 'asc']
        });
      });
    },
    loadEntrantsData: function loadEntrantsData() {
      this.loading = true;
      this.tableData = [];
      var filters = {
        university_id: this.filterUniversity.id

      };
      if (!_lodash2.default.isNil(this.filterState)) {
        filters.state = this.filterState.type;
      }
      if (!_lodash2.default.isNil(this.grouping)) {
        filters.grouping = this.grouping.key;
      }
      InepPanelChannel.push('loadEntrants', filters).receive('timeout', function () {
        console.log("load timeout");
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[_c('ul',{staticClass:"nav navbar-nav justify-content-center"},[_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showInepStockActive}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showInepStock}},[_vm._v("Estoque")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showInepEntrantsActive}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showInepEntrants}},[_vm._v("Ingressantes")])])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showInepEntrantsActive),expression:"showInepEntrantsActive"}]},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loadingFilters || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-6"},[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","track-by":"id","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterUniversity),callback:function ($$v) {_vm.filterUniversity=$$v},expression:"filterUniversity"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("ESTADO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.statesOptions,"label":"name","track-by":"type","placeholder":"Todos os estados","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterState),callback:function ($$v) {_vm.filterState=$$v},expression:"filterState"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("AGRUPAMENTO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.groupingOptions,"label":"name","track-by":"key","placeholder":"Sem agrupamento","selectLabel":"","deselectLabel":""},model:{value:(_vm.grouping),callback:function ($$v) {_vm.grouping=$$v},expression:"grouping"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadEntrantsData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])]),_vm._v(" "),(_vm.hasEntrantsData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"inep-entrants"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("Ano")]),_vm._v(" "),_c('th',[_vm._v("Ingressantes")]),_vm._v(" "),(_vm.tableGroupingFieldName)?_c('th',[_vm._v(_vm._s(_vm.tableGroupingFieldTitle))]):_vm._e()])]),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.ano_ingresso))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.quantidade))]),_vm._v(" "),(_vm.tableGroupingFieldName)?_c('td',[_vm._v(_vm._s(entry[_vm.tableGroupingFieldName]))]):_vm._e()])}),0)])])])])]):_vm._e()]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showInepStockActive),expression:"showInepStockActive"}]},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loadingFilters || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12 "},[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('div',{staticClass:"tiny-margin-left"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.kindFilter),expression:"kindFilter"}],attrs:{"type":"radio","id":"20_top_clean","name":"kind","value":"1","checked":""},domProps:{"checked":_vm._q(_vm.kindFilter,"1")},on:{"change":function($event){_vm.kindFilter="1"}}}),_vm._v(" "),_vm._m(1),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.kindFilter),expression:"kindFilter"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","id":"all","name":"kind","value":"3"},domProps:{"checked":_vm._q(_vm.kindFilter,"3")},on:{"change":function($event){_vm.kindFilter="3"}}}),_vm._v(" "),_vm._m(2)])])])]),_vm._v(" "),_c('location-filter',{ref:"locationFilter",attrs:{"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"cities-options":_vm.citiesOptions},on:{"cityLocationSelected":_vm.loadCities,"locationValueSelected":_vm.locationSelected,"locationTypeRemoved":_vm.locationRemoved}}),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-12"},[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("CURSOS")]),_vm._v(" "),_c('div',{staticClass:"tiny-margin-left"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCanonicals),expression:"filterCanonicals"}],attrs:{"type":"radio","id":"20_top_clean","name":"canonicals_filter","value":"20_top_clean","checked":""},domProps:{"checked":_vm._q(_vm.filterCanonicals,"20_top_clean")},on:{"change":function($event){_vm.filterCanonicals="20_top_clean"}}}),_vm._v(" "),_vm._m(3),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCanonicals),expression:"filterCanonicals"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","id":"all","name":"canonicals_filter","value":"all"},domProps:{"checked":_vm._q(_vm.filterCanonicals,"all")},on:{"change":function($event){_vm.filterCanonicals="all"}}}),_vm._v(" "),_vm._m(4)])])])])],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.dataInitialized || _vm.hasChartsData),expression:"dataInitialized || hasChartsData"}],staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[_c('ul',{staticClass:"nav navbar-nav justify-content-center"},[_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showCoveragePanel}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showCoverage}},[_vm._v("Cobertura")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showStatesPanel}},[(_vm.statesTableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small"})]):_vm._e(),_vm._v(" "),_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showStates}},[_vm._v("Estados")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showIESPanel}},[(_vm.iesTableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small"})]):_vm._e(),_vm._v(" "),_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showIES}},[_vm._v("IESs")])]),_vm._v(" "),_c('li',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasMissingData || _vm.missingTableLoading),expression:"hasMissingData || missingTableLoading"}],staticClass:"navbar__item",class:{'active' : _vm.showMissingPanel}},[(_vm.missingTableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small"})]):_vm._e(),_vm._v(" "),_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showMissing}},[_vm._v("Estoque faltando")])])])]),_vm._v(" "),_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showMissingPanel),expression:"showMissingPanel"}],staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[(_vm.hasMissingData)?_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"id":"inep-missing"}},[_vm._m(5),_vm._v(" "),_c('tbody',_vm._l((_vm.missingStock),function(course){return _c('tr',[_c('td',[_vm._v(_vm._s(course.no_ies))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.cidade))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.estado))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.curso))])])}),0)])]):_vm._e()])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showStatesPanel),expression:"showStatesPanel"}],staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[(_vm.hasStatesTable)?_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"id":"inep-states-table"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Base de Alunos INEP [2018]")]),_vm._v(" "),_c('th',[_vm._v("Share Anual QB "+_vm._s(_vm.baseYear)+" / INEP [2018]")]),_vm._v(" "),_c('th',[_vm._v("Share Anual QB "+_vm._s(_vm.previousYear)+" / INEP [2018]")]),_vm._v(" "),_c('th',[_vm._v("SKUs data base "+_vm._s(_vm.previousSemester)+" / SKUs INEP 18 "),_c('br'),_vm._v("(% da base de alunos)")]),_vm._v(" "),_c('th',[_vm._v("SKUs data base "+_vm._s(_vm.previousYearSemester)+" / SKUs INEP 18 "),_c('br'),_vm._v("(% da base de alunos)")]),_vm._v(" "),_vm._m(6)])]),_vm._v(" "),_c('tbody',_vm._l((_vm.statesTable),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.inep_students))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.share_sem_2))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.share_sem_1))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coverage_percent_previous_semester))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coverage_percent_previous_year))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coverage_percent))])])}),0)])]):_vm._e()])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showIESPanel),expression:"showIESPanel"}],staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[(_vm.hasIESTable)?_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"id":"inep-ies-table"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("IES ID")]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Farmer")]),_vm._v(" "),_c('th',[_vm._v("Base de Alunos INEP [2018]")]),_vm._v(" "),_c('th',[_vm._v("Share Anual QB "+_vm._s(_vm.baseYear)+" / INEP [2018]")]),_vm._v(" "),_c('th',[_vm._v("Share Anual QB "+_vm._s(_vm.previousYear)+" / INEP [2018]")]),_vm._v(" "),_c('th',[_vm._v("SKUs data base "+_vm._s(_vm.previousSemester)+" / SKUs INEP 18 "),_c('br'),_vm._v("(% da base de alunos)")]),_vm._v(" "),_c('th',[_vm._v("SKUs data base "+_vm._s(_vm.previousYearSemester)+" / SKUs INEP 18 "),_c('br'),_vm._v("(% da base de alunos)")]),_vm._v(" "),_vm._m(7)])]),_vm._v(" "),_c('tbody',_vm._l((_vm.iesTable),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.owner))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.inep_students))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.share_sem_2))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.share_sem_1))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coverage_percent_previous_semester))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coverage_percent_previous_year))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coverage_percent))])])}),0)])]):_vm._e()])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showMissingPanel),expression:"showMissingPanel"}],staticClass:"col-md-12"}),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showCoveragePanel),expression:"showCoveragePanel"}],staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 default-margin-top"},[_c('label',[_vm._v("PERÍODO BASE")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts,"not-after":_vm.lastDate,"not-before":_vm.initialDate},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingCharts)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showCoverageChart),expression:"showCoverageChart"}],staticClass:"col-md-12"},[_vm._m(8),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("Cobertura do INEP (% da base de alunos cobertos)")]),_vm._v(" "),_c('comparing-chart',{ref:"coverageChart",attrs:{"export-name":"cobertura_inep"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showStatesCoverageChart),expression:"showStatesCoverageChart"}],staticClass:"col-md-12"},[_vm._m(9),_vm._v(" "),(_vm.loadingStatesData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("NÚMERO DE ESTADOS")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.seriesOptions,"label":"name","placeholder":"Selecione o número de estados","selectLabel":"","deselectLabel":"","selectedLabel":""},model:{value:(_vm.nStatesSeries),callback:function ($$v) {_vm.nStatesSeries=$$v},expression:"nStatesSeries"}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("ORDENAÇÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.statesOrderingOptions,"label":"name","placeholder":"Selecione o método de ordenação","selectLabel":"","deselectLabel":"","selectedLabel":""},model:{value:(_vm.statesOrdering),callback:function ($$v) {_vm.statesOrdering=$$v},expression:"statesOrdering"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("ANO ANTERIOR")]),_vm._v(" "),_c('comparing-chart',{ref:"previousStatesCoverageChart",attrs:{"export-name":"cobertura_estados_inep"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("SEMESTRE ATUAL")]),_vm._v(" "),_c('comparing-chart',{ref:"statesCoverageChart",attrs:{"export-name":"cobertura_estados_inep"}})],1)])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showIesCoverageChart),expression:"showIesCoverageChart"}],staticClass:"col-md-12"},[_vm._m(10),_vm._v(" "),(_vm.loadingIesData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("NÚMERO DE IES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.iesSeriesOptions,"label":"name","placeholder":"Selecione o número de IES","selectLabel":"","deselectLabel":"","selectedLabel":""},model:{value:(_vm.nIesSeries),callback:function ($$v) {_vm.nIesSeries=$$v},expression:"nIesSeries"}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("ORDENAÇÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.statesOrderingOptions,"label":"name","placeholder":"Selecione o método de ordenação","selectLabel":"","deselectLabel":"","selectedLabel":""},model:{value:(_vm.iesOrdering),callback:function ($$v) {_vm.iesOrdering=$$v},expression:"iesOrdering"}})],1)]),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("SEMESTRE ATUAL")]),_vm._v(" "),_c('comparing-chart',{ref:"iesCoverageChart",attrs:{"export-name":"cobertura_ies_inep"}})],1)])])])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel do INEP ( Somente Graduação )\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"20_top_clean"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Presencial")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"all"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("EaD")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"20_top_clean"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("\n                      TOP 20 EM VENDAS\n                      "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_c('p',[_vm._v("O curso canônico mãe do SKU está entre os mais vendidos")])])])])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"all"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("TODOS")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Curso")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs Online / SKUs INEP 18 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs Online / SKUs INEP 18 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('h2',[_vm._v("COBERTURA DA BASE DE ALUNOS DO INEP PELO ESTOQUE DO QB")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('h2',[_vm._v("COBERTURA POR ESTADO - (% da base de alunos cobertos)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('h2',[_vm._v("COBERTURA POR IES - (% da base de alunos cobertos)")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-df1f1576", __vue__options__)
  } else {
    hotAPI.reload("data-v-df1f1576", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/inep-share.vue", function(exports, require, module) {
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

var _defineProperty2 = require("babel-runtime/helpers/defineProperty");

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _lodash = require("lodash");

var _lodash2 = _interopRequireDefault(_lodash);

var _messageDialog = require("../js/components/message-dialog");

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _datatable = require("../js/components/datatable");

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require("vue-multiselect");

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customSearchMultiselect = require("./custom-search-multiselect");

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _panelPrimaryFilter = require("./panel-primary-filter");

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _locationFilter = require("./location-filter");

var _locationFilter2 = _interopRequireDefault(_locationFilter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _ref;

    return _ref = {
      loadingIesData: false,
      loadingFilters: true,
      loadingLocationData: false,
      loading: false,
      data: [],
      dataStats: {},
      iesData: [],
      iesStats: {},
      locationData: [],
      locationStats: {},
      accountTypeFilter: null,
      accountTypeOptions: [],
      statesOptions: [],
      statesSugestions: [],
      locationState: null,
      hasLocationData: false,
      hasMissingData: false,
      showStatesTable: true,
      showShareTable: false,
      showIESTable: false,
      showLocationTable: false,
      showMissingTable: false,
      filterOptions: [],
      dealOwnerOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      currentType: null,
      currentValue: null,
      kindFilter: 1,
      resultsetType: null,
      locationOptions: [{ name: 'Região', type: 'region' }, { name: 'Estado', type: 'state' }, { name: 'Cidade', type: 'city' }],
      citiesOptions: []
    }, (0, _defineProperty3.default)(_ref, "statesOptions", []), (0, _defineProperty3.default)(_ref, "regionsOptions", []), (0, _defineProperty3.default)(_ref, "inepEadMissing", []), (0, _defineProperty3.default)(_ref, "inepPresencialMissing", []), (0, _defineProperty3.default)(_ref, "inepShare", []), (0, _defineProperty3.default)(_ref, "stockInepData", false), (0, _defineProperty3.default)(_ref, "loadingInepData", false), _ref;
  },
  mounted: function mounted() {
    var _this = this;

    console.log("mounted");
    InepChannel.on('shareData', function (payload) {
      return _this.receiveShareData(payload);
    });
    InepChannel.on('iesData', function (payload) {
      return _this.receiveIesData(payload);
    });
    InepChannel.on('locationData', function (payload) {
      return _this.receiveLocationData(payload);
    });
    InepChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    InepChannel.on('citiesComplete', function (payload) {
      return _this.receiveCitiesComplete(payload);
    });
    InepChannel.on('inepData', function (payload) {
      return _this.receiveInepReport(payload);
    });

    this.loadFilters();
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    LocationFilter: _locationFilter2.default
  },
  computed: {
    eadResultset: function eadResultset() {
      return this.resultsetType == 'ead';
    },
    presencialResultset: function presencialResultset() {
      return this.resultsetType == 'presencial';
    }
  },
  watch: {
    kindFilter: function kindFilter(value) {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.primaryFilterSelected();
      });
    }
  },
  methods: {
    locationRemoved: function locationRemoved() {
      var _this3 = this;

      console.log("locationRemoved");
      this.$nextTick(function () {
        _this3.primaryFilterSelected();
      });
    },
    receiveCitiesComplete: function receiveCitiesComplete(data) {
      this.citiesOptions = data.cities;
    },
    locationSelected: function locationSelected() {
      console.log("locationSelected");
      this.primaryFilterSelected();
    },
    loadCities: function loadCities() {
      console.log("loadCities");
      var params = this.filterParams();
      InepChannel.push('citiesComplete', params).receive('timeout', function () {
        console.log("return timeout");
      });
    },
    primaryFilterSelected: function primaryFilterSelected() {
      var filterData = this.$refs.filter.filterSelected();
      console.log("primaryFilterSelected: " + (0, _stringify2.default)(filterData));
      console.log("primaryFilterSelected: TYPE: " + filterData.type + " VALUE: " + (0, _stringify2.default)(filterData.value) + " NIL?" + _lodash2.default.isNil(filterData.value));
      if (!_lodash2.default.isNil(filterData.value) && filterData.value != '') {
        this.loadData(filterData.type, filterData.value);
      } else {
        this.data = [];
      }
    },
    normalizedCellColor: function normalizedCellColor(data, stats, key) {
      return this.cellColor(data[key], stats.min[key], stats.max[key], stats.mean[key]);
    },
    cellColor: function cellColor(value, min, max, mean) {
      if (_lodash2.default.isNil(value)) {
        return "#BC2626";
      }
      var decimalValue = eval(value);
      if (decimalValue > mean) {
        var _rel = (decimalValue - mean) / (max - mean);
        var _colorFac = 40 + Math.round(75 * (1 - _rel));
        var _factorString = _colorFac.toString(16).padStart(2, '0');
        var _colorValue = "#" + _factorString + "68" + _factorString;
        return _colorValue;
      }
      var rel = (mean - decimalValue) / (mean - min);
      var colorFac = 26 + Math.round(162 * (1 - rel));
      var factorString = colorFac.toString(16).padStart(2, '0');
      var colorValue = "#BC" + factorString + factorString;
      return colorValue;
    },
    showShare: function showShare() {
      this.showShareTable = true;
      this.showIESTable = false;
      this.showStatesTable = false;
      this.showLocationTable = false;
      this.showMissingTable = false;
    },
    showStates: function showStates() {
      this.showIESTable = false;
      this.showStatesTable = true;
      this.showLocationTable = false;
      this.showShareTable = false;
      this.showMissingTable = false;
    },
    showIES: function showIES() {
      this.showStatesTable = false;
      this.showIESTable = true;
      this.showLocationTable = false;
      this.showShareTable = false;
      this.showMissingTable = false;
    },
    showLocation: function showLocation() {
      this.showStatesTable = false;
      this.showIESTable = false;
      this.showLocationTable = true;
      this.showShareTable = false;
      this.showMissingTable = false;
    },
    showMissing: function showMissing() {
      this.showStatesTable = false;
      this.showIESTable = false;
      this.showLocationTable = false;
      this.showShareTable = false;
      this.showMissingTable = true;
    },
    loadLocationData: function loadLocationData() {
      this.loadingLocationData = true;
      var params = this.filterParams();
      InepChannel.push('filterStateLocations', params).receive('timeout', function () {
        console.log("return timeout");
      });
    },
    filterParams: function filterParams() {
      var params = { type: this.currentType, value: this.currentValue, kind_id: this.kindFilter };
      if (this.$refs.locationFilter.locationValue()) {
        params.locationType = this.$refs.locationFilter.locationFilter();
        params.locationValue = this.$refs.locationFilter.locationValue();
      }
      return params;
    },
    loadData: function loadData(type, value) {
      this.currentType = type;
      this.currentValue = value;
      this.loading = true;
      this.loadingIesData = true;
      this.locationState = null;
      this.hasLocationData = false;
      this.hasMissingData = false;
      this.data = [];

      var params = this.filterParams();
      InepChannel.push('load', params).receive('timeout', function () {
        console.log("return timeout");
      });

      if (params.locationType == 'state' || params.locationType == 'city') {
        this.loadLocationData();
      }
    },
    loadFilters: function loadFilters() {
      InepChannel.push('loadFilters').receive('timeout', function () {
        console.log("return timeout");
      });
    },
    receiveInepReport: function receiveInepReport(data) {
      var _this4 = this;

      this.stockInepData = true;
      this.loadingInepData = false;

      this.inepPresencialMissing = data.presencial;
      this.inepEadMissing = data.ead;
      this.inepShare = data.share;

      if (this.inepEadMissing.length > 0) {
        this.hasMissingData = true;
        this.$nextTick(function () {
          _this4.table = new _datatable2.default('#inep-missing-ead', {
            paging: true,
            deferRender: true,
            searchDelay: 500,
            pageLength: 10,
            order: [1, 'desc']
          });
        });
      }

      if (this.inepPresencialMissing.length > 0) {
        this.hasMissingData = true;
        this.$nextTick(function () {
          _this4.table = new _datatable2.default('#inep-missing-presencial', {
            paging: true,
            deferRender: true,
            searchDelay: 500,
            pageLength: 10,
            order: [1, 'desc']
          });
        });
      }
    },
    receiveLocationData: function receiveLocationData(data) {
      var _this5 = this;

      console.log("receiveLocationData");
      this.locationData = data.location_data;
      this.locationStats = data.location_data_stats;
      this.loadingLocationData = false;
      this.hasLocationData = true;

      this.$nextTick(function () {
        _this5.table = new _datatable2.default('#inep-share-location', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [4, 'desc']
        });
      });
    },
    receiveFilters: function receiveFilters(data) {
      this.accountTypeOptions = data.accountTypes;
      this.loadingFilters = false;
      this.statesOptions = data.states;
      this.statesSugestions = data.states;

      this.filterOptions = data.filters;
      this.dealOwnerOptions = data.dealOwners;
      this.universityOptions = data.universities;
      this.universityGroupOptions = data.universityGroups;
      this.statesOptions = data.states;
      this.regionsOptions = data.regions;

      this.$refs.filter.setFilterType({ type: "account_type", name: "Carteira" });
    },
    receiveIesData: function receiveIesData(data) {
      var _this6 = this;

      console.log("receiveIesData");
      this.iesData = data.ies_data;
      this.iesStats = data.ies_data_stats;
      this.loadingIesData = false;

      if (this.currentType === 'university' || this.currentType === 'group') {
        this.showShare();
      } else {
        this.showStates();
      }

      this.$nextTick(function () {
        console.log("receiveIesData NEXT TICK");
        _this6.table = new _datatable2.default('#inep-share-ies', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [3, 'desc']
        });
        console.log("receiveIesData TABLE FINISHED LL: " + _this6.loadingIesData);
      });
    },
    receiveShareData: function receiveShareData(data) {
      var _this7 = this;

      this.data = data.table_data;
      this.dataStats = data.table_data_stats;
      this.loading = false;
      this.resultsetType = data.resultset_type;
      console.log("received resultsetType: " + this.resultsetType);

      if (this.data != []) {
        this.$nextTick(function () {
          _this7.table = new _datatable2.default('#inep-share-states', {
            paging: true,
            deferRender: true,
            searchDelay: 500,
            pageLength: 10,
            order: [1, 'desc']
          });
        });
      }
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loadingFilters || _vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-6"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-12 default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.kindFilter),expression:"kindFilter"}],attrs:{"type":"radio","name":"kind","value":"1","checked":""},domProps:{"checked":_vm._q(_vm.kindFilter,"1")},on:{"change":function($event){_vm.kindFilter="1"}}}),_vm._v(" "),_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"16px"}},[_vm._v("Presencial")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.kindFilter),expression:"kindFilter"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","name":"kind","value":"3"},domProps:{"checked":_vm._q(_vm.kindFilter,"3")},on:{"change":function($event){_vm.kindFilter="3"}}}),_vm._v(" "),_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"16px"}},[_vm._v("Ead")])]),_vm._v(" "),_c('location-filter',{ref:"locationFilter",attrs:{"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"cities-options":_vm.citiesOptions},on:{"cityLocationSelected":_vm.loadCities,"locationValueSelected":_vm.locationSelected,"locationTypeRemoved":_vm.locationRemoved}})],1)]),_vm._v(" "),(_vm.data.length > 0)?_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[_c('ul',{staticClass:"nav navbar-nav justify-content-center"},[_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showShareTable}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showShare}},[_vm._v("Share")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showStatesTable}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showStates}},[_vm._v("Estados")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showIESTable}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showIES}},[_vm._v("IESs")])]),_vm._v(" "),_c('li',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasLocationData),expression:"hasLocationData"}],staticClass:"navbar__item",class:{'active' : _vm.showLocationTable}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showLocation}},[_vm._v("Praças")])]),_vm._v(" "),_c('li',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasMissingData),expression:"hasMissingData"}],staticClass:"navbar__item",class:{'active' : _vm.showMissingTable}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showMissing}},[_vm._v("Estoque faltando")])])])]),_vm._v(" "),_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showShareTable),expression:"showShareTable"}],staticClass:"col-md-12"},[(_vm.loadingInepData || _vm.stockInepData)?_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[(_vm.loadingInepData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"width":"100%"}},[_c('thead',[_vm._m(1),_vm._v(" "),_c('tr',[_c('th',{attrs:{"colspan":"2"}},[_vm._v("Total")]),_vm._v(" "),_c('th'),(_vm.presencialResultset)?_c('th',{attrs:{"colspan":"2"}},[_vm._v("Presencial")]):_vm._e(),_vm._v(" "),_c('th'),(_vm.eadResultset)?_c('th',{attrs:{"colspan":"2"}},[_vm._v("EAD")]):_vm._e()])]),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("Skus inep total")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.inep_skus))]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("Skus Total")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.inep_skus_presencial))]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("Skus Total")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.inep_skus_ead))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Skus QB 2018")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.qb_skus))]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("Skus QB 2018")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.presencial_qb))]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("Skus QB 2018")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.ead_qb))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Skus QB 2018.1")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.qb_skus_1))]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("Skus QB 2018.1")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.presencial_qb_1))]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("Skus QB 2018.1")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.ead_qb_1))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Skus QB 2018.2")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.qb_skus_2))]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("Skus QB 2018.2")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.presencial_qb_2))]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("Skus QB 2018.2")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.ead_qb_2))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("Skus no Ar")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.online_skus))]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("Skus no Ar")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.presencial_online))]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("Skus no Ar")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.ead_online))]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("SKUs QB18 / SKUs INEP 17 ( % da base de alunos)")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.qb_skus_enrollment)+" %")]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("SKUs QB18 / SKUs INEP 17 ( % da base de alunos)")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.qb_skus_enrollment_presencial)+" %")]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("SKUs QB18 / SKUs INEP 17 ( % da base de alunos)")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.qb_skus_enrollment_ead)+" %")]):_vm._e()]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("SKUs QB19.1 Online / SKUs INEP 17 ( % da base de alunos)")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.inepShare.online_skus_enrollment)+" %")]),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v("SKUs QB19.1 Online / SKUs INEP 17 ( % da base de alunos)")]):_vm._e(),_vm._v(" "),(_vm.presencialResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.online_skus_enrollment_presencial)+" %")]):_vm._e(),_vm._v(" "),_c('td'),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v("SKUs QB19.1 Online / SKUs INEP 17 ( % da base de alunos)")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('td',[_vm._v(_vm._s(_vm.inepShare.online_skus_enrollment_ead)+" %")]):_vm._e()])])])])])]):_vm._e()]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showMissingTable),expression:"showMissingTable"}]},[(_vm.stockInepData && (_vm.inepPresencialMissing.length > 0 || _vm.inepEadMissing.length > 0))?_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.presencialResultset),expression:"presencialResultset"}],staticClass:"col-md-12"},[(_vm.inepPresencialMissing.length == 0)?[_c('h2',[_vm._v("Nenhum curso presencial faltante identificado")])]:[_c('table',{staticClass:"data-table",attrs:{"id":"inep-missing-presencial"}},[_vm._m(2),_vm._v(" "),_c('tbody',_vm._l((_vm.inepPresencialMissing),function(course){return _c('tr',[_c('td',[_vm._v(_vm._s(course.ies_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.course))])])}),0)])]],2),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.eadResultset),expression:"eadResultset"}],staticClass:"col-md-12"},[(_vm.inepEadMissing.length == 0)?[_vm._v("\n                Nenhum curso EaD faltante identificado\n              ")]:[_c('table',{staticClass:"data-table",attrs:{"id":"inep-missing-ead"}},[_vm._m(3),_vm._v(" "),_c('tbody',_vm._l((_vm.inepEadMissing),function(course){return _c('tr',[_c('td',[_vm._v(_vm._s(course.ies_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.course))])])}),0)])]],2)])]):_vm._e()]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showStatesTable),expression:"showStatesTable"}],staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"id":"inep-share-states"}},[_c('thead',[_c('tr',[_c('th'),_vm._v(" "),(_vm.presencialResultset)?_c('th',{attrs:{"colspan":"6"}},[_vm._v("Presencial")]):_vm._e(),_vm._v(" "),(_vm.eadResultset)?_c('th',{attrs:{"colspan":"6"}},[_vm._v("Ead")]):_vm._e()]),_vm._v(" "),_c('tr',[_c('th',[_vm._v("Estado")]),_vm._v(" "),(_vm.presencialResultset)?[_c('th',[_vm._v("Ingressantes Inep [2017]")]),_vm._v(" "),_c('th',[_vm._v("Share QB (%) [ANUAL]")]),_vm._v(" "),_vm._m(4),_vm._v(" "),_vm._m(5),_vm._v(" "),_vm._m(6),_vm._v(" "),_vm._m(7)]:_vm._e(),_vm._v(" "),(_vm.eadResultset)?[_c('th',[_vm._v("Ingressantes Inep [2017]")]),_vm._v(" "),_c('th',[_vm._v("Share QB (%) [ANUAL]")]),_vm._v(" "),_vm._m(8),_vm._v(" "),_vm._m(9),_vm._v(" "),_vm._m(10),_vm._v(" "),_vm._m(11)]:_vm._e()],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.data),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.state))]),_vm._v(" "),(_vm.presencialResultset)?[_c('td',[_vm._v(_vm._s(entry.inep_presencial))]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_qb_presencial')}},[_vm._v("\n                  "+_vm._s(entry.share_qb_presencial)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_presencial')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_presencial)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_presencial_1')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_presencial_1)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_presencial_2')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_presencial_2)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_online_presencial')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_online_presencial)+"\n                ")])]:_vm._e(),_vm._v(" "),(_vm.eadResultset)?[_c('td',[_vm._v(_vm._s(entry.inep_ead))]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_qb_ead')}},[_vm._v("\n                  "+_vm._s(entry.share_qb_ead)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_ead')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_ead)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_ead_1')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_ead_1)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_ead_2')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_ead_2)+"\n                ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.dataStats, 'share_base_alunos_skus_online_ead')}},[_vm._v("\n                  "+_vm._s(entry.share_base_alunos_skus_online_ead)+"\n                ")])]:_vm._e()],2)}),0)])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showIESTable),expression:"showIESTable"}],staticClass:"col-md-12"},[(_vm.loadingIesData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[(!_vm.loadingIesData)?_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"id":"inep-share-ies"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("ID IES")]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Farmer")]),_vm._v(" "),(_vm.presencialResultset)?[_c('th',[_vm._v("Base de Alunos INEP Presencial [2017]")]),_vm._v(" "),_vm._m(12),_vm._v(" "),_vm._m(13),_vm._v(" "),_vm._m(14),_vm._v(" "),_vm._m(15)]:_vm._e(),_vm._v(" "),(_vm.eadResultset)?[_c('th',[_vm._v("Base de Alunos INEP EAD [2017]")]),_vm._v(" "),_vm._m(16),_vm._v(" "),_vm._m(17),_vm._v(" "),_vm._m(18),_vm._v(" "),_vm._m(19)]:_vm._e()],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.iesData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.qb_university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.ies_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.owner))]),_vm._v(" "),(_vm.presencialResultset)?[_c('td',[_vm._v(_vm._s(entry.inep_presencial))]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_presencial')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_presencial)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_presencial_1')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_presencial_1)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_presencial_2')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_presencial_2)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_online_presencial')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_online_presencial)+"\n                    ")])]:_vm._e(),_vm._v(" "),(_vm.eadResultset)?[_c('td',[_vm._v(_vm._s(entry.inep_ead))]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_ead')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_ead)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_ead_1')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_ead_1)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_ead_2')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_ead_2)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.iesStats, 'share_base_alunos_skus_online_ead')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_online_ead)+"\n                    ")])]:_vm._e()],2)}),0)])]):_vm._e()])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showLocationTable),expression:"showLocationTable"}],staticClass:"col-md-12"},[(_vm.loadingLocationData)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[(!_vm.loadingLocationData)?_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table",attrs:{"id":"inep-share-location"}},[_c('thead',[_c('tr',[_c('th',[_vm._v("ID IES")]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Farmer")]),_vm._v(" "),(_vm.presencialResultset)?[_c('th',[_vm._v("Base de Alunos INEP Presencial [2017]")]),_vm._v(" "),_vm._m(20),_vm._v(" "),_vm._m(21),_vm._v(" "),_vm._m(22),_vm._v(" "),_vm._m(23)]:_vm._e(),_vm._v(" "),(_vm.eadResultset)?[_c('th',[_vm._v("Base de Alunos INEP EAD [2017]")]),_vm._v(" "),_vm._m(24),_vm._v(" "),_vm._m(25),_vm._v(" "),_vm._m(26),_vm._v(" "),_vm._m(27)]:_vm._e()],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.locationData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.qb_university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.ies_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.owner))]),_vm._v(" "),(_vm.presencialResultset)?[_c('td',[_vm._v(_vm._s(entry.inep_presencial))]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_presencial')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_presencial)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_presencial_1')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_presencial_1)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_presencial_2')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_presencial_2)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_online_presencial')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_online_presencial)+"\n                    ")])]:_vm._e(),_vm._v(" "),(_vm.eadResultset)?[_c('td',[_vm._v(_vm._s(entry.inep_ead))]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_ead')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_ead)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_ead_1')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_ead_1)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_ead_2')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_ead_2)+"\n                    ")]),_vm._v(" "),_c('td',{attrs:{"bgcolor":_vm.normalizedCellColor(entry, _vm.locationStats, 'share_base_alunos_skus_online_ead')}},[_vm._v("\n                      "+_vm._s(entry.share_base_alunos_skus_online_ead)+"\n                    ")])]:_vm._e()],2)}),0)])]):_vm._e()])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        INEP SHARE\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th',{attrs:{"colspan":"9"}},[_vm._v("20 Cursos mais vendidos\n                      "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_vm._v("\n                          Direito"),_c('br'),_vm._v("\n                          Administracao"),_c('br'),_vm._v("\n                          Enfermagem"),_c('br'),_vm._v("\n                          Ciencias contabeis"),_c('br'),_vm._v("\n                          Pedagogia"),_c('br'),_vm._v("\n                          Educacao fisica"),_c('br'),_vm._v("\n                          Psicologia"),_c('br'),_vm._v("\n                          Fisioterapia"),_c('br'),_vm._v("\n                          Recursos humanos"),_c('br'),_vm._v("\n                          Nutricao"),_c('br'),_vm._v("\n                          Farmacia"),_c('br'),_vm._v("\n                          Engenharia civil"),_c('br'),_vm._v("\n                          Arquitetura e urbanismo"),_c('br'),_vm._v("\n                          Biomedicina"),_c('br'),_vm._v("\n                          Estetica"),_c('br'),_vm._v("\n                          Analise e desenvolvimento de sistemas"),_c('br'),_vm._v("\n                          Publicidade e propaganda"),_c('br'),_vm._v("\n                          Logistica"),_c('br'),_vm._v("\n                          Engenharia de producao"),_c('br'),_vm._v("\n                          Engenharia mecanica"),_c('br')])])])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Curso")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Curso")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.1 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.2 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs Online Atual / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.1 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.2 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs Online Atual / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.1 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.2 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB19.1 Online / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.1 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.2 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB19.1 Online / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.1 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.2 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB19.1 Online / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.1 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs QB18.2 / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('th',[_vm._v("SKUs Online Atual / SKUs INEP 17 "),_c('br'),_vm._v("(% da base de alunos)")])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-eafd54c0", __vue__options__)
  } else {
    hotAPI.reload("data-v-eafd54c0", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/location-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      locationType: null,
      locationRegion: null,
      locationState: null,
      locationCity: null,
      locationCampus: null,
      campusFilterLoading: false,
      cityFilterLoading: false,
      locationCities: [],
      locationStates: [],
      locationRegions: []
    };
  },

  props: {
    classMultiplier: {
      type: Number,
      default: 2
    },
    locationOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    regionsOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    statesOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    citiesOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    campusOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  components: {
    Multiselect: _vueMultiselect2.default,
    CsMultiselect: _customSearchMultiselect2.default
  },
  computed: {
    defaultClass: function defaultClass() {
      return 'col-md-' + this.classMultiplier + ' col-sm-' + this.classMultiplier * 3;
    },
    regionsFilter: function regionsFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'regions') {
        return true;
      }
      return false;
    },
    regionFilter: function regionFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'region') {
        return true;
      }
      return false;
    },
    stateFilter: function stateFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'state') {
        return true;
      }
      return false;
    },
    statesFilter: function statesFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'states') {
        return true;
      }
      return false;
    },
    cityFilter: function cityFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'city') {
        return true;
      }
      return false;
    },
    citiesFilter: function citiesFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'cities') {
        return true;
      }
      return false;
    },
    campusFilter: function campusFilter() {
      if (!_lodash2.default.isNil(this.locationType) && this.locationType != '' && this.locationType.type == 'campus') {
        return true;
      }
      return false;
    }
  },
  methods: {
    locationValue: function locationValue() {
      if (this.locationType) {
        var locationType = this.locationType.type;
        if (locationType == "region") {
          return this.locationRegion;
        } else if (locationType == "state") {
          return this.locationState;
        } else if (locationType == "city") {
          return this.locationCity;
        } else if (locationType == "campus") {
          return this.locationCampus;
        } else if (locationType == "regions") {
          return this.locationRegions;
        } else if (locationType == "states") {
          return this.locationStates;
        } else if (locationType == "cities") {
          return this.locationCities;
        }
      }
      return;
    },
    locationFilter: function locationFilter() {
      if (this.locationType) {
        return this.locationType.type;
      }
      return;
    },
    setCitiesLoader: function setCitiesLoader(value) {
      this.cityFilterLoading = value;
    },
    setCampusLoader: function setCampusLoader(value) {
      this.campusFilterLoading = value;
    },
    locationTypeSelected: function locationTypeSelected(data) {
      console.log("locationTypeSelected# data: " + (0, _stringify2.default)(data));
      this.locationCity = '';
      this.locationRegion = '';
      this.locationState = '';
      this.locationCampus = '';
      this.locationCities = [];
      this.locationStates = [];
      this.locationRegions = [];

      var eventType = data.type + 'LocationSelected';

      console.log("locationTypeSelected# eventType: " + eventType);
      this.$emit(eventType);
    },
    locationTypeRemoved: function locationTypeRemoved(data) {
      var _this = this;

      this.$nextTick(function () {
        console.log("locationTypeRemoved data: " + (0, _stringify2.default)(data) + " locationType: " + (0, _stringify2.default)(_this.locationType));
        _this.$emit('locationTypeRemoved');
        _this.locationTypeSelected(data);
      });
    },
    locationValueSelected: function locationValueSelected(data) {
      var _this2 = this;

      console.log('locationValueSelected data: ' + (0, _stringify2.default)(data));
      this.$nextTick(function () {
        _this2.$emit('locationValueSelected');
      });
    },
    validateFilter: function validateFilter() {
      if (!_lodash2.default.isNil(this.locationType)) {
        if (this.locationType.type == 'regions') {
          if (_lodash2.default.isEmpty(this.locationRegions)) {
            alert('Selecione pelo menos uma região');
            return false;
          }
        } else if (this.locationType.type == 'region') {
          if (this.locationRegion == '') {
            alert('Selecione a região');
            return false;
          }
        } else if (this.locationType.type == 'state') {
          if (this.locationState == '') {
            alert('Selecione o estado');
            return false;
          }
        } else if (this.locationType.type == 'states') {
          if (_lodash2.default.isEmpty(this.locationStates)) {
            alert('Selecione pelo menos um estado');
            return false;
          }
        } else if (this.locationType.type == 'city') {
          if (this.locationCity == '') {
            alert('Selecione a cidade');
            return false;
          }
        } else if (this.locationType.type == 'cities') {
          if (_lodash2.default.isEmpty(this.locationCities)) {
            alert('Selecione pelo menos uma cidade');
            return false;
          }
        } else if (this.locationType.type == "campus") {
          if (this.locationCampus == '') {
            alert('Selecione o campus');
            return false;
          }
        }
      }
      return true;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{class:_vm.defaultClass},[_c('div',[_c('label',{attrs:{"for":"location-filter"}},[_vm._v("LOCALIZACAO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.locationOptions,"label":"name","track-by":"type","placeholder":"Todas as localizaçoes","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationTypeSelected,"remove":_vm.locationTypeRemoved},model:{value:(_vm.locationType),callback:function ($$v) {_vm.locationType=$$v},expression:"locationType"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.regionFilter),expression:"regionFilter"}],class:_vm.defaultClass},[_c('div',[_c('label',{attrs:{"for":"region-filter"}},[_vm._v("REGIÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.regionsOptions,"label":"name","placeholder":"Selecione a região","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationRegion),callback:function ($$v) {_vm.locationRegion=$$v},expression:"locationRegion"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.regionsFilter),expression:"regionsFilter"}],class:_vm.defaultClass},[_c('div',[_c('label',{attrs:{"for":"region-filter"}},[_vm._v("REGIÕES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.regionsOptions,"multiple":true,"track-by":"type","label":"name","placeholder":"Selecione as regiões","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationRegions),callback:function ($$v) {_vm.locationRegions=$$v},expression:"locationRegions"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.stateFilter),expression:"stateFilter"}],class:_vm.defaultClass},[_c('div',[_c('label',{attrs:{"for":"state-filter"}},[_vm._v("ESTADO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"id":"state-filter","options":_vm.statesOptions,"label":"name","placeholder":"Selecione o estado","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationState),callback:function ($$v) {_vm.locationState=$$v},expression:"locationState"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.statesFilter),expression:"statesFilter"}],class:_vm.defaultClass},[_c('div',[_c('label',{attrs:{"for":"state-filter"}},[_vm._v("ESTADOS")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"id":"state-filter","options":_vm.statesOptions,"track-by":"type","multiple":true,"label":"name","placeholder":"Selecione os estados","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationStates),callback:function ($$v) {_vm.locationStates=$$v},expression:"locationStates"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.cityFilter),expression:"cityFilter"}],class:_vm.defaultClass},[(_vm.cityFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"city-filter"}},[_vm._v("CIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.citiesOptions,"label":"name","placeholder":"Selecione a cidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationCity),callback:function ($$v) {_vm.locationCity=$$v},expression:"locationCity"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.citiesFilter),expression:"citiesFilter"}],class:_vm.defaultClass},[(_vm.cityFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"city-filter"}},[_vm._v("CIDADES")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.citiesOptions,"multiple":true,"label":"name","track-by":"name","placeholder":"Selecione as cidades","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationCities),callback:function ($$v) {_vm.locationCities=$$v},expression:"locationCities"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.campusFilter),expression:"campusFilter"}],class:_vm.defaultClass},[(_vm.campusFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"campus-filter"}},[_vm._v("CAMPUS")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.campusOptions,"label":"name","placeholder":"Selecione o campus","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationCampus),callback:function ($$v) {_vm.locationCampus=$$v},expression:"locationCampus"}})],1)])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-13a5ab42", __vue__options__)
  } else {
    hotAPI.reload("data-v-13a5ab42", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/modal-dialog.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  data: function data() {
    return {
      loading: false
    };
  },

  props: ['identification'],
  methods: {
    setLoader: function setLoader() {
      this.loading = true;
    },
    resetLoader: function resetLoader() {
      this.loading = false;
    },
    show: function show() {
      $('#modal-dialog-' + this.identification).modal('show');
    },
    close: function close() {
      $('#modal-dialog-' + this.identification).modal('hide');
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"modal",staticStyle:{"z-index":"5000"},attrs:{"id":'modal-dialog-' + _vm.identification,"role":"dialog"}},[_c('div',{staticClass:"modal-dialog"},[_c('div',{staticClass:"modal-content",staticStyle:{"background-color":"#1F2426"}},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_vm._t("default")],2)])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-24d415b4", __vue__options__)
  } else {
    hotAPI.reload("data-v-24d415b4", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/offers-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],
      semesterOptions: [],
      statusOptions: [{ name: 'Congelada', id: 'frozen' }],
      filterKinds: null,
      filterLevels: null,
      filterStatus: null,
      dataLimit: false,

      dateRange: null,

      tableData: [],
      table: null,
      enabledFilter: true,
      visibleFilter: false,
      restrictedFilter: false,

      loadingFilters: true,
      dataLoading: false,
      semesterStart: null,
      semesterEnd: null,
      hasNoData: false,
      filterSemesters: [],

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }]
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    OffersChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    OffersChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });
    OffersChannel.on('tableDownload', function (payload) {
      return _this2.receiveTableDownload(payload);
    });

    this.loadFilters();
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityGroupOptions = data.groups;
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;
      this.semesterOptions = data.semester_options;
      this.accountTypeOptions = data.accountTypes;
      this.dealOwnerOptions = data.dealOwners;

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this3 = this;

      console.log("receiveTableData#");
      this.tableData = data.offers;
      if (data.offers.length == 0) {
        this.hasNoData = true;
      }

      this.dataLimit = data.data_limit;

      this.$nextTick(function () {
        _this3.table = new _datatable2.default('#offers-table', {
          ordering: false,
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30,
          buttons: []
        });
      });

      this.dataLoading = false;
    },
    saveXlsx: function saveXlsx(input, filename, contentType) {
      var byteCharacters = atob(input);
      var byteNumbers = new Array(byteCharacters.length);
      for (var i = 0; i < byteCharacters.length; i++) {
        byteNumbers[i] = byteCharacters.charCodeAt(i);
      }
      var byteArray = new Uint8Array(byteNumbers);
      var blob = new Blob([byteArray], { type: contentType });

      saveAs(blob, filename);
    },
    receiveTableDownload: function receiveTableDownload(data) {
      this.saveXlsx(data.xlsx, data.filename, data.contentType);
      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      OffersChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    exportData: function exportData() {
      if (!this.$refs.filter.validateFilter()) {
        return;
      }

      var filter = this.filtersMap();

      if (_lodash2.default.isNil(filter)) {
        alert('Selecione um filtro');
        return;
      }

      this.dataLoading = true;

      OffersChannel.push('exportData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    },
    filtersMap: function filtersMap() {
      var filter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(filter)) {
        return;
      }

      filter.dateStart = this.dateStart;

      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;

      filter.status = this.filterStatus;

      filter.enabled = this.enabledFilter;
      filter.restricted = this.restrictedFilter;
      filter.visible = this.visibleFilter;
      filter.hidden = this.hideFilter;
      filter.semesters = this.filterSemesters;

      return filter;
    },
    loadData: function loadData() {
      if (!this.$refs.filter.validateFilter()) {
        return;
      }

      var filter = this.filtersMap();

      if (_lodash2.default.isNil(filter)) {
        alert('Selecione um filtro');
        return;
      }

      this.dataLoading = true;
      this.tableData = [];
      this.hasNoData = false;
      this.dataLimit = false;

      OffersChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("INÍCIO APÓS")]),_c('br'),_vm._v(" "),_c('c-date-picker',{attrs:{"range":false,"shortcuts":_vm.shortcuts},model:{value:(_vm.dateStart),callback:function ($$v) {_vm.dateStart=$$v},expression:"dateStart"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-1 col-sm-3"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.enabledFilter),expression:"enabledFilter"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox","checked":""},domProps:{"checked":Array.isArray(_vm.enabledFilter)?_vm._i(_vm.enabledFilter,null)>-1:(_vm.enabledFilter)},on:{"change":function($event){var $$a=_vm.enabledFilter,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.enabledFilter=$$a.concat([$$v]))}else{$$i>-1&&(_vm.enabledFilter=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.enabledFilter=$$c}}}}),_c('label',[_vm._v("SOMENTE ATIVADAS")])])]),_vm._v(" "),_c('div',{staticClass:"col-md-1 col-sm-3"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.visibleFilter),expression:"visibleFilter"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox","checked":""},domProps:{"checked":Array.isArray(_vm.visibleFilter)?_vm._i(_vm.visibleFilter,null)>-1:(_vm.visibleFilter)},on:{"change":function($event){var $$a=_vm.visibleFilter,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.visibleFilter=$$a.concat([$$v]))}else{$$i>-1&&(_vm.visibleFilter=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.visibleFilter=$$c}}}}),_c('label',[_vm._v("SOMENTE VISÍVEIS")])])]),_vm._v(" "),_c('div',{staticClass:"col-md-1 col-sm-3"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.restrictedFilter),expression:"restrictedFilter"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.restrictedFilter)?_vm._i(_vm.restrictedFilter,null)>-1:(_vm.restrictedFilter)},on:{"change":function($event){var $$a=_vm.restrictedFilter,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.restrictedFilter=$$a.concat([$$v]))}else{$$i>-1&&(_vm.restrictedFilter=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.restrictedFilter=$$c}}}}),_c('label',[_vm._v("RESTRITAS")])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("STATUS")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.statusOptions,"label":"name","track-by":"id","placeholder":"Todos os status","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterStatus),callback:function ($$v) {_vm.filterStatus=$$v},expression:"filterStatus"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("SEMESTRE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.semesterOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os semestres","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterSemesters),callback:function ($$v) {_vm.filterSemesters=$$v},expression:"filterSemesters"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-1 col-sm-3"},[_c('div',{staticClass:"default-margin-top"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.hideFilter),expression:"hideFilter"}],staticStyle:{"margin-right":"5px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.hideFilter)?_vm._i(_vm.hideFilter,null)>-1:(_vm.hideFilter)},on:{"change":function($event){var $$a=_vm.hideFilter,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.hideFilter=$$a.concat([$$v]))}else{$$i>-1&&(_vm.hideFilter=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.hideFilter=$$c}}}}),_c('label',[_vm._v("ESCONDIDAS NA BUSCA")])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")]),_vm._v(" "),_c('button',{staticClass:"btn-submit default-margin-left",on:{"click":_vm.exportData}},[_vm._v("\n                  Exportar\n                ")])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Ofertas\n        ")]),_vm._v(" "),(_vm.dataLimit)?_c('div',{staticClass:"row"},[_vm._m(1)]):_vm._e(),_vm._v(" "),(_vm.hasNoData)?_c('div',{staticClass:"row"},[_vm._m(2)]):_vm._e(),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table data-table-tiny no-wrap",attrs:{"id":"offers-table"}},[_vm._m(3),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.course_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.offer_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.group_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.semester))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.enabled))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.visible))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.hide_prices))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.limited))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.restricted))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.start_date))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.end_date))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.discount_percentage))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.commercial_discount))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.regressive_commercial_discount))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campaign))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.full_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.offered_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.pre_enrollment_fees))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.total_seats))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.paid_seats))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.status))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.show_on_main_search))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.position))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.open_channel_type))])])}),0)])])]):_vm._e()])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Ofertas\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{staticStyle:{"color":"red","font-size":"18px"}},[_c('b',[_vm._v("O número de ofertas do filtro excede o limite de 5000 linhas. Use a opção de exportar para ter todos os resultados")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('b',[_vm._v("Nenhuma oferta encontrada para os filtros selecionados")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("ID Curso")]),_vm._v(" "),_c('th',[_vm._v("ID Oferta")]),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Grupo")]),_vm._v(" "),_c('th',[_vm._v("Nível")]),_vm._v(" "),_c('th',[_vm._v("Modalidade")]),_vm._v(" "),_c('th',[_vm._v("Turno")]),_vm._v(" "),_c('th',[_vm._v("Campus ID")]),_vm._v(" "),_c('th',[_vm._v("Campus")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Semestre")]),_vm._v(" "),_c('th',[_vm._v("Ativada")]),_vm._v(" "),_c('th',[_vm._v("Visível")]),_vm._v(" "),_c('th',[_vm._v("Ocultar preços")]),_vm._v(" "),_c('th',[_vm._v("Limitada")]),_vm._v(" "),_c('th',[_vm._v("Restrita")]),_vm._v(" "),_c('th',[_vm._v("Início")]),_vm._v(" "),_c('th',[_vm._v("Fim")]),_vm._v(" "),_c('th',[_vm._v("Desconto")]),_vm._v(" "),_c('th',[_vm._v("Desconto Comercial")]),_vm._v(" "),_c('th',[_vm._v("Desconto Comercial Regressivo")]),_vm._v(" "),_c('th',[_vm._v("Campanha")]),_vm._v(" "),_c('th',[_vm._v("Preço Cheio")]),_vm._v(" "),_c('th',[_vm._v("Preço Oferecido")]),_vm._v(" "),_c('th',[_vm._v("Preços de pré-matrícula")]),_vm._v(" "),_c('th',[_vm._v("Total de Bolsas")]),_vm._v(" "),_c('th',[_vm._v("Pagos")]),_vm._v(" "),_c('th',[_vm._v("Status")]),_vm._v(" "),_c('th',[_vm._v("On Search")]),_vm._v(" "),_c('th',[_vm._v("Position")]),_vm._v(" "),_c('th',[_vm._v("Canal Aberto")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-54d0d7e8", __vue__options__)
  } else {
    hotAPI.reload("data-v-54d0d7e8", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/paids-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      semesterOptions: [],
      kindOptions: [],
      levelOptions: [],
      blockCount: null,
      filterKinds: null,
      filterLevels: null,
      filterSemesters: [],

      dateRange: null,

      tableData: [],
      table: null,
      enabledFilter: true,
      visibleFilter: false,
      restrictedFilter: false,

      loadingFilters: true,
      dataLoading: false,
      semesterStart: null,
      semesterEnd: null,

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }]
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    PaidsChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    PaidsChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });

    this.loadFilters();
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityGroupOptions = data.groups;
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;
      this.semesterOptions = data.semester_options;

      this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)(this.semesterEnd).toDate()];

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this3 = this;

      console.log("receiveTableData#");
      this.tableData = data.paids;

      this.$nextTick(function () {
        _this3.table = new _datatable2.default('#paids-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30
        });
      });

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      PaidsChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      var filter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(filter)) {
        alert('Selecione um filtro');
        return;
      }
      if (!this.$refs.filter.validateFilter()) {
        return false;
      }
      this.dataLoading = true;
      this.tableData = [];
      this.blockCount = null;
      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      filter.initialDate = initialDate;
      filter.finalDate = finalDate;

      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;
      filter.semesters = this.filterSemesters;

      PaidsChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("DATA")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("SEMESTRE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.semesterOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os semestres","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterSemesters),callback:function ($$v) {_vm.filterSemesters=$$v},expression:"filterSemesters"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Resultados\n        ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table data-table-tiny",attrs:{"id":"paids-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.coupon_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coupon_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.cpf))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.telefone))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.email))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.position))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.full_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.offered_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.discount_percentage))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.fixed_discount_percentage))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.regressive_discount))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.punctuality_discount_percentage))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.enabled_at))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.name_course))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.max_periods))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.period_kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.enrollment_semester))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus_state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_full_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.educational_group))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.integration_step))])])}),0)])])]):_vm._e()])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel de Pagos\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("Cupom ID")]),_vm._v(" "),_c('th',[_vm._v("Nome")]),_vm._v(" "),_c('th',[_vm._v("CPF")]),_vm._v(" "),_c('th',[_vm._v("Telefone")]),_vm._v(" "),_c('th',[_vm._v("Email")]),_vm._v(" "),_c('th',[_vm._v("Preço")]),_vm._v(" "),_c('th',[_vm._v("Posição no Grupo")]),_vm._v(" "),_c('th',[_vm._v("Preço integral")]),_vm._v(" "),_c('th',[_vm._v("Preço oferecido")]),_vm._v(" "),_c('th',[_vm._v("Porcentagem de desconto Total")]),_vm._v(" "),_c('th',[_vm._v("Porcentagem de desconto Fixo (QB)")]),_vm._v(" "),_c('th',[_vm._v("Porcentagem de desconto Regressivo")]),_vm._v(" "),_c('th',[_vm._v("Porcentagem de desconto Antecipação/Pontualidade")]),_vm._v(" "),_c('th',[_vm._v("enabled_at")]),_vm._v(" "),_c('th',[_vm._v("Nome do curso")]),_vm._v(" "),_c('th',[_vm._v("Modalidade")]),_vm._v(" "),_c('th',[_vm._v("Turno")]),_vm._v(" "),_c('th',[_vm._v("Grau")]),_vm._v(" "),_c('th',[_vm._v("Períodos")]),_vm._v(" "),_c('th',[_vm._v("Tipo de contagem")]),_vm._v(" "),_c('th',[_vm._v("Semestre")]),_vm._v(" "),_c('th',[_vm._v("Nome do Campus")]),_vm._v(" "),_c('th',[_vm._v("Cidade do Campus")]),_vm._v(" "),_c('th',[_vm._v("Estado do Campus")]),_vm._v(" "),_c('th',[_vm._v("Universidade ID")]),_vm._v(" "),_c('th',[_vm._v("Nome da universidade")]),_vm._v(" "),_c('th',[_vm._v("Nome completo universidade")]),_vm._v(" "),_c('th',[_vm._v("Grupo Educacional")]),_vm._v(" "),_c('th',[_vm._v("Situação de integração")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-473446e0", __vue__options__)
  } else {
    hotAPI.reload("data-v-473446e0", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/panel-app.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _panelFilter = require('./panel-filter');

var _panelFilter2 = _interopRequireDefault(_panelFilter);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      colConfig: 6,
      currentData: [],
      hideSensitiveData: false,
      chartNameSufix: '',
      updateEnabled: true,

      universityVisitsChartAvailable: false,
      visitsChartAvailable: false,
      initiatedChartAvailable: false,
      paidsChartAvailable: false,
      incomeChartAvailable: false,
      velocityChartAvailable: false,
      ticketChartAvailable: false,
      meanIncomeChartAvailable: false,
      cumRevenueChartAvailable: false,
      refundCompareChartAvailable: false,
      refundPerPaidsCompareChartAvailable: false,
      bosCompareChartAvailable: false,
      bosPerPaidsCompareChartAvailable: false,

      movelMean: true,
      baseMetrics: ['ATRATIVIDADE', 'SUCESSO', 'CONVERSÃO', 'ORDENS INICIADAS', 'ORDENS PAGAS', 'ORDENS TROCADAS', 'VISITAS', 'RECEITA', 'RECEITA-QAP', 'VELOCIDADE', 'TICKET MÉDIO', 'FAT/ORDEM', 'BOS', 'REEMBOLSOS'],
      simplifiedMetrics: ['ATRATIVIDADE', 'SUCESSO', 'CONVERSÃO'],
      metrics: [],
      seriesMetrics: [],
      seriesNames: [],
      seriesChartData: [],
      filtersLoading: true,
      tableLoading: false,
      comparingMode: '',
      comparingOptions: [{
        name: 'Ano a Ano',
        type: 'year_to_year'
      }, {
        name: 'Site Todo',
        type: 'all_data'
      }, {
        name: 'Customizado',
        type: 'custom_compare'
      }, {
        name: 'Sem comparativo',
        type: 'no_compare'
      }],
      allCharts: []
    };
  },

  computed: {
    consolidatedButtonClass: function consolidatedButtonClass() {
      if (this.colConfig == 12) {
        return "clickable";
      }
      return "active-border clickable";
    },
    expandedButtonClass: function expandedButtonClass() {
      if (this.colConfig == 6) {
        return "clickable";
      }
      return "active-border clickable";
    },
    conversionChartClass: function conversionChartClass() {
      if (this.initiatedChartAvailable) {
        return 'col-md-' + this.colConfig + ' col-sm-12';
      }
      return 'col-md-12 col-sm-12';
    },
    chartClass: function chartClass() {
      return 'col-md-' + this.colConfig + ' col-sm-12';
    },
    hasData: function hasData() {
      return this.currentData.length > 0;
    },
    hasSerie: function hasSerie() {
      if (this.currentData.length < 1 || this.currentData.length > 0 && this.currentData[0].length == 0) {
        return false;
      }
      return true;
    },
    hasComparative: function hasComparative() {
      if (this.currentData.length < 2 || this.currentData.length > 1 && this.currentData[1].length == 0) {
        return false;
      }
      return true;
    },
    showComparingFilter: function showComparingFilter() {
      if (this.comparingMode == '') return false;
      return this.comparingMode.type == 'custom_compare';
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.metrics = this.simplifiedMetrics;
    this.comparingMode = this.comparingOptions[0];

    PanelChannel.on('chartData', function (payload) {
      return _this.receiveChardata(payload);
    });
    PanelChannel.on('filterData', function (payload) {
      return _this.receiveFilterdata(payload);
    });
    PanelChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    PanelChannel.on('citiesFilterData', function (payload) {
      return _this.receiveCitiesFilterData(payload);
    });
    PanelChannel.on('campusFilterData', function (payload) {
      return _this.receiveCampusFilterData(payload);
    });

    this.loadFilters();

    this.allCharts.push(this.$refs.atractionCompareChart);
    this.allCharts.push(this.$refs.successCompareChart);
    this.allCharts.push(this.$refs.incomeCompareChart);
    this.allCharts.push(this.$refs.ticketCompareChart);
    this.allCharts.push(this.$refs.meanIncomeCompareChart);
    this.allCharts.push(this.$refs.conversionCompareChart);
    this.allCharts.push(this.$refs.paidCompareChart);
    this.allCharts.push(this.$refs.initiatedCompareChart);
    this.allCharts.push(this.$refs.velocityCompareChart);
    this.allCharts.push(this.$refs.visitsCompareChart);
    this.allCharts.push(this.$refs.visitsUniversityCompareChart);
    this.allCharts.push(this.$refs.cumRevenueCompareChart);
    this.allCharts.push(this.$refs.refundCompareChart);
    this.allCharts.push(this.$refs.refundPerPaidsCompareChart);
    this.allCharts.push(this.$refs.bosCompareChart);
    this.allCharts.push(this.$refs.bosPerPaidsCompareChart);
    this.allCharts.push(this.$refs.incomeQapCompareChart);
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    ComparingChart: _comparingChart2.default,
    PanelFilter: _panelFilter2.default
  },
  props: ['managingUser'],
  methods: {
    toggleMovelMean: function toggleMovelMean() {
      this.movelMean = !this.movelMean;
    },
    consolidatedCharts: function consolidatedCharts() {
      this.colConfig = 6;
    },
    expandedCharts: function expandedCharts() {
      this.colConfig = 12;
    },
    emptyNull: function emptyNull(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      return value;
    },
    exportData: function exportData(index, name) {
      var _this2 = this;

      var filename = name + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
      var content = "Data;Atratividade;Sucesso;Conversao;Ordens Inciadas;Ordens Pagas;Visitas Ofertas;Receita;Velocidade;Ticket Medio;Fat Ordem;Visitas IES\n";
      _lodash2.default.each(this.currentData[index].orders_dates, function (item, itemIndex) {
        var velocity = null;
        if (!_lodash2.default.isNil(_this2.currentData[index].velocity)) {
          velocity = _this2.currentData[index].velocity[itemIndex];
        }
        content = content + item + ";" + _this2.emptyNull(_this2.currentData[index].atraction_rate[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].success_rate[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].conversion_rate[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].initiateds[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].paids[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].visits[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].income[itemIndex]) + ";" + _this2.emptyNull(velocity) + ";" + _this2.emptyNull(_this2.currentData[index].ticket[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].mean_income[itemIndex]) + ";" + _this2.emptyNull(_this2.currentData[index].university_visits[itemIndex]) + "\n";
      });

      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    },
    hideCharts: function hideCharts() {
      this.universityVisitsChartAvailable = false;
      this.visitsChartAvailable = false;
      this.initiatedChartAvailable = false;
      this.paidsChartAvailable = false;
      this.incomeChartAvailable = false;
      this.velocityChartAvailable = false;
      this.ticketChartAvailable = false;
      this.meanIncomeChartAvailable = false;
      this.cumRevenueChartAvailable = false;
      this.refundCompareChartAvailable = false;
      this.refundPerPaidsCompareChartAvailable = false;
      this.bosCompareChartAvailable = false;
      this.bosPerPaidsCompareChartAvailable = false;
    },
    compareSelected: function compareSelected(data) {
      console.log("compareSelected: data: " + (0, _stringify2.default)(data));
      if (data.type == 'year_to_year') {
        this.syncComparingFilters();
      } else {
        if (data.type == 'all_data') {
          console.log("compare all data");
          this.syncBaseComparingFilters();
          this.$refs.comparingFilter.clearPrimaryFilters();
        }
        this.$refs.comparingFilter.setDateRange(this.$refs.currentFilter.dateRange);
      }
    },
    syncComparingFilters: function syncComparingFilters() {
      this.syncBaseComparingFilters();
      this.$refs.comparingFilter.setPrimaryFilters(this.$refs.currentFilter.baseFiltersList());
      this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(this.$refs.currentFilter.dateRange[0]).subtract(12, 'months').toDate(), (0, _moment2.default)(this.$refs.currentFilter.dateRange[1]).subtract(12, 'months').toDate()]);
    },
    syncBaseComparingFilters: function syncBaseComparingFilters() {
      this.$refs.comparingFilter.setFilterKinds(this.$refs.currentFilter.filterKinds);
      this.$refs.comparingFilter.setFilterLevels(this.$refs.currentFilter.filterLevels);
      this.$refs.comparingFilter.setLocationValue(this.$refs.currentFilter.locationType, this.$refs.currentFilter.locationValue());
    },
    currentKindSelected: function currentKindSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setFilterKinds(data);
    },
    currentProductLineSelectionTypeSelected: function currentProductLineSelectionTypeSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setProductLineSelectionType(data);
    },
    currentProductLineSelected: function currentProductLineSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setProductLineFilter(data);
    },
    currentLevelSelected: function currentLevelSelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setFilterLevels(data);
    },
    currentRangeSelected: function currentRangeSelected(data) {
      if (this.comparingMode.type == 'custom_compare' || this.comparingMode.type == 'all_data') {
        this.$refs.comparingFilter.setDateRange(data);
      } else {
        this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(data[0]).subtract(12, 'months').toDate(), (0, _moment2.default)(data[1]).subtract(12, 'months').toDate()]);
      }
    },
    currentPrimarySelected: function currentPrimarySelected(data) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      if (this.comparingMode.type == 'all_data') {
        return;
      }
      this.$refs.comparingFilter.setPrimaryFilters(data);
    },
    currentLocationTypeSelected: function currentLocationTypeSelected(data, index) {
      console.log("currentLocationTypeSelected type: " + data.type + " index: " + index);

      if (data.type == 'city' || data.type == 'campus') {
        var filterObject = index == 0 ? this.$refs.currentFilter : this.$refs.comparingFilter;
        var filter = filterObject.filterData(true);

        if (filter) {
          filterObject.setCitiesLoading();
          filterObject.setCampusLoading();

          filter.completeField = data.type;
          filter.index = index;

          PanelChannel.push('filterComplete', filter).receive('ok', function () {
            console.log('filterComplete OK');
          });
        }
      }
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setLocationType(data);
    },
    currentLocationSelected: function currentLocationSelected(type, value) {
      if (this.comparingMode.type == 'custom_compare') {
        return;
      }
      this.$refs.comparingFilter.setLocationValue(type, value);
    },
    addFilter: function addFilter() {
      this.filters.push(this.filterIndex);
      this.filterIndex = this.filterIndex + 1;
    },
    removeFilter: function removeFilter(index) {
      this.filters.splice(this.filters.indexOf(index), 1);
    },
    loadFilters: function loadFilters() {
      var _this3 = this;

      this.filtersLoading = true;
      PanelChannel.push('loadFilters').receive('ok', function (data) {
        console.log("loadFilters OK");
      }).receive("error", function (data) {
        _this3.filtersLoading = false;
        console.log("loadFilters ERROR");
      }).receive("timeout", function (data) {
        _this3.filtersLoading = false;
        console.log("loadFilters TIMEOUT");
      });
    },
    update: function update() {
      var currentFilter = this.$refs.currentFilter.filterData();
      if (!currentFilter) {
        console.log("currentFilter vazio");
        return;
      }

      console.log("this.managingUser");
      if (this.managingUser) {
        this.hideSensitiveData = false;
        this.metrics = _lodash2.default.cloneDeep(this.baseMetrics);
      } else {
        if (this.comparingMode.type == 'custom_compare' || this.comparingMode.type == 'all_data') {
          this.hideSensitiveData = true;
          this.metrics = _lodash2.default.cloneDeep(this.simplifiedMetrics);
        } else {
          this.hideSensitiveData = false;
          this.metrics = _lodash2.default.cloneDeep(this.baseMetrics);
        }
      }

      if (this.comparingMode.type == 'all_data') {
        this.metrics.splice(3, 0, 'SHARE VISITAS');
        this.metrics.splice(3, 0, 'SHARE PAGOS');
        this.metrics.splice(3, 0, 'SHARE ORDENS');
      }

      var filter = { currentFilter: currentFilter };
      if (this.comparingMode.type != 'no_compare') {
        var comparingFilter = this.$refs.comparingFilter.filterData();
        if (!comparingFilter) {
          console.log("comparingFilter vazio");
        } else {
          filter.comparingFilter = comparingFilter;
        }
      }

      this.currentData = [];
      filter.comparingMode = this.comparingMode.type;

      console.log("FULL_FILTER: " + (0, _stringify2.default)(filter));

      this.seriesMetrics = [];
      this.seriesNames = [];

      this.hideCharts();

      _lodash2.default.forEach(this.allCharts, function (chart) {
        chart.setLoader();
        chart.clearSeries();
      });

      this.tableLoading = true;
      this.updateEnabled = false;

      PanelChannel.push('filter', filter).receive('ok', function (data) {
        console.log("response OK");
      }).receive('timeout', function (data) {
        console.log("update timeout");
      }).receive('error', function (data) {
        console.log("update error");
      });
    },
    receiveCitiesFilterData: function receiveCitiesFilterData(data) {
      if (data.index == 0) {
        this.$refs.currentFilter.setCities(data.cities);
      } else {
        this.$refs.comparingFilter.setCities(data.cities);
      }
    },
    receiveCampusFilterData: function receiveCampusFilterData(data) {
      if (data.index == 0) {
        this.$refs.currentFilter.setCampus(data.campus);
      } else {
        this.$refs.comparingFilter.setCampus(data.campus);
      }
    },
    receiveFilterdata: function receiveFilterdata(data) {
      this.$refs.currentFilter.setLevels(data.levels);
      this.$refs.currentFilter.setKinds(data.kinds);
      this.$refs.currentFilter.setLocations(data.locationTypes);
      this.$refs.currentFilter.setGroups(data.groupTypes);
      this.$refs.currentFilter.setAccountTypes(data.accountTypes);
      this.$refs.currentFilter.setUniversities(data.universities);
      this.$refs.currentFilter.setUniversityGroups(data.groups);
      this.$refs.currentFilter.setSemesterRange(data.semesterStart, data.semesterEnd);
      this.$refs.currentFilter.setDealOwners(data.dealOwners);
      this.$refs.currentFilter.setQualityOwners(data.qualityOwners);
      this.$refs.currentFilter.setRegions(data.regions);
      this.$refs.currentFilter.setStates(data.states);
      this.$refs.currentFilter.setProductLines(data.product_lines);
      this.$refs.currentFilter.setCities([]);
      this.$refs.currentFilter.setCampus([]);

      this.$refs.comparingFilter.setLevels(data.levels);
      this.$refs.comparingFilter.setKinds(data.kinds);
      this.$refs.comparingFilter.setLocations(data.locationTypes);
      this.$refs.comparingFilter.setGroups(data.groupTypes);
      this.$refs.comparingFilter.setAccountTypes(data.accountTypes);
      this.$refs.comparingFilter.setUniversities(data.universities);
      this.$refs.comparingFilter.setUniversityGroups(data.groups);
      this.$refs.comparingFilter.setSemesterRange(data.semesterStart, data.semesterEnd);
      this.$refs.comparingFilter.setDealOwners(data.dealOwners);
      this.$refs.comparingFilter.setQualityOwners(data.qualityOwners);
      this.$refs.comparingFilter.setRegions(data.regions);
      this.$refs.comparingFilter.setStates(data.states);
      this.$refs.comparingFilter.setProductLines(data.product_lines);
      this.$refs.comparingFilter.setCities([]);
      this.$refs.comparingFilter.setCampus([]);

      this.$refs.comparingFilter.setDateRange([(0, _moment2.default)(data.semesterStart).subtract(12, 'months').toDate(), (0, _moment2.default)(data.semesterEnd).subtract(12, 'months').toDate()]);

      this.filtersLoading = false;
    },
    receiveChardata: function receiveChardata(data) {
      var _this4 = this;

      console.log("receiveChardata# hideSensitiveData: " + this.hideSensitiveData + " index: " + data.index);

      if (!this.hideSensitiveData) {
        if (data.initiateds.length > 0) {
          this.initiatedChartAvailable = true;
        }
        if (data.paids.length > 0) {
          this.paidsChartAvailable = true;
        }
        if (data.income.length > 0) {
          this.incomeChartAvailable = true;
        }
        if (data.velocity.length > 0) {
          this.velocityChartAvailable = true;
        }
        if (data.visits.length > 0) {
          this.visitsChartAvailable = true;
        }
        if (data.university_visits.length > 0) {
          this.universityVisitsChartAvailable = true;
        }
        if (data.mean_income.length > 0) {
          this.meanIncomeChartAvailable = true;
        }
        if (data.ticket.length > 0) {
          this.ticketChartAvailable = true;
        }
        if (data.cum_revenue.length > 0) {
          this.cumRevenueChartAvailable = true;
        }

        if (data.refundeds.length > 0) {
          this.refundCompareChartAvailable = true;
        }
        if (data.refundeds_per_paids.length > 0) {
          this.refundPerPaidsCompareChartAvailable = true;
        }
        if (data.bos.length > 0) {
          this.bosCompareChartAvailable = true;
        }
        if (data.bos_per_paids.length > 0) {
          this.bosPerPaidsCompareChartAvailable = true;
        }
      }

      var nameSufix = '';
      if (data.index == 0) {
        this.$refs.velocityCompareChart.setLabels(data.dates);
        this.$refs.visitsUniversityCompareChart.setLabels(data.dates);
        this.$refs.cumRevenueCompareChart.setLabels(data.dates);
        this.$refs.initiatedCompareChart.setLabels(data.orders_dates);
        this.$refs.paidCompareChart.setLabels(data.orders_dates);
        this.$refs.conversionCompareChart.setLabels(data.orders_dates);
        this.$refs.meanIncomeCompareChart.setLabels(data.orders_dates);
        this.$refs.ticketCompareChart.setLabels(data.orders_dates);
        this.$refs.incomeCompareChart.setLabels(data.orders_dates);
        this.$refs.successCompareChart.setLabels(data.orders_dates);
        this.$refs.atractionCompareChart.setLabels(data.orders_dates);
        this.$refs.visitsCompareChart.setLabels(data.orders_dates);
        this.$refs.refundCompareChart.setLabels(data.orders_dates);
        this.$refs.refundPerPaidsCompareChart.setLabels(data.orders_dates);
        this.$refs.bosCompareChart.setLabels(data.orders_dates);
        this.$refs.bosPerPaidsCompareChart.setLabels(data.orders_dates);
        this.$refs.incomeQapCompareChart.setLabels(data.orders_dates);

        nameSufix = this.$refs.currentFilter.baseFiltersCaption();
        if (this.seriesNames.length == 0) {
          this.seriesNames.push(nameSufix);
        } else {
          this.seriesNames[0] = nameSufix;
        }
      } else if (data.index == 1) {
        if (this.comparingMode.type == 'year_to_year') {
          nameSufix = 'Ano Anterior';
        } else {
          nameSufix = this.$refs.comparingFilter.baseFiltersCaption();
        }
        if (this.seriesNames.length == 1) {
          this.seriesNames.push(nameSufix);
        } else {
          this.seriesNames[1] = nameSufix;
        }
      }

      if (this.movelMean) {
        this.chartNameSufix = '- ( janela móvel de 7 dias )';
        this.setSeriesData(data, data.index, nameSufix);
      } else {
        this.chartNameSufix = '';
        this.setSeriesData(data.raw_data, data.index, nameSufix);
      }

      if (data.index === 0) {
        this.setCumRevenueSeries(data, nameSufix);
        if (this.comparingMode.type == 'no_compare') {
          this.updateEnabled = true;
        }
      }

      if (data.index == 1) {
        this.updateEnabled = true;
      }

      this.$nextTick(function () {
        _this4.updateCharts();
      });
      console.log("receiveChardata# SAIDA");
    },
    updateCharts: function updateCharts() {
      _lodash2.default.forEach(this.allCharts, function (chart) {
        chart.updateChart();
      });
    },
    setCumRevenueSeries: function setCumRevenueSeries(data, nameSufix) {
      this.$refs.cumRevenueCompareChart.setSeries(0, data.cum_revenue, "RECEITA ACUMULADA " + nameSufix);
      this.$refs.cumRevenueCompareChart.resetLoader();

      this.$refs.cumRevenueCompareChart.setSeries(1, data.cum_goal, "META ACUMULADA " + nameSufix);
      this.$refs.cumRevenueCompareChart.resetLoader();
    },
    saveCurrentData: function saveCurrentData(data, index) {
      while (this.currentData.length <= index) {
        this.currentData.push([]);
      }
      this.currentData.splice(index, 1, data);
    },
    setSeriesData: function setSeriesData(data, index, nameSufix) {
      this.saveCurrentData(data, index);

      this.$refs.velocityCompareChart.setSeries(index, data.velocity, "VELOCIMETRO " + nameSufix);
      this.$refs.velocityCompareChart.resetLoader();

      this.$refs.incomeQapCompareChart.setSeries(index, data.income_qap, "RECEITA-QAP " + nameSufix);
      this.$refs.incomeQapCompareChart.resetLoader();

      this.$refs.initiatedCompareChart.setSeries(index, data.initiateds, "ORDENS INICIADAS " + nameSufix);
      this.$refs.initiatedCompareChart.resetLoader();

      this.$refs.paidCompareChart.setSeries(index, data.paids, "ORDENS PAGAS " + nameSufix);
      this.$refs.paidCompareChart.resetLoader();

      this.$refs.conversionCompareChart.setSeries(index, data.conversion_rate, "CONVERSÃO " + nameSufix);
      this.$refs.conversionCompareChart.resetLoader();

      this.$refs.meanIncomeCompareChart.setSeries(index, data.mean_income, "FATURAMENTO/ORDEM " + nameSufix);
      this.$refs.meanIncomeCompareChart.resetLoader();

      this.$refs.ticketCompareChart.setSeries(index, data.ticket, "TICKET MÉDIO " + nameSufix);
      this.$refs.ticketCompareChart.resetLoader();

      this.$refs.incomeCompareChart.setSeries(index, data.income, "RECEITA " + nameSufix);
      this.$refs.incomeCompareChart.resetLoader();

      this.$refs.successCompareChart.setSeries(index, data.success_rate, "TAXA DE SUCESSO " + nameSufix);
      this.$refs.successCompareChart.resetLoader();

      this.$refs.atractionCompareChart.setSeries(index, data.atraction_rate, "TAXA DE ATRATIVIDADE " + nameSufix);
      this.$refs.atractionCompareChart.resetLoader();

      this.$refs.visitsCompareChart.setSeries(index, data.visits, "VISITAS " + nameSufix);
      this.$refs.visitsCompareChart.resetLoader();

      this.$refs.visitsUniversityCompareChart.setSeries(index, data.university_visits, "VISITAS UNIVERSIDADE " + nameSufix);
      this.$refs.visitsUniversityCompareChart.resetLoader();

      this.$refs.refundCompareChart.setSeries(index, data.refundeds, "REEMBOLSOS " + nameSufix);
      this.$refs.refundCompareChart.resetLoader();

      this.$refs.refundPerPaidsCompareChart.setSeries(index, data.refundeds_per_paids, "REEMBOLSOS POR PAGOS " + nameSufix);
      this.$refs.refundPerPaidsCompareChart.resetLoader();

      this.$refs.bosCompareChart.setSeries(index, data.bos, "BO's " + nameSufix);
      this.$refs.bosCompareChart.resetLoader();

      this.$refs.bosPerPaidsCompareChart.setSeries(index, data.bos_per_paids, "BO's POR PAGOS " + nameSufix);
      this.$refs.bosPerPaidsCompareChart.resetLoader();
    },
    receiveTableData: function receiveTableData(data) {
      this.tableLoading = false;
      console.log("receiveTableData# index: " + data.index + " position: " + data.position);
      while (this.seriesMetrics.length <= data.index) {
        this.seriesMetrics.push([]);
      }
      var currentSeries = this.seriesMetrics[data.index];
      while (currentSeries.length <= data.position) {
        currentSeries.push({ name: '-', serie: [], base_serie: [] });
      }

      if (this.comparingMode.type == 'all_data') {
        data.serie.splice(3, 0, '-');
        data.serie.splice(3, 0, '-');
        data.serie.splice(3, 0, '-');
      }

      currentSeries.splice(data.position, 1, data);

      if (this.comparingMode.type == 'all_data') {
        var otherIndex = 1 - data.index;
        if (this.seriesMetrics.length > otherIndex) {
          var ordersShare = this.seriesMetrics[0][data.position].base_serie[3] / this.seriesMetrics[1][data.position].base_serie[3];
          var paidsShare = this.seriesMetrics[0][data.position].base_serie[4] / this.seriesMetrics[1][data.position].base_serie[4];
          var visitsShare = this.seriesMetrics[0][data.position].base_serie[6] / this.seriesMetrics[1][data.position].base_serie[6];

          this.seriesMetrics[0][data.position].serie[3] = (ordersShare * 100).toFixed(2) + ' %';
          this.seriesMetrics[0][data.position].serie[4] = (paidsShare * 100).toFixed(2) + ' %';
          this.seriesMetrics[0][data.position].serie[5] = (visitsShare * 100).toFixed(2) + ' %';
        }
      }
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[(_vm.filtersLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-filter',{ref:"currentFilter",attrs:{"period-disabled":false,"index":"0"},on:{"primaryFilterSelected":_vm.currentPrimarySelected,"locationTypeSelected":_vm.currentLocationTypeSelected,"locationSelected":_vm.currentLocationSelected,"timeRangeSelected":_vm.currentRangeSelected,"kindSelected":_vm.currentKindSelected,"levelSelected":_vm.currentLevelSelected,"productLineSelected":_vm.currentProductLineSelected,"productLineSelectionTypeSelected":_vm.currentProductLineSelectionTypeSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-12"},[_c('div',[_c('label',[_vm._v("COMPARATIVO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.comparingOptions,"allowEmpty":false,"label":"name","track-by":"type","placeholder":"Selecione o comparativo","selectLabel":"Enter para selecionar","deselectLabel":""},on:{"input":_vm.compareSelected},model:{value:(_vm.comparingMode),callback:function ($$v) {_vm.comparingMode=$$v},expression:"comparingMode"}})],1)])])])]),_vm._v(" "),_c('panel-filter',{directives:[{name:"show",rawName:"v-show",value:(_vm.showComparingFilter),expression:"showComparingFilter"}],ref:"comparingFilter",attrs:{"period-disabled":true,"index":"1"},on:{"locationTypeSelected":_vm.currentLocationTypeSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",attrs:{"enabled":_vm.updateEnabled},on:{"click":_vm.update}},[_vm._v("\n                  Atualizar\n                ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"default-margin-left"},[_c('div',{staticClass:"dropdown",attrs:{"data-ref":"export-data"}},[_vm._m(1),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu"},[_c('li',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasSerie),expression:"hasSerie"}]},[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.exportData('0', 'dashboard')}}},[_vm._v("Série")])]),_vm._v(" "),_c('li',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasComparative),expression:"hasComparative"}]},[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.exportData(1, 'comparativo')}}},[_vm._v("Comparativo")])])])])]):_vm._e(),_vm._v(" "),_c('div',{staticStyle:{"justify-content":"flex-end","margin-left":"50px"}},[_c('div',{class:_vm.consolidatedButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:" glyphicon glyphicon-barcode",attrs:{"title":"Gráficos lado a lado"},on:{"click":_vm.consolidatedCharts}})]),_vm._v(" "),_c('div',{class:_vm.expandedButtonClass,staticStyle:{"display":"inline","padding":"3px"}},[_c('span',{staticClass:"glyphicon glyphicon-book",attrs:{"title":"Gráficos em linhas"},on:{"click":_vm.expandedCharts}})])]),_vm._v(" "),_c('div',{staticClass:"small-margin-left"},[_c('div',{staticClass:"dropdown",staticStyle:{"border":"none !important"},attrs:{"data-ref":"export-data"}},[_vm._m(2),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu"},[_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.toggleMovelMean()}}},[(_vm.movelMean)?_c('span',{staticClass:"glyphicon glyphicon-check float-right"}):_vm._e(),_vm._v(" Média móvel")])])])])])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("CONSOLIDADO")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[(_vm.tableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('table',{staticClass:"data-table data-table-tiny"},[_c('thead',[(_vm.seriesNames[0] && _vm.seriesMetrics[0])?_c('tr',[_c('th'),_vm._v(" "),_c('th',{attrs:{"colspan":_vm.seriesMetrics[0].length}},[_vm._v(_vm._s(_vm.seriesNames[0]))]),_vm._v(" "),(_vm.seriesMetrics[1])?[_c('th',{staticStyle:{"width":"200px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',{attrs:{"colspan":_vm.seriesMetrics[1].length}},[_vm._v(_vm._s(_vm.seriesNames[1]))])]:_vm._e()],2):_vm._e(),_vm._v(" "),_c('tr',[_c('th'),_vm._v(" "),_vm._l((_vm.seriesMetrics[0]),function(serie){return _c('th',[_vm._v("\n                        "+_vm._s(serie.name)+"\n                      ")])}),_vm._v(" "),(_vm.seriesNames[1])?[_c('th',{staticStyle:{"background-color":"#3B4347"}}),_vm._v(" "),_vm._l((_vm.seriesMetrics[1]),function(serie){return _c('th',[_vm._v("\n                          "+_vm._s(serie.name)+"\n                        ")])})]:_vm._e()],2)]),_vm._v(" "),_c('tbody',_vm._l((_vm.metrics),function(metric,index){return _c('tr',[_c('td',[_vm._v(_vm._s(metric))]),_vm._v(" "),_vm._l((_vm.seriesMetrics[0]),function(serie){return _c('td',[_vm._v("\n                        "+_vm._s(serie.serie[index])+"\n                      ")])}),_vm._v(" "),(_vm.seriesNames[1])?[_c('td'),_vm._v(" "),_vm._l((_vm.seriesMetrics[1]),function(serie){return _c('td',[_vm._v("\n                          "+_vm._s(serie.serie[index])+"\n                        ")])})]:_vm._e()],2)}),0)])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("TAXA DE ATRATIVIDADE (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"atractionCompareChart",attrs:{"export-name":"taxa_atratividade"}})],1)]),_vm._v(" "),_c('div',{class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("TAXA DE SUCESSO (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"successCompareChart",attrs:{"export-name":"taxa_sucesso"}})],1)]),_vm._v(" "),_c('div',{class:_vm.conversionChartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("CONVERSÃO (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"conversionCompareChart",attrs:{"export-name":"taxa_conversao"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.initiatedChartAvailable),expression:"initiatedChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("ORDENS INICIADAS "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"initiatedCompareChart",attrs:{"export-name":"ordens_iniciadas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.paidsChartAvailable),expression:"paidsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("ORDENS PAGAS "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"paidCompareChart",attrs:{"export-name":"ordens_pagas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.visitsChartAvailable),expression:"visitsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VISITAS EM PÁGINAS DE OFERTA "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"visitsCompareChart",attrs:{"export-name":"visitas_ofertas"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.universityVisitsChartAvailable),expression:"universityVisitsChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VISITAS PÁGINA DA UNIVERSIDADE "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"visitsUniversityCompareChart",attrs:{"export-name":"visitas_universidade"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.incomeChartAvailable),expression:"incomeChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA (R$) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"incomeCompareChart",attrs:{"export-name":"receita"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.velocityChartAvailable),expression:"velocityChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VELOCIMETRO (%) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"velocityCompareChart",attrs:{"export-name":"velocimetro"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.velocityChartAvailable),expression:"velocityChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA-QAP (R$) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"incomeQapCompareChart",attrs:{"export-name":"receita_qap"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.ticketChartAvailable),expression:"ticketChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("TICKET MEDIO (R$) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"ticketCompareChart",attrs:{"export-name":"ticket_medio"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.meanIncomeChartAvailable),expression:"meanIncomeChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("FAT/ORDEM (R$) "+_vm._s(_vm.chartNameSufix))]),_vm._v(" "),_c('comparing-chart',{ref:"meanIncomeCompareChart",attrs:{"export-name":"fat_ordem"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.cumRevenueChartAvailable),expression:"cumRevenueChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA ACUMULADA (%)")]),_vm._v(" "),_c('comparing-chart',{ref:"cumRevenueCompareChart",attrs:{"export-name":"receita_acumulada"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.refundCompareChartAvailable),expression:"refundCompareChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("REEMBOLSOS")]),_vm._v(" "),_c('comparing-chart',{ref:"refundCompareChart",attrs:{"export-name":"reembolsos"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.refundPerPaidsCompareChartAvailable),expression:"refundPerPaidsCompareChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("REEMBOLSO / PAGOS ( acumulado no período )")]),_vm._v(" "),_c('comparing-chart',{ref:"refundPerPaidsCompareChart",attrs:{"export-name":"reembolsos_por_pagos"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.bosCompareChartAvailable),expression:"bosCompareChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("BOS")]),_vm._v(" "),_c('comparing-chart',{ref:"bosCompareChart",attrs:{"export-name":"bos"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.bosPerPaidsCompareChartAvailable),expression:"bosPerPaidsCompareChartAvailable"}],class:_vm.chartClass},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("BOS / PAGOS ( acumulado no período )")]),_vm._v(" "),_c('comparing-chart',{ref:"bosPerPaidsCompareChart",attrs:{"export-name":"bos_por_pagos"}})],1)])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Dashboard comparativo\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dropdown-toggle",attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"flex-grow dropdown-label",staticStyle:{"margin-right":"5px"}},[_vm._v("Exportar")]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-chevron-down float-right"})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"dropdown-toggle",attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"flex-grow dropdown-label",staticStyle:{"margin-right":"5px"}},[_vm._v("Opções")]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-chevron-down float-right"})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-f2fc6dec", __vue__options__)
  } else {
    hotAPI.reload("data-v-f2fc6dec", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/panel-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _vue2Datepicker = require('vue2-datepicker');

var _vue2Datepicker2 = _interopRequireDefault(_vue2Datepicker);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _queryString = require('../js/query-string');

var _queryString2 = _interopRequireDefault(_queryString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(31, 'days').toDate(), (0, _moment2.default)().subtract(1, 'days').toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          console.log("START: " + (0, _moment2.default)().subtract(8, 'days').startOf('day').toDate());
          _this.dateRange = [(0, _moment2.default)().subtract(8, 'days').startOf('day').toDate(), (0, _moment2.default)().subtract(1, 'days').startOf('day').toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }],
      lang: {
        days: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],
        months: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
        placeholder: {
          date: 'Data',
          dateRange: 'Período'
        }
      },

      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      groupOptions: [],
      universityOptions: [],
      farmRegionOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      qualityOwnerOptions: [],
      accountTypeOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      productLineOptions: [],

      citiesSugestions: [],

      filterIndex: 1,
      filters: [],

      dateRange: '',
      filterKinds: [],
      filterLevels: [],
      locationType: '',
      locationRegion: '',
      locationState: '',
      locationCity: '',
      locationCampus: '',
      groupType: '',
      universityFilter: '',
      universityGroupFilter: '',
      accountTypeFilter: '',
      dealOwnerFilter: '',
      filterProductLine: null,

      cityFilterLoading: false,
      campusFilterLoading: false,
      productLineSelectionType: 'product_line'
    };
  },

  props: ['index', 'periodDisabled', 'filterDisabled'],
  components: {
    DatePicker: _vue2Datepicker2.default,
    Multiselect: _vueMultiselect2.default,
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default
  },
  watch: {
    citiesOptions: function citiesOptions(value) {
      this.citiesSugestions = this.citiesOptions;
    },
    productLineSelectionType: function productLineSelectionType(value) {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.$emit('productLineSelectionTypeSelected', _this2.productLineSelectionType);
      });
    }
  },
  computed: {
    showProductLineSelection: function showProductLineSelection() {
      return this.productLineSelectionType == "product_line";
    },
    showKindAndLevelSelection: function showKindAndLevelSelection() {
      return this.productLineSelectionType == "kind_and_level" || this.productLineOptions.length == 0;
    },
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 0;
    },
    regionFilter: function regionFilter() {
      if (!this.locationType) {
        return false;
      }
      return this.locationType.type == 'region';
    },
    stateFilter: function stateFilter() {
      if (!this.locationType) {
        return false;
      }
      return this.locationType.type == 'state';
    },
    cityFilter: function cityFilter() {
      if (!this.locationType) {
        return false;
      }
      return this.locationType.type == 'city';
    },
    campusFilter: function campusFilter() {
      if (!this.locationType) {
        return false;
      }
      return this.locationType.type == 'campus';
    }
  },
  methods: {
    citySearch: function citySearch(data, id) {
      if (data == '') {
        this.citiesSugestions = this.citiesOptions;
        return;
      }
      var filteredData = data.normalize('NFD').replace(/[\u0300-\u036f]/g, "");
      this.citiesSugestions = this.citiesOptions.filter(function (item_data) {
        return item_data.name.normalize('NFD').replace(/[\u0300-\u036f]/g, "").toUpperCase().includes(filteredData.toUpperCase());
      });
    },
    kindValueSelected: function kindValueSelected(data) {
      var _this3 = this;

      this.$nextTick(function () {
        _this3.$emit('kindSelected', _this3.filterKinds);
      });
    },
    levelValueSelected: function levelValueSelected(data) {
      var _this4 = this;

      this.$nextTick(function () {
        _this4.$emit('levelSelected', _this4.filterLevels);
      });
    },
    productLineSelected: function productLineSelected(data) {
      var _this5 = this;

      this.$nextTick(function () {
        _this5.$emit('productLineSelected', _this5.filterProductLine);
      });
    },
    timeRangeSelected: function timeRangeSelected(data) {
      this.$emit('timeRangeSelected', data);
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      var _this6 = this;

      console.log("primaryFilterSelected");
      this.$nextTick(function () {
        _this6.$emit("primaryFilterSelected", _this6.baseFiltersList());
      });
    },
    addFilter: function addFilter() {
      this.filters.push(this.filterIndex);
      this.filterIndex = this.filterIndex + 1;
    },
    removeFilter: function removeFilter(index) {
      this.filters.splice(this.filters.indexOf(index), 1);
    },
    locationValueRemoved: function locationValueRemoved() {
      var _this7 = this;

      this.$nextTick(function () {
        console.log("locationValueRemoved# TYPE: " + (0, _stringify2.default)(_this7.locationType) + " VAL: " + (0, _stringify2.default)(_this7.locationValue()));
        _this7.$emit("locationRemoved", _this7.locationType, _this7.locationValue());
      });
    },
    locationValueSelected: function locationValueSelected() {
      var _this8 = this;

      this.$nextTick(function () {
        _this8.$emit("locationSelected", _this8.locationType, _this8.locationValue());
      });
    },
    locationTypeSelected: function locationTypeSelected(data) {
      var _this9 = this;

      console.log("locationTypeSelected# " + (0, _stringify2.default)(data));
      this.$nextTick(function () {
        _this9.$emit("locationTypeSelected", _this9.locationType, _this9.index);
      });
    },
    getLocationType: function getLocationType() {
      return this.locationType;
    },
    locationValue: function locationValue() {
      if (this.locationType) {
        var locationType = this.locationType.type;
        if (locationType == "region") {
          return this.locationRegion;
        } else if (locationType == "state") {
          return this.locationState;
        } else if (locationType == "city") {
          return this.locationCity;
        } else if (locationType == "campus") {
          return this.locationCampus;
        }
      }
      return;
    },
    verifyBaseFilters: function verifyBaseFilters(baseFilters, omitValidation) {
      if (baseFilters.length == 0) {
        if (!omitValidation) {
          alert('Selecione pelo menos um filtro');
        }
        return false;
      }
      for (var i = 0; i < baseFilters.length; i++) {
        var temDimensao = false;
        if (!_lodash2.default.isNil(baseFilters[i].value)) {
          if (!_lodash2.default.isNil(baseFilters[i].value.length)) {
            temDimensao = true;
          }
        }

        if (baseFilters[i].type == '') continue;
        if (!temDimensao) {
          if (!baseFilters[i].value) {
            if (!omitValidation) {
              alert('Selecione o valor para o filtro ' + baseFilters[i].name);
            }
            return false;
          } else {
            if (!baseFilters[i].value.id) {
              if (!omitValidation) {
                alert('Selecione o valor para o filtro ' + baseFilters[i].name);
              }
              return false;
            }
          }
        } else {
          if (baseFilters[i].value.length == 0) {
            if (!omitValidation) {
              alert('Selecione o valor para o filtro ' + baseFilters[i].name);
            }
            return false;
          }
        }
      }
      return true;
    },
    verifyFilters: function verifyFilters(omitValidation) {
      if (omitValidation) {
        return true;
      }
      if (this.dateRange === '' || _lodash2.default.isNil(this.dateRange)) {
        if (!omitValidation) {
          alert('Preencha o período');
        }
        return false;
      }
      if (this.dateRange[0] == 'Invalid Date' || _lodash2.default.isNil(this.dateRange[0])) {
        if (!omitValidation) {
          alert('Insira um período válido');
        }
        return false;
      }
      if (this.locationType) {
        if (this.locationType.type == 'region') {
          if (this.locationRegion == '') {
            if (!omitValidation) {
              alert('Selecione a região');
            } else {
              console.log("SEM REGIAO");
            }
            return false;
          }
        } else if (this.locationType.type == 'state') {
          if (this.locationState == '') {
            if (!omitValidation) {
              alert('Selecione o estado');
            }
            return false;
          }
        } else if (this.locationType.type == 'city') {
          if (this.locationCity == '') {
            if (!omitValidation) {
              alert('Selecione a cidade');
            } else {
              console.log("SEM CIDADE");
            }
            return false;
          }
        } else if (this.locationType.type == "campus") {
          if (this.locationCampus == '') {
            if (!omitValidation) {
              alert('Selecione o campus');
            }
            return false;
          }
        }
      }
      return true;
    },
    setCitiesLoading: function setCitiesLoading() {
      this.cityFilterLoading = true;
    },
    setCampusLoading: function setCampusLoading() {
      this.campusFilterLoading = true;
    },
    setLevels: function setLevels(data) {
      this.levelOptions = data;
    },
    setKinds: function setKinds(data) {
      this.kindOptions = data;
    },
    setLocations: function setLocations(data) {
      this.locationOptions = data;
    },
    setGroups: function setGroups(data) {
      this.groupOptions = data;
    },
    setAccountTypes: function setAccountTypes(data) {
      this.accountTypeOptions = data;
    },
    setUniversities: function setUniversities(data) {
      this.universityOptions = data;
    },
    setFarmRegions: function setFarmRegions(data) {
      this.farmRegionOptions = data;
    },
    setUniversityGroups: function setUniversityGroups(data) {
      this.universityGroupOptions = data;
    },
    setSemesterRange: function setSemesterRange(startDate, endDate) {
      this.semesterStart = startDate;
      this.semesterEnd = endDate;
      this.dateRange = [this.semesterStart, this.semesterEnd];
    },
    setDealOwners: function setDealOwners(data) {
      this.dealOwnerOptions = data;
    },
    setQualityOwners: function setQualityOwners(data) {
      this.qualityOwnerOptions = data;
    },
    setRegions: function setRegions(data) {
      this.regionsOptions = data;
    },
    setStates: function setStates(data) {
      this.statesOptions = data;
    },
    setCities: function setCities(data) {
      this.citiesOptions = data;
      this.cityFilterLoading = false;
    },
    setCampus: function setCampus(data) {
      this.campusOptions = data;
      this.campusFilterLoading = false;
    },
    setProductLines: function setProductLines(data) {
      this.productLineOptions = data;
    },
    clearPrimaryFilters: function clearPrimaryFilters() {
      while (this.filters.length > 0) {
        this.filters.splice(0, 1);
      }
      this.$refs.filter.setFilterType({ type: '' });
    },
    setPrimaryFilters: function setPrimaryFilters(data) {
      console.log("setPrimaryFilters: " + (0, _stringify2.default)(data));
      for (var i = 0; i < data.length; i++) {
        console.log("primaryFilter: " + data[i].type);
        if (i > this.filters.length) {
          this.addFilter();
        }
        var component = this.$refs.filter;
        if (i != 0) {
          component = this.$refs.additionalFilter[i - 1];
        }
        component.setFilterType(data[i]);
        if (data[i].value) {
          if (data[i].type == 'university') {
            component.setUniversityFilter(data[i].value);
          }
          if (data[i].type == 'universities') {
            component.setUniversitiesFilter(data[i].value);
          }
          if (data[i].type == 'deal_owner') {
            component.setDealOwnerFilter(data[i].value);
          }
          if (data[i].type == 'group') {
            component.setUniversityGroupFilter(data[i].value);
          }
          if (data[i].type == 'account_type') {
            component.setAccountTypeFilter(data[i].value);
          }
          if (data[i].type == 'quality_owner') {
            component.setQualityOwnerFilter(data[i].value);
          }
          if (data[i].type == 'quality_owner_ies') {
            component.setQualityOwnerFilter(data[i].value);
          }
          if (data[i].type == 'deal_owner_ies') {
            component.setDealOwnerFilter(data[i].value);
          }
          if (data[i].type == 'farm_region') {
            component.setFarmRegionFilter(data[i].value);
          }
        }
      }
    },
    getDateRange: function getDateRange() {
      return this.dateRange;
    },
    setDateRange: function setDateRange(value) {
      this.dateRange = value;
    },
    setFilterKinds: function setFilterKinds(value) {
      this.filterKinds = value;
    },
    setFilterLevels: function setFilterLevels(value) {
      this.filterLevels = value;
    },
    setLocationValue: function setLocationValue(type, value) {
      this.locationType = type;
      if (type.type == 'region') {
        this.locationRegion = value;
      }
      if (type.type == 'state') {
        this.locationState = value;
      }
      if (type.type == 'city') {
        this.locationCity = value;
      }
      if (type.type == 'campus') {
        this.locationCampus = value;
      }
    },
    setLocationType: function setLocationType(value) {
      this.locationType = value;
    },
    setLocationRegion: function setLocationRegion(value) {
      this.locationRegion = value;
    },
    setLocationState: function setLocationState(value) {
      this.locationState = value;
    },
    setLocationCity: function setLocationCity(value) {
      this.locationCity = value;
    },
    setLocationCampus: function setLocationCampus(value) {
      this.locationCampus = value;
    },
    setUniversityFilter: function setUniversityFilter(value) {
      this.universityFilter = value;
    },
    setUniversityGroupFilter: function setUniversityGroupFilter(value) {
      this.universityGroupFilter = value;
    },
    setAccountTypeFilter: function setAccountTypeFilter(value) {
      this.accountTypeFilter = value;
    },
    setDealOwnerFilter: function setDealOwnerFilter(value) {
      this.dealOwnerFilter = value;
    },
    setProductLineFilter: function setProductLineFilter(value) {
      this.filterProductLine = value;
    },
    setProductLineSelectionType: function setProductLineSelectionType(value) {
      this.productLineSelectionType = value;
    },
    baseFiltersCaption: function baseFiltersCaption() {
      var filters = [];

      if (this.$refs.filter.filterType != '' && !_lodash2.default.isNil(this.$refs.filter.filterType)) {
        if (this.$refs.filter.filterType.type == '') {
          filters.push('Site Todo');
        } else {
          var selection = this.$refs.filter.filterSelected();

          if ((0, _typeof3.default)(selection.value) === 'object' && selection.value instanceof Array) {
            var values = _lodash2.default.map(selection.value, function (entry) {
              return entry.simple_name;
            });
            filters.push(selection.name + ' - ' + values.join(' - '));
          } else {
            filters.push(selection.name + ' - ' + selection.value.simple_name);
          }
        }
      }
      return filters.join(' - ');
    },
    baseFiltersList: function baseFiltersList() {
      var baseFilters = [];
      if (this.$refs.filter.filterType != '' && !_lodash2.default.isNil(this.$refs.filter.filterType)) {
        baseFilters.push(this.$refs.filter.filterSelected());
      }

      console.log("filters.length: " + this.filters.length);
      console.log("ADITIONAL: " + (0, _stringify2.default)(this.$refs.additionalFilter));

      if (this.filters.length > 0) {
        console.log("C:" + this.$refs.additionalFilter.length);
        for (var i = 0; i < this.$refs.additionalFilter.length; i++) {
          var component = this.$refs.additionalFilter[i];
          console.log("FITLRO: " + i + ": TIPO: " + (0, _stringify2.default)(component.filterSelected()) + " INDEX: " + baseFilters[i] + " C: " + component);
          if (component.filterType != '') {
            baseFilters.push(component.filterSelected());
          }
        }
      }
      return baseFilters;
    },
    setFiltersData: function setFiltersData(data) {
      var _this10 = this;

      var parsedFilters = _lodash2.default.map(data['baseFilters'], function (entry) {
        var filteredType = _lodash2.default.filter(_this10.groupOptions, function (filterEntry) {
          return filterEntry.type == entry.type;
        });
        var cloneType = _lodash2.default.cloneDeep(filteredType[0]);
        if (entry.type == 'university') {
          cloneType.value = _queryString2.default.solveEntry(_this10.universityOptions, entry.value.id, 'id');
        } else if (entry.type == 'universities') {
          cloneType.value = _queryString2.default.solveEntries(_this10.universityOptions, entry.value, 'id');
        } else if (entry.type == 'group') {
          ;
          cloneType.value = _queryString2.default.solveEntry(_this10.universityGroupOptions, entry.value.id, 'id');
        } else if (entry.type == 'deal_owner' || entry.type == 'deal_owner_ies') {
          cloneType.value = _queryString2.default.solveEntry(_this10.dealOwnerOptions, entry.value.id, 'id');
        } else if (entry.type == 'account_type') {
          cloneType.value = _queryString2.default.solveEntry(_this10.accountTypeOptions, entry.value.id, 'id');
        } else if (entry.type == 'quality_owner' || entry.type == 'quality_owner_ies') {
          cloneType.value = _queryString2.default.solveEntry(_this10.qualityOwnerOptions, entry.value.id, 'id');
        } else if (entry.type == 'farm_region') {
          cloneType.value = _queryString2.default.solveEntry(_this10.farmRegionOptions, entry.value.id, 'id');
        }
        return cloneType;
      });
      this.setPrimaryFilters(parsedFilters);
      if (!_lodash2.default.isNil(data['initialDate']) && !_lodash2.default.isNil(data['finalDate'])) {
        this.setDateRange([(0, _moment2.default)(data['initialDate']).toDate(), (0, _moment2.default)(data['finalDate']).toDate()]);
      }
      if (!_lodash2.default.isNil(data['kinds'])) {
        this.setFilterKinds(_queryString2.default.solveEntries(this.kindOptions, data['kinds'], 'id'));
      }
      if (!_lodash2.default.isNil(data['levels'])) {
        this.setFilterLevels(_queryString2.default.solveEntries(this.levelOptions, data['levels'], 'id'));
      }
      if (!_lodash2.default.isNil(data['productLine'])) {
        this.setProductLineFilter(_queryString2.default.solveEntry(this.productLineOptions, data.productLine.id, 'id'));
      }
      if (!_lodash2.default.isNil(data['productLineSelectionType'])) {
        this.setProductLineSelectionType(data['productLineSelectionType']);
      }
      if (!_lodash2.default.isNil(data['locationValue']) && !_lodash2.default.isNil(data['locationType'])) {
        var locationData = data['locationValue'];
        if (data['locationType'] == 'city') {
          locationData = {
            "name": locationData['name'] + ' - ' + locationData['state'],
            "id": locationData['name'],
            "state": locationData['state'],
            "city_id": locationData['city_id']
          };
        }
        this.setLocationValue(_queryString2.default.solveEntry(this.locationOptions, data['locationType'], 'type'), locationData);
      }
    },
    filterData: function filterData(omitValidation) {
      var baseFilters = this.baseFiltersList();

      console.log("baseFilters: " + (0, _stringify2.default)(baseFilters) + " omitValidation: " + omitValidation + " !o: " + !omitValidation);

      if (!this.verifyBaseFilters(baseFilters, omitValidation)) {
        return;
      }

      if (!this.verifyFilters(omitValidation)) {
        return;
      }

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var locationType = null;
      var locationValue = null;
      if (this.locationType) {
        locationType = this.locationType.type;
        if (locationType == "region") {
          locationValue = this.locationRegion.type;
        } else if (locationType == "state") {
          locationValue = this.locationState.type;
        } else if (locationType == "city") {
          locationValue = { name: this.locationCity.id, state: this.locationCity.state };
          if (!_lodash2.default.isNil(this.locationCity.city_id)) {
            locationValue.city_id = this.locationCity.city_id;
          }
        } else if (locationType == "campus") {
          locationValue = this.locationCampus.id;
        }
      }

      var returnMap = {
        initialDate: initialDate,
        finalDate: finalDate,
        baseFilters: baseFilters,
        locationType: locationType,
        locationValue: locationValue,
        productLineSelectionType: this.productLineSelectionType
      };

      if (this.productLineSelectionType == 'kind_and_level' || this.productLineOptions.length == 0) {
        returnMap.kinds = this.filterKinds;
        returnMap.levels = this.filterLevels;
      } else {
        returnMap.kinds = [];
        returnMap.levels = [];
      }
      if (this.productLineSelectionType == 'product_line') {
        returnMap.productLine = this.filterProductLine;
      }
      return returnMap;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.groupOptions,"university-group-options":_vm.universityGroupOptions,"farm-region-options":_vm.farmRegionOptions,"university-options":_vm.universityOptions,"deal-owner-options":_vm.dealOwnerOptions,"quality-owner-options":_vm.qualityOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1)]),_vm._v(" "),_vm._l((_vm.filters),function(i){return _c('div',{key:i,staticClass:"row"},[_c('div',{staticClass:"col-md-11"},[_c('panel-primary-filter',{ref:"additionalFilter",refInFor:true,attrs:{"filter-options":_vm.groupOptions,"university-group-options":_vm.universityGroupOptions,"university-options":_vm.universityOptions,"deal-owner-options":_vm.dealOwnerOptions,"quality-owner-options":_vm.qualityOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-1"},[_c('i',{staticClass:"fas fa-trash-alt clickable",staticStyle:{"font-size":"30px","float":"right","color":"#ff0000"},on:{"click":function($event){return _vm.removeFilter(i)}}})])])}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('date-picker',{attrs:{"disabled":_vm.periodDisabled,"first-day-of-week":1,"lang":_vm.lang,"range":"","shortcuts":_vm.shortcuts},on:{"input":_vm.timeRangeSelected},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),(_vm.hasProductLineOptions)?[_c('div',{staticClass:"col-md-2 col-sm-6",staticStyle:{"margin-top":"10px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.productLineSelectionType),expression:"productLineSelectionType"}],attrs:{"type":"radio","name":'product_line_selection_type_' + _vm.index,"value":"product_line","checked":""},domProps:{"checked":_vm._q(_vm.productLineSelectionType,"product_line")},on:{"change":function($event){_vm.productLineSelectionType="product_line"}}}),_vm._v(" "),_vm._m(0),_c('br'),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.productLineSelectionType),expression:"productLineSelectionType"}],attrs:{"type":"radio","name":'product_line_selection_type_' + _vm.index,"value":"kind_and_level"},domProps:{"checked":_vm._q(_vm.productLineSelectionType,"kind_and_level")},on:{"change":function($event){_vm.productLineSelectionType="kind_and_level"}}}),_vm._v(" "),_vm._m(1)]),_vm._v(" "),(_vm.showProductLineSelection)?_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":""},on:{"input":_vm.productLineSelected},model:{value:(_vm.filterProductLine),callback:function ($$v) {_vm.filterProductLine=$$v},expression:"filterProductLine"}})],1)]):_vm._e()]:_vm._e(),_vm._v(" "),(_vm.showKindAndLevelSelection)?[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])]:_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("LOCALIZACAO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.locationOptions,"label":"name","track-by":"type","placeholder":"Todas as localizaçoes","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationTypeSelected,"remove":_vm.locationTypeSelected},model:{value:(_vm.locationType),callback:function ($$v) {_vm.locationType=$$v},expression:"locationType"}})],1)]),_vm._v(" "),(_vm.regionFilter)?_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("REGIÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.regionsOptions,"label":"name","placeholder":"Selecione a região","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected,"remove":_vm.locationValueRemoved},model:{value:(_vm.locationRegion),callback:function ($$v) {_vm.locationRegion=$$v},expression:"locationRegion"}})],1)]):_vm._e(),_vm._v(" "),(_vm.stateFilter)?_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("ESTADO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.statesOptions,"label":"name","placeholder":"Selecione o estado","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationState),callback:function ($$v) {_vm.locationState=$$v},expression:"locationState"}})],1)]):_vm._e(),_vm._v(" "),(_vm.cityFilter)?_c('div',{staticClass:"col-md-2 col-sm-6"},[(_vm.cityFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small loader-grey default-margin-top"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"internal-search":false,"options":_vm.citiesSugestions,"label":"name","placeholder":"Selecione a cidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected,"search-change":_vm.citySearch},model:{value:(_vm.locationCity),callback:function ($$v) {_vm.locationCity=$$v},expression:"locationCity"}})],1)]):_vm._e(),_vm._v(" "),(_vm.campusFilter)?_c('div',{staticClass:"col-md-2 col-sm-6"},[(_vm.campusFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader loader-small loader-grey default-margin-top"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CAMPUS")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.campusOptions,"label":"name","placeholder":"Selecione o campus","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.locationValueSelected},model:{value:(_vm.locationCampus),callback:function ($$v) {_vm.locationCampus=$$v},expression:"locationCampus"}})],1)]):_vm._e()],2)],2)])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Linha de Produto")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Customizado")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2afdef9f", __vue__options__)
  } else {
    hotAPI.reload("data-v-2afdef9f", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/panel-primary-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterType: null,
      universityFilter: '',
      universitiesFilter: [],
      universityGroupFilter: '',
      accountTypeFilter: '',
      dealOwnerFilter: '',
      qualityOwnerFilter: '',
      farmRegionFilter: '',
      universitySugestions: []
    };
  },

  props: ['filterOptions', 'universityOptions', 'universityGroupOptions', 'dealOwnerOptions', 'accountTypeOptions', 'qualityOwnerOptions', 'permitEmpty', 'farmRegionOptions'],
  components: {
    Multiselect: _vueMultiselect2.default
  },
  mounted: function mounted() {
    this.universitySugestions = this.universityOptions;
  },

  watch: {
    universityOptions: function universityOptions(value) {
      this.universitySugestions = this.universityOptions;
    }
  },
  methods: {
    setFilterType: function setFilterType(value) {
      this.filterType = value;
    },
    setUniversityFilter: function setUniversityFilter(value) {
      this.universityFilter = value;
    },
    setUniversitiesFilter: function setUniversitiesFilter(value) {
      this.universitiesFilter = value;
    },
    setUniversityGroupFilter: function setUniversityGroupFilter(value) {
      this.universityGroupFilter = value;
    },
    setAccountTypeFilter: function setAccountTypeFilter(value) {
      this.accountTypeFilter = value;
    },
    setDealOwnerFilter: function setDealOwnerFilter(value) {
      this.dealOwnerFilter = value;
    },
    setQualityOwnerFilter: function setQualityOwnerFilter(value) {
      this.qualityOwnerFilter = value;
    },
    setFarmRegionFilter: function setFarmRegionFilter(value) {
      this.farmRegionFilter = value;
    },
    universitySearch: function universitySearch(data, id) {
      if (data == '') {
        this.universitySugestions = this.universityOptions;
        return;
      }
      var filteredData = data.normalize('NFD').replace(/[\u0300-\u036f]/g, "");
      this.universitySugestions = this.universityOptions.filter(function (item_data) {
        return item_data.name.normalize('NFD').replace(/[\u0300-\u036f]/g, "").toUpperCase().includes(filteredData.toUpperCase());
      });
    },
    filterValueSelected: function filterValueSelected() {
      var _this = this;

      this.$nextTick(function () {
        _this.$emit("valueSelected");
      });
    },
    filterSelected: function filterSelected() {
      if (_lodash2.default.isNil(this.filterType)) {
        return;
      }
      var currentFilter = _lodash2.default.cloneDeep(this.filterType);
      if (this.filterType.type === 'university') {
        currentFilter.value = this.universityFilter;
      }
      if (this.filterType.type === 'group') {
        currentFilter.value = this.universityGroupFilter;
      }
      if (this.filterType.type === 'deal_owner' || this.filterType.type === 'deal_owner_ies') {
        currentFilter.value = this.dealOwnerFilter;
      }
      if (this.filterType.type === 'account_type') {
        currentFilter.value = this.accountTypeFilter;
      }
      if (this.filterType.type === 'quality_owner' || this.filterType.type === 'quality_owner_ies') {
        currentFilter.value = this.qualityOwnerFilter;
      }
      if (this.filterType.type === 'universities') {
        currentFilter.value = this.universitiesFilter;
      }
      if (this.filterType.type === 'farm_region') {
        currentFilter.value = this.farmRegionFilter;
      }

      return currentFilter;
    },
    validateFilter: function validateFilter() {
      var filter = this.filterSelected();
      if (_lodash2.default.isNil(filter)) {
        if (this.permitEmpty) {
          return true;
        }
        alert('Selecione um filtro');
        return false;
      }

      if (filter.type == 'all') {
        return true;
      }

      var temDimensao = false;
      if (!_lodash2.default.isNil(filter.value)) {
        if (!_lodash2.default.isNil(filter.value.length)) {
          temDimensao = true;
        }
      }

      if (filter.type != '') {
        if (!temDimensao) {
          if (!filter.value) {
            alert('Selecione o valor para o filtro ' + filter.name);
            return false;
          } else {
            if (!filter.value.id) {
              alert('Selecione o valor para o filtro ' + filter.name);
              return false;
            }
          }
        } else {
          if (filter.value.length == 0) {
            alert('Selecione o valor para o filtro ' + filter.name);
            return false;
          }
        }
      }
      return true;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("FILTRO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.filterOptions,"label":"name","placeholder":"Selecione o tipo de filtro","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected},model:{value:(_vm.filterType),callback:function ($$v) {_vm.filterType=$$v},expression:"filterType"}})],1)]),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'university')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"internal-search":false,"options":_vm.universitySugestions,"label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected,"search-change":_vm.universitySearch},model:{value:(_vm.universityFilter),callback:function ($$v) {_vm.universityFilter=$$v},expression:"universityFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'universities')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("UNIVERSIDADES")]),_vm._v(" "),_c('multiselect',{attrs:{"internal-search":false,"multiple":true,"options":_vm.universitySugestions,"track-by":"id","label":"name","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected,"search-change":_vm.universitySearch},model:{value:(_vm.universitiesFilter),callback:function ($$v) {_vm.universitiesFilter=$$v},expression:"universitiesFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'group')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("GRUPO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.universityGroupOptions,"label":"name","placeholder":"Selecione o grupo","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected},model:{value:(_vm.universityGroupFilter),callback:function ($$v) {_vm.universityGroupFilter=$$v},expression:"universityGroupFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'farm_region')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("REGIÃO DO FARM")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.farmRegionOptions,"label":"name","placeholder":"Selecione a região","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected},model:{value:(_vm.farmRegionFilter),callback:function ($$v) {_vm.farmRegionFilter=$$v},expression:"farmRegionFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && (_vm.filterType.type == 'deal_owner' || _vm.filterType.type == 'deal_owner_ies'))?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("FARMER")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.dealOwnerOptions,"label":"name","placeholder":"Selecione o farmer","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected},model:{value:(_vm.dealOwnerFilter),callback:function ($$v) {_vm.dealOwnerFilter=$$v},expression:"dealOwnerFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && _vm.filterType.type == 'account_type')?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("CARTEIRA")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.accountTypeOptions,"label":"name","placeholder":"Selecione a carteira","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected},model:{value:(_vm.accountTypeFilter),callback:function ($$v) {_vm.accountTypeFilter=$$v},expression:"accountTypeFilter"}})],1)]):_vm._e(),_vm._v(" "),(_vm.filterType && (_vm.filterType.type == 'quality_owner' || _vm.filterType.type == 'quality_owner_ies'))?_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":""}},[_vm._v("QUALI")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.qualityOwnerOptions,"label":"name","placeholder":"Selecione o quali","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},on:{"select":_vm.filterValueSelected},model:{value:(_vm.qualityOwnerFilter),callback:function ($$v) {_vm.qualityOwnerFilter=$$v},expression:"qualityOwnerFilter"}})],1)]):_vm._e()])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-053fd94a", __vue__options__)
  } else {
    hotAPI.reload("data-v-053fd94a", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/pricing-campaign-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = require('babel-runtime/helpers/typeof');

var _typeof3 = _interopRequireDefault(_typeof2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],
      blockCount: null,
      filterKinds: null,
      filterLevels: null,

      dateRange: null,

      tableData: [],
      table: null,
      enabledFilter: true,
      visibleFilter: false,
      restrictedFilter: false,

      loadingFilters: true,
      dataLoading: false,
      semesterStart: null,
      semesterEnd: null,
      downloadFrame: 'about:blank',
      hasTableNoData: false,

      fieldsMap: {},
      fieldsOrder: [],

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
          _this.timeRangeSelected(_this.dateRange);
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
          _this.timeRangeSelected(_this.dateRange);
        }
      }]
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default
  },
  computed: {
    hasTableData: function hasTableData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    PricingCampaignChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    PricingCampaignChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });
    PricingCampaignChannel.on('downloadData', function (payload) {
      return _this2.receiveDownloadData(payload);
    });
    PricingCampaignChannel.on('downloadNoData', function (payload) {
      return _this2.receiveDownloadNoData(payload);
    });

    this.filterLevels = this.levelOptions[0];

    this.loadFilters();
  },

  methods: {
    formatBool: function formatBool(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      if (value) {
        return "Sim";
      }
      return "Não";
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityGroupOptions = data.groups;
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.levelOptions = data.levels;

      this.filterLevels = this.levelOptions[0];

      this.loadingFilters = false;
    },
    receiveDownloadNoData: function receiveDownloadNoData(data) {
      alert("Sem dados para o filtro selecionado");
      this.dataLoading = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this3 = this;

      this.fieldsOrder = data.fields;
      this.fieldsMap = data.fields_map;
      this.tableData = data.offers;

      console.log("fieldsOrder: " + (0, _stringify2.default)(this.fieldsOrder));
      console.log("fieldsMap: " + (0, _stringify2.default)(this.fieldsMap));

      if (this.tableData.length == 0) {
        this.hasTableNoData = true;
      } else {
        this.$nextTick(function () {
          _this3.table = new _datatable2.default('#pricing-table', {
            paging: true,
            deferRender: true,
            searchDelay: 500,
            pageLength: 30,
            buttons: []
          });
        });
      }

      this.dataLoading = false;
    },
    receiveDownloadData: function receiveDownloadData(data) {
      var byteCharacters = atob(data.xlsx);
      var byteNumbers = new Array(byteCharacters.length);
      for (var i = 0; i < byteCharacters.length; i++) {
        byteNumbers[i] = byteCharacters.charCodeAt(i);
      }
      var byteArray = new Uint8Array(byteNumbers);
      var blob = new Blob([byteArray], { type: data.contentType });

      saveAs(blob, data.filename);

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      PricingCampaignChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    downloadData: function downloadData() {
      if (!this.validateFilter()) {
        return;
      }
      var filter = this.$refs.filter.filterSelected();

      this.dataLoading = true;
      filter.level = this.filterLevels.id;

      PricingCampaignChannel.push('downloadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    },
    toQueryString: function toQueryString(input, fieldSufix) {
      var _this4 = this;

      return (0, _keys2.default)(input).map(function (key) {
        if ((0, _typeof3.default)(input[key]) == 'object') {
          return _this4.toQueryString(input[key], key);
        } else {
          if (!_lodash2.default.isNil(fieldSufix)) {
            return fieldSufix + '[' + key + ']' + '=' + input[key];
          } else {
            return key + '=' + input[key];
          }
        }
      }).join('&');
    },
    validateFilter: function validateFilter() {
      var filter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(filter)) {
        alert('Selecione um filtro');
        return false;
      }

      var temDimensao = false;
      if (!_lodash2.default.isNil(filter.value)) {
        if (!_lodash2.default.isNil(filter.value.length)) {
          temDimensao = true;
        }
      }

      if (filter.type != '') {
        if (!temDimensao) {
          if (!filter.value) {
            alert('Selecione o valor para o filtro ' + filter.name);
            return false;
          } else {
            if (!filter.value.id) {
              alert('Selecione o valor para o filtro ' + filter.name);
              return false;
            }
          }
        } else {
          if (filter.value.length == 0) {
            alert('Selecione o valor para o filtro ' + filter.name);
            return false;
          }
        }
      }
      if (_lodash2.default.isNil(this.filterLevels) || this.filterLevels == '') {
        alert('Selecione o nível');
        return false;
      }
      return true;
    },
    loadData: function loadData() {
      if (!this.validateFilter()) {
        console.log("NAO VALIDOU O FILTRO");
        return;
      }
      var filter = this.$refs.filter.filterSelected();

      this.dataLoading = true;
      this.tableData = [];
      this.hasTableNoData = false;

      filter.level = this.filterLevels.id;

      PricingCampaignChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"label":"name","track-by":"id","placeholder":"Selecione o nível","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Visualizar\n                ")]),_vm._v(" "),_c('button',{staticClass:"btn-submit default-margin-left",on:{"click":_vm.downloadData}},[_vm._v("\n                  Baixar planilha\n                ")])])])])],1)])])]),_vm._v(" "),(_vm.hasTableNoData)?_c('div',{staticClass:"row"},[_c('p',[_vm._v("Sem dados para o filtro selecionado")])]):_vm._e(),_vm._v(" "),(_vm.hasTableData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table data-table-tiny",attrs:{"id":"pricing-table"}},[_c('thead',[_c('tr',_vm._l((_vm.fieldsOrder),function(field){return _c('th',[_vm._v("\n                  "+_vm._s(_vm.fieldsMap[field])+"\n                ")])}),0)]),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',_vm._l((_vm.fieldsOrder),function(field){return _c('td',[_vm._v("\n                  "+_vm._s(entry[field])+"\n                ")])}),0)}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Planilha da campanha de precificação\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-b043b3a8", __vue__options__)
  } else {
    hotAPI.reload("data-v-b043b3a8", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/pricing-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      curvesNames: {
        '0': '-',
        '1': 'Curso na IES',
        '2': 'Família na IES',
        '3': 'Curso na região',
        '4': 'Família na região',
        '5': '-'
      },
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],

      filterKinds: null,
      filterLevels: null,

      tableData: [],
      table: null,

      loadingFilters: true,
      dataLoading: false
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this = this;

    PricingChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    PricingChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loadFilters();
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      console.log("receiveTableData#");
      this.tableData = data.pricing;

      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#pricing-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30
        });
      });

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      PricingChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    validateFilter: function validateFilter() {
      var filter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(filter)) {
        alert('Selecione um filtro');
        return false;
      }

      var temDimensao = false;
      if (!_lodash2.default.isNil(filter.value)) {
        if (!_lodash2.default.isNil(filter.value.length)) {
          temDimensao = true;
        }
      }

      if (filter.type != '') {
        if (!temDimensao) {
          if (!filter.value) {
            alert('Selecione o valor para o filtro ' + filter.name);
            return false;
          } else {
            if (!filter.value.id) {
              alert('Selecione o valor para o filtro ' + filter.name);
              return false;
            }
          }
        } else {
          if (filter.value.length == 0) {
            alert('Selecione o valor para o filtro ' + filter.name);
            return false;
          }
        }
      }
      return true;
    },
    loadData: function loadData() {
      if (!this.validateFilter()) {
        return;
      }

      var filter = this.$refs.filter.filterSelected();
      this.dataLoading = true;
      this.tableData = [];

      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;

      PricingChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"university-group-options":_vm.universityGroupOptions,"deal-owner-options":_vm.dealOwnerOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          PRECIFICAÇAO\n        ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table data-table-tiny",attrs:{"id":"pricing-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.canonical_campus_city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.canonical_campus_state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.family_old))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.full_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.offered_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.valor_otimo))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.desconto_otimo))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.oferta_ativada))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.curvesNames[entry.curva_utilizada]))])])}),0)])])]):_vm._e()])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Precificaçao\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("Modalidade")]),_vm._v(" "),_c('th',[_vm._v("Nivel")]),_vm._v(" "),_c('th',[_vm._v("Turno")]),_vm._v(" "),_c('th',[_vm._v("Familia")]),_vm._v(" "),_c('th',[_vm._v("Preco cheio (R$)")]),_vm._v(" "),_c('th',[_vm._v("Campus")]),_vm._v(" "),_c('th',[_vm._v("Preco oferecido (R$)")]),_vm._v(" "),_c('th',[_vm._v("ID IES")]),_vm._v(" "),_c('th',[_vm._v("Valor otimo (R$)")]),_vm._v(" "),_c('th',[_vm._v("Desconto otimo (%)")]),_vm._v(" "),_c('th',[_vm._v("Oferta Ativa")]),_vm._v(" "),_c('th',[_vm._v("curva_utilizada")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e98ea822", __vue__options__)
  } else {
    hotAPI.reload("data-v-e98ea822", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/product-lines-filter.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterKinds: null,
      filterLevels: null,
      filterProductLine: null,
      productLineSelectionType: 'product_line'
    };
  },

  computed: {
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 0;
    },
    showProductLineSelection: function showProductLineSelection() {
      return this.productLineSelectionType == "product_line";
    },
    showKindAndLevelSelection: function showKindAndLevelSelection() {
      return this.productLineSelectionType == "kind_and_level" || this.productLineOptions.length == 0;
    }
  },
  components: {
    CsMultiselect: _customSearchMultiselect2.default
  },
  props: {
    index: {
      type: Number,
      default: 0
    },
    kindOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    levelOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    productLineOptions: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  methods: {
    setProductLineFilter: function setProductLineFilter(value) {
      this.filterProductLine = value;
    },
    filters: function filters() {
      var returnMap = {};
      if (this.productLineSelectionType == 'kind_and_level' || this.productLineOptions.length == 0) {
        returnMap.kinds = this.filterKinds;
        returnMap.levels = this.filterLevels;
      } else {
        returnMap.kinds = [];
        returnMap.levels = [];
      }
      if (this.productLineSelectionType == 'product_line') {
        returnMap.productLine = this.filterProductLine;
      }
      return returnMap;
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.hasProductLineOptions)?[_c('div',{staticClass:"col-md-2 col-sm-6",staticStyle:{"margin-top":"10px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.productLineSelectionType),expression:"productLineSelectionType"}],attrs:{"type":"radio","name":'product_line_selection_type_' + _vm.index,"value":"product_line","checked":""},domProps:{"checked":_vm._q(_vm.productLineSelectionType,"product_line")},on:{"change":function($event){_vm.productLineSelectionType="product_line"}}}),_vm._v(" "),_vm._m(0),_c('br'),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.productLineSelectionType),expression:"productLineSelectionType"}],attrs:{"type":"radio","name":'product_line_selection_type_' + _vm.index,"value":"kind_and_level"},domProps:{"checked":_vm._q(_vm.productLineSelectionType,"kind_and_level")},on:{"change":function($event){_vm.productLineSelectionType="kind_and_level"}}}),_vm._v(" "),_vm._m(1)]),_vm._v(" "),(_vm.showProductLineSelection)?_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterProductLine),callback:function ($$v) {_vm.filterProductLine=$$v},expression:"filterProductLine"}})],1)]):_vm._e()]:_vm._e(),_vm._v(" "),(_vm.showKindAndLevelSelection)?[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])]:_vm._e()],2)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Linha de Produto")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Customizado")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-9b5cc23c", __vue__options__)
  } else {
    hotAPI.reload("data-v-9b5cc23c", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/quali-campaign.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true,
      loadingVelocimeter: true,
      loadingVelocimeterDelta: true,
      loadingFatOrderVelocimeter: true,
      loadingVelocimeterFatOrdem: true,
      tableData: [],
      tableDataFatOrderVelocimeter: [],
      velocimeterTableData: [],
      velocimeterDeltaTableData: [],
      accountTypeFilter: null,
      accountTypeOptions: [{ name: "Carteira 1", id: 1 }, { name: "Carteira 2", id: 2 }, { name: "Carteira 3", id: 3 }, { name: "Carteira 4", id: 4 }]
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default
  },
  mounted: function mounted() {
    var _this = this;

    QualiCampaignChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    QualiCampaignChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    QualiCampaignChannel.on('velocimeterTableData', function (payload) {
      return _this.receiveVelocimeterTableData(payload);
    });

    QualiCampaignChannel.on('velocimeterDeltaTableData', function (payload) {
      return _this.receiveVelocimeterDeltaTableData(payload);
    });

    QualiCampaignChannel.on('fatOrdemDeltaTableData', function (payload) {
      return _this.receiveFatOrdemDeltaTableData(payload);
    });

    this.loadData();
  },

  methods: {
    filterValueSelected: function filterValueSelected() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.loadData();
      });
    },
    filterValueRemoved: function filterValueRemoved() {
      var _this3 = this;

      this.$nextTick(function () {
        _this3.loadData();
      });
    },
    visualizationTypeInput: function visualizationTypeInput(data) {
      var _this4 = this;

      this.visualizationType = this.visualization.type;
      this.$nextTick(function () {
        _this4.loadData();
      });
    },
    receiveFilters: function receiveFilters(data) {
      console.log("receiveFilters");
    },
    receiveTableData: function receiveTableData(data) {
      var _this5 = this;

      console.log("receiveTableData");

      this.tableData = data.ranking;
      this.loadingStockData = false;

      this.checkLoading();

      this.$nextTick(function () {
        _this5.table = new _datatable2.default('#fat-ordem-delta-table', {
          deferRender: true,

          searching: false,
          order: [1, 'desc'],
          buttons: []
        });
      });
    },
    receiveFatOrdemDeltaTableData: function receiveFatOrdemDeltaTableData(data) {
      var _this6 = this;

      this.tableDataFatOrderVelocimeter = data.ranking;
      this.loadingVelocimeterFatOrdem = false;

      this.checkLoading();

      this.$nextTick(function () {
        _this6.table = new _datatable2.default('#fat-ordem-velocimeter-table', {
          deferRender: true,

          searching: false,
          order: [1, 'desc'],
          buttons: []
        });
      });
    },
    receiveVelocimeterDeltaTableData: function receiveVelocimeterDeltaTableData(data) {
      var _this7 = this;

      this.velocimeterDeltaTableData = data.ranking;
      this.loadingVelocimeterDelta = false;

      this.checkLoading();

      this.$nextTick(function () {
        _this7.table = new _datatable2.default('#delta-velocimeter-table', {
          deferRender: true,

          searching: false,
          order: [1, 'desc'],
          buttons: []
        });
      });
    },
    receiveVelocimeterTableData: function receiveVelocimeterTableData(data) {
      var _this8 = this;

      console.log("receiveVelocimeterTableData");

      this.velocimeterTableData = data.ranking;
      this.loadingVelocimeter = false;

      this.checkLoading();

      this.$nextTick(function () {
        _this8.table = new _datatable2.default('#current-velocimeter-table', {
          deferRender: true,

          searching: false,
          order: [1, 'desc'],
          buttons: []
        });
      });
    },
    checkLoading: function checkLoading() {
      this.loading = this.loadingVelocimeter || this.loadingVelocimeterDelta || this.loadingVelocimeterFatOrdem || this.loadingStockData;
    },
    loadData: function loadData() {
      this.tableData = [];
      this.velocimeterTableData = [];
      this.loading = true;
      this.loadingVelocimeter = true;
      this.loadingStockData = true;
      var params = {
        account_type: this.accountTypeFilter
      };
      QualiCampaignChannel.push('loadData', params).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VARIAÇÃO PERCENTUAL DO FATURAMENTO POR ORDEM")]),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"300px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"fat-ordem-delta-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.delta))])])}),0)])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VELOCÍMETRO FATURAMENTO POR ORDEM")]),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"300px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"fat-ordem-velocimeter-table"}},[_vm._m(2),_vm._v(" "),_c('tbody',_vm._l((_vm.tableDataFatOrderVelocimeter),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.velocimetro_fat_ordem))])])}),0)])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VARIAÇAO DO VELOCÍMETRO DE RECEITA")]),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"300px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"delta-velocimeter-table"}},[_vm._m(3),_vm._v(" "),_c('tbody',_vm._l((_vm.velocimeterDeltaTableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.velocimeter_delta))])])}),0)])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("VELOCÍMETRO RECEITA")]),_vm._v(" "),_c('div',{staticClass:"row"}),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding",staticStyle:{"min-height":"300px"}},[_c('table',{staticClass:"data-table sticky-header data-table-tiny",attrs:{"id":"current-velocimeter-table"}},[_vm._m(4),_vm._v(" "),_c('tbody',_vm._l((_vm.velocimeterTableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.velocimeter))])])}),0)])])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Campanha do Qualidade\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("QUALI")]),_vm._v(" "),_c('th',[_vm._v("Variação (%)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("QUALI")]),_vm._v(" "),_c('th',[_vm._v("(%)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("QUALI")]),_vm._v(" "),_c('th',[_vm._v("(%)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("QUALI")]),_vm._v(" "),_c('th',[_vm._v("(%)")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-cbac1b7e", __vue__options__)
  } else {
    hotAPI.reload("data-v-cbac1b7e", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/quali-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {

      fatOrderTotal: null,
      fatOrderGoalTotal: null,

      fatOrderEad: null,
      fatOrderGoalEad: null,

      fatOrderPres: null,
      fatOrderGoalPres: null,

      fatOrderSpeedTotal: null,
      fatOrderSpeedEad: null,
      fatOrderSpeedPres: null,

      fatOrderPreviousTotal: null,
      fatOrderPreviousEad: null,
      fatOrderPreviousPres: null,

      fatOrderSpeed7DaysTotal: null,
      fatOrderSpeed7DaysEad: null,
      fatOrderSpeed7DaysPres: null,

      current_fatOrderGoalTotal: null,
      current_fatOrderTotal: null,
      current_fatOrderSpeedTotal: null,

      current_fatOrderGoalEad: null,
      current_fatOrderEad: null,
      current_fatOrderSpeedEad: null,

      current_fatOrderGoalPres: null,
      current_fatOrderPres: null,
      current_fatOrderSpeedPres: null,

      current_fatOrderPreviousTotal: null,
      current_fatOrderPreviousEad: null,
      current_fatOrderPreviousPres: null,

      dataInicial: null,
      dataFinal: null,

      shareEad: null,
      sharePres: null,
      shareEadPrev: null,
      sharePresPrev: null,

      revenueSemesterSpeed: null,
      revenue7DaysSpeed: null,

      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],

      filterKinds: [],
      filterLevels: [],

      dateRange: null,

      table: null,
      enabledFilter: true,
      visibleFilter: false,
      restrictedFilter: false,

      loadingFilters: true,
      dataLoading: false,
      semesterStart: null,
      semesterEnd: null,

      productLineSelectionType: 'product_line',
      filterProductLine: null,
      productLineOptions: [],

      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }]
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default,
    ComparingChart: _comparingChart2.default
  },
  computed: {
    showProductLineSelection: function showProductLineSelection() {
      return this.productLineSelectionType == "product_line";
    },
    showKindAndLevelSelection: function showKindAndLevelSelection() {
      return this.productLineSelectionType == "kind_and_level" || this.productLineOptions.length == 0;
    },
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    QualiChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    QualiChannel.on('cumMeanIncomeData', function (payload) {
      return _this2.receiveCumMeanIncomeData(payload);
    });
    QualiChannel.on('meanIncomeData', function (payload) {
      return _this2.receiveMeanIncomeData(payload);
    });
    QualiChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });
    QualiChannel.on('velocimeterData', function (payload) {
      return _this2.receiveVelocimeterData(payload);
    });
    QualiChannel.on('instantVelocimeterData', function (payload) {
      return _this2.receiveInstantVelocimeterData(payload);
    });

    this.loadFilters();
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('primaryFilterSelected data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityGroupOptions = data.groups;
      this.universityOptions = data.universities;
      this.qualityOwnerOptions = data.qualityOwners;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;
      this.productLineOptions = data.product_lines;

      this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)(this.semesterEnd).toDate()];

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      this.fatOrderTotal = data.fat_ordem;
      this.fatOrderGoalTotal = data.fat_ordem_goal;
      this.fatOrderSpeedTotal = data.fat_ordem_speed;

      this.fatOrderEad = data.fat_ordem_ead;
      this.fatOrderGoalEad = data.fat_ordem_goal_ead;
      this.fatOrderSpeedEad = data.fat_ordem_speed_ead;

      this.fatOrderPres = data.fat_ordem_pres;
      this.fatOrderGoalPres = data.fat_ordem_goal_pres;
      this.fatOrderSpeedPres = data.fat_ordem_speed_pres;

      this.fatOrderPreviousTotal = data.fat_ordem_previous;
      this.fatOrderPreviousEad = data.fat_ordem_ead_previous;
      this.fatOrderPreviousPres = data.fat_ordem_pres_previous;

      this.shareEad = data.shared_ead;
      this.sharePres = data.shared_pres;
      this.shareEadPrev = data.shared_ead_prev;
      this.sharePresPrev = data.shared_pres_prev;

      this.fatOrderSpeed7DaysTotal = data.fat_ordem_speed_7_days;
      this.fatOrderSpeed7DaysEad = data.fat_ordem_speed_7_days_ead;
      this.fatOrderSpeed7DaysPres = data.fat_ordem_speed_7_days_pres;

      this.dataInicial = data.data_inicio_filtro;
      this.dataFinal = data.data_fim_filtro;
    },
    resetTable: function resetTable() {
      this.dataInicial = null;
      this.dataFinal = null;

      this.fatOrderTotal = null;
      this.fatOrderGoalTotal = null;
      this.fatOrderSpeedTotal = null;

      this.fatOrderEad = null;
      this.fatOrderGoalEad = null;
      this.fatOrderSpeedEad = null;

      this.fatOrderPres = null;
      this.fatOrderGoalPres = null;
      this.fatOrderSpeedPres = null;

      this.fatOrderPreviousTotal = null;
      this.fatOrderPreviousEad = null;
      this.fatOrderPreviousPres = null;

      this.fatOrderSpeed7DaysTotal = null;
      this.fatOrderSpeed7DaysEad = null;
      this.fatOrderSpeed7DaysPres = null;

      this.revenueSemesterSpeed = null;
      this.revenue7DaysSpeed = null;

      this.shareEad = null;
      this.sharePres = null;
      this.shareEadPrev = null;
      this.sharePresPrev = null;

      this.current_fatOrderGoalTotal = null;
      this.current_fatOrderTotal = null;
      this.current_fatOrderSpeedTotal = null;

      this.current_fatOrderGoalEad = null;
      this.current_fatOrderEad = null;
      this.current_fatOrderSpeedEad = null;

      this.current_fatOrderGoalPres = null;
      this.current_fatOrderPres = null;
      this.current_fatOrderSpeedPres = null;

      this.current_fatOrderPreviousTotal = null;
      this.current_fatOrderPreviousEad = null;
      this.current_fatOrderPreviousPres = null;
    },
    receiveVelocimeterData: function receiveVelocimeterData(data) {
      this.revenueSemesterSpeed = data.semester_velocimeter;
      this.revenue7DaysSpeed = data.seven_days_velocimeter;
    },
    receiveMeanIncomeData: function receiveMeanIncomeData(data) {
      var _this3 = this;

      this.$refs.meanIncomeChart.setLabels(data.dates);

      this.$refs.meanIncomeChart.setSeries(0, data.mean_income, "ATUAL");
      this.$refs.meanIncomeChart.setSeries(1, data.mean_income_prev, "ANTERIOR");


      this.$nextTick(function () {
        _this3.$refs.meanIncomeChart.updateChart();
      });
    },
    receiveCumMeanIncomeData: function receiveCumMeanIncomeData(data) {
      var _this4 = this;

      this.$refs.cumMeanIncomeChart.setLabels(data.dates);

      this.$refs.cumMeanIncomeChart.setSeries(0, data.mean_income, "ATUAL");
      this.$refs.cumMeanIncomeChart.setSeries(1, data.mean_income_prev, "ANTERIOR");


      this.dataLoading = false;

      this.$nextTick(function () {
        _this4.$refs.cumMeanIncomeChart.updateChart();
      });
    },
    receiveInstantVelocimeterData: function receiveInstantVelocimeterData(data) {
      this.current_fatOrderGoalTotal = data.fat_ordem_goal;
      this.current_fatOrderTotal = data.fat_ordem;
      this.current_fatOrderSpeedTotal = data.fat_ordem_speed;

      this.current_fatOrderGoalEad = data.fat_ordem_goal_ead;
      this.current_fatOrderEad = data.fat_ordem_ead;
      this.current_fatOrderSpeedEad = data.fat_ordem_speed_ead;

      this.current_fatOrderGoalPres = data.fat_ordem_goal_pres;
      this.current_fatOrderPres = data.fat_ordem_pres;
      this.current_fatOrderSpeedPres = data.fat_ordem_speed_pres;

      this.current_fatOrderPreviousTotal = data.fat_ordem_previous;
      this.current_fatOrderPreviousEad = data.fat_ordem_ead_previous;
      this.current_fatOrderPreviousPres = data.fat_ordem_pres_previous;
    },
    loadFilters: function loadFilters() {
      QualiChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      if (!this.$refs.filter.validateFilter()) {
        return;
      }
      var filter = this.$refs.filter.filterSelected();

      this.dataLoading = true;

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      this.$refs.meanIncomeChart.clearSeries();
      this.$refs.cumMeanIncomeChart.clearSeries();

      filter.initialDate = initialDate;
      filter.finalDate = finalDate;

      if (this.productLineSelectionType == 'kind_and_level' || this.productLineOptions.length == 0) {
        filter.kinds = this.filterKinds;
        filter.levels = this.filterLevels;
      } else {
        filter.kinds = [];
        filter.levels = [];
      }
      if (this.productLineSelectionType == 'product_line') {
        filter.productLine = this.filterProductLine;
      }

      this.resetTable();

      QualiChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-options":_vm.universityOptions,"quality-owner-options":_vm.qualityOwnerOptions},on:{"valueSelected":_vm.primaryFilterSelected}}),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("DATA")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.hasProductLineOptions)?[_c('div',{staticClass:"col-md-2 col-sm-6",staticStyle:{"margin-top":"10px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.productLineSelectionType),expression:"productLineSelectionType"}],attrs:{"type":"radio","name":'product_line_selection_type_' + _vm.index,"value":"product_line","checked":""},domProps:{"checked":_vm._q(_vm.productLineSelectionType,"product_line")},on:{"change":function($event){_vm.productLineSelectionType="product_line"}}}),_vm._v(" "),_vm._m(1),_c('br'),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.productLineSelectionType),expression:"productLineSelectionType"}],attrs:{"type":"radio","name":'product_line_selection_type_' + _vm.index,"value":"kind_and_level"},domProps:{"checked":_vm._q(_vm.productLineSelectionType,"kind_and_level")},on:{"change":function($event){_vm.productLineSelectionType="kind_and_level"}}}),_vm._v(" "),_vm._m(2)]),_vm._v(" "),(_vm.showProductLineSelection)?_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":""},on:{"input":_vm.productLineSelected},model:{value:(_vm.filterProductLine),callback:function ($$v) {_vm.filterProductLine=$$v},expression:"filterProductLine"}})],1)]):_vm._e()]:void 0,_vm._v(" "),(_vm.showKindAndLevelSelection)?[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)])]:void 0],2),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                    Atualizar\n                  ")])])])])],1)])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("FATURAMENTO POR ORDEM")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[(_vm.tableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('table',{staticClass:"data-table data-table-tiny no-wrap"},[_c('thead',[_c('tr',[_c('th',{attrs:{"colspan":"2"}}),_vm._v(" "),_c('th',{attrs:{"colspan":"2"}},[_vm._v("FILTRO - "+_vm._s(_vm.dataInicial)+" - "+_vm._s(_vm.dataFinal))]),_vm._v(" "),_c('th',{staticStyle:{"width":"100px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',{attrs:{"colspan":"1"}},[_vm._v("7 DIAS")]),_vm._v(" "),_c('th',{staticStyle:{"width":"100px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',{attrs:{"colspan":"1"}},[_vm._v("ANO ANTERIOR")])]),_vm._v(" "),_vm._m(3)]),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("TOTAL")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderGoalTotal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderTotal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderSpeedTotal))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderSpeed7DaysTotal))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderPreviousTotal))])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("EAD+SEMI")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderGoalEad))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderEad))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderSpeedEad))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderSpeed7DaysEad))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderPreviousEad))])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("PRESENCIAL")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderGoalPres))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderPres))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderSpeedPres))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderSpeed7DaysPres))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.fatOrderPreviousPres))])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('table',{staticClass:"data-table data-table-tiny no-wrap"},[_vm._m(4),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v("TOTAL")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderGoalTotal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderTotal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderSpeedTotal))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderPreviousTotal))])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("EAD+SEMI")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderGoalEad))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderEad))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderSpeedEad))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderPreviousEad))])]),_vm._v(" "),_c('tr',[_c('td',[_vm._v("PRESENCIAL")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderGoalPres))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderPres))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderSpeedPres))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.current_fatOrderPreviousPres))])])])])])])])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-6",staticStyle:{"height":"100%"}},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("RECEITA")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[(_vm.tableLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('table',{staticClass:"data-table data-table-tiny no-wrap"},[_vm._m(5),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v(_vm._s(_vm.revenueSemesterSpeed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.revenue7DaysSpeed))])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('table',{staticClass:"data-table data-table-tiny no-wrap"},[_vm._m(6),_vm._v(" "),_c('tbody',[_c('tr',[_c('td',[_vm._v(_vm._s(_vm.sharePres))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.shareEad))]),_vm._v(" "),_c('td'),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.sharePresPrev))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.shareEadPrev))])])])])])])])])])]),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("FATURAMENTO/ORDEM Acumulado")]),_vm._v(" "),_c('comparing-chart',{ref:"cumMeanIncomeChart",attrs:{"export-name":"ticket_medio_acumulado"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("FATURAMENTO/ORDEM ( Médial móvel )")]),_vm._v(" "),_c('comparing-chart',{ref:"meanIncomeChart",attrs:{"export-name":"ticket_medio_acumulado"}})],1)])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n          Painel do Qualidade\n        ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Linha de Produto")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":""}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("Customizado")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th'),_vm._v(" "),_c('th',[_vm._v("META (R$)")]),_vm._v(" "),_c('th',[_vm._v("REALIZADO (R$)")]),_vm._v(" "),_c('th',[_vm._v("VELOCIMETRO (%)")]),_vm._v(" "),_c('th',{staticStyle:{"width":"100px","background-color":"#3B4347"}}),_c('th',[_vm._v("VELOCIMETRO (%)")]),_vm._v(" "),_c('th',{staticStyle:{"width":"100px","background-color":"#3B4347"}}),_c('th',[_vm._v("REALIZADO (R$)")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{attrs:{"colspan":"2"}}),_vm._v(" "),_c('th',{attrs:{"colspan":"2"}},[_vm._v("DATA ATUAL")]),_vm._v(" "),_c('th',{staticStyle:{"width":"200px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',{attrs:{"colspan":"1"}},[_vm._v("ANO ANTERIOR")])]),_vm._v(" "),_c('tr',[_c('th'),_vm._v(" "),_c('th',[_vm._v("META (R$)")]),_vm._v(" "),_c('th',[_vm._v("REALIZADO (R$)")]),_vm._v(" "),_c('th',[_vm._v("VELOCIMETRO (%)")]),_vm._v(" "),_c('th',{staticStyle:{"width":"200px","background-color":"#3B4347"}}),_vm._v(" "),_c('th',[_vm._v("REALIZADO (R$)")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{attrs:{"colspan":"5"}},[_vm._v("VELOCÍMETRO (%)")])]),_vm._v(" "),_c('tr',[_c('th',{attrs:{"colspan":"2"}},[_vm._v("ATUAL")])]),_vm._v(" "),_c('tr',[_c('th',[_vm._v("SEMESTRE")]),_vm._v(" "),_c('th',[_vm._v("7 DIAS")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{attrs:{"colspan":"5"}},[_vm._v("SHARE MODALIDADES (%)")])]),_vm._v(" "),_c('tr',[_c('th',{attrs:{"colspan":"2"}},[_vm._v("ATUAL")]),_vm._v(" "),_c('th',{staticStyle:{"width":"200px","background-color":"#3B4347"}}),_c('th',{attrs:{"colspan":"2"}},[_vm._v("ANO ANTERIOR")])]),_vm._v(" "),_c('tr',[_c('th',[_vm._v("PRESENCIAL")]),_vm._v(" "),_c('th',[_vm._v("EAD + SEMI")]),_vm._v(" "),_c('th',{staticStyle:{"width":"200px","background-color":"#3B4347"}}),_c('th',[_vm._v("PRESENCIAL")]),_vm._v(" "),_c('th',[_vm._v("EAD + SEMI")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-57c9faba", __vue__options__)
  } else {
    hotAPI.reload("data-v-57c9faba", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/quality-stats.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true
    };
  },

  components: {
    CDatePicker: _customDatePicker2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    BaseChart: _baseChart2.default
  },
  mounted: function mounted() {
    var _this = this;

    QualityStatsChannel.on('chartData', function (payload) {
      return _this.receiveChartData(payload);
    });

    this.loadData();
  },

  methods: {
    loadData: function loadData() {
      QualityStatsChannel.push('loadData').receive('timeout', function () {
        console.log('load timeout');
      });
    },
    receiveChartData: function receiveChartData(data) {
      console.log('receiveChartData');
      this.$refs.spTasksChart.setLabels(data.dates);
      this.$refs.spTasksChart.setSeries(0, data.tasks_sp_relacionamento, "Relacionamento");
      this.$refs.spTasksChart.setSeries(1, data.tasks_sp_siteops, "SiteOps");
      this.$refs.spTasksChart.setSeries(2, data.tasks_sp_integracao, "Integracao");
      this.$refs.spTasksChart.setSeries(3, data.tasks_sp_farmer, "Manual");
      this.$refs.spTasksChart.updateChart();

      this.$refs.handlingTasksChart.setLabels(data.dates);
      this.$refs.handlingTasksChart.setSeries(0, data.tasks_tratamento_relacionamento, "Relacionamento");
      this.$refs.handlingTasksChart.setSeries(1, data.tasks_tratamento_siteops, "SiteOps");
      this.$refs.handlingTasksChart.setSeries(2, data.tasks_tratamento_integracao, "Integracao");
      this.$refs.handlingTasksChart.setSeries(3, data.tasks_tratamento_farmer, "Manual");
      this.$refs.handlingTasksChart.updateChart();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-heading"},[_vm._v("\n          Tasks Secretary Pitch por dia\n        ")]),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('base-chart',{ref:"spTasksChart",attrs:{"base-height":600,"export-name":'alunos_perdidos_' + _vm.universityName}})],1)])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-heading"},[_vm._v("\n          Tasks tratamento por dia\n        ")]),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('base-chart',{ref:"handlingTasksChart",attrs:{"base-height":600,"export-name":'alunos_perdidos_' + _vm.universityName}})],1)])])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Estatísticas de tasks do Qualidade\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-25954f03", __vue__options__)
  } else {
    hotAPI.reload("data-v-25954f03", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/refund-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    var _this = this;

    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],

      dateRange: null,
      filterUniversities: null,
      filterGroups: null,
      shortcuts: [{
        text: '<< 6 m',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.semesterStart).subtract(6, 'months').toDate(), (0, _moment2.default)(_this.semesterEnd).subtract(6, 'months')];
        }
      }, {
        text: 'Semestre',
        onClick: function onClick() {
          _this.dateRange = [_this.semesterStart, _this.semesterEnd];
        }
      }, {
        text: 'Últimos 30',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(30, 'days').toDate(), new Date()];
        }
      }, {
        text: 'Últimos 7',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)().subtract(7, 'days').toDate(), new Date()];
        }
      }, {
        text: '<< 7 d',
        onClick: function onClick() {
          _this.dateRange = [(0, _moment2.default)(_this.dateRange[0]).subtract(7, 'days').toDate(), _this.dateRange[0]];
        }
      }, {
        text: 'Até hoje',
        onClick: function onClick() {
          _this.dateRange = [_this.dateRange[0], (0, _moment2.default)().toDate()];
        }
      }],

      statusOptions: [],
      reasonsOptions: [],

      filterKinds: null,
      filterLevels: null,
      filterReason: null,
      filterStatus: null,
      filterCpf: null,

      tableData: [],
      currentRefundData: null,
      table: null,

      loadingFilters: true,
      dataLoading: false,
      refundDataLoading: false,
      semesterEnd: null,
      semesterStart: null,
      statuses: {
        open: 'Novo',
        refund_request_open: 'No financeiro',
        no_contact_email: 'Sem contato',
        reverted: 'Revertido',
        rejected: 'Rejeitado',
        canceled: 'Cancelado'
      }
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    CDatePicker: _customDatePicker2.default,
    ModalDialog: _modalDialog2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    RefundChannel.on('filters', function (payload) {
      return _this2.receiveFilters(payload);
    });
    RefundChannel.on('tableData', function (payload) {
      return _this2.receiveTableData(payload);
    });
    RefundChannel.on('refundData', function (payload) {
      return _this2.receiveRefundData(payload);
    });

    this.loadFilters();
  },

  methods: {
    receiveRefundData: function receiveRefundData(data) {
      this.refundDataLoading = false;
    },
    showRefundModal: function showRefundModal(refundData) {
      this.currentRefundData = refundData;
      this.$refs.refundModal.show();
    },
    primaryFilterSelected: function primaryFilterSelected(data) {
      console.log('receiveFilters data: ' + (0, _stringify2.default)(data));
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.universityGroupOptions = data.groups;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.semesterStart = data.semester_start;
      this.semesterEnd = data.semester_end;

      this.statusOptions = data.status;
      this.reasonsOptions = data.reasons;

      this.dateRange = [(0, _moment2.default)(this.semesterStart).toDate(), (0, _moment2.default)(this.semesterEnd).toDate()];

      this.loadingFilters = false;
    },
    receiveTableData: function receiveTableData(data) {
      var _this3 = this;

      console.log("receiveTableData#");
      this.tableData = data.bos;

      this.$nextTick(function () {
        _this3.table = new _datatable2.default('#bo-table', {
          buttons: [{ extend: 'copy', exportOptions: { columns: ':visible' } }, { extend: 'excel', exportOptions: { columns: ':visible' } }],
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30,
          order: [16, 'desc'],
          columnDefs: [{ orderData: [15], targets: [14] }, { targets: [15], visible: false, searchable: false }, { orderData: [17], targets: [16] }, { targets: [17], visible: false, searchable: false }, { orderData: [19], targets: [18] }, { targets: [19], visible: false, searchable: false }, { orderData: [21], targets: [20] }, { targets: [21], visible: false, searchable: false }]
        });
      });

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      RefundChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      this.dataLoading = true;
      this.tableData = [];

      var initialDate = this.dateRange[0];
      var finalDate = this.dateRange[1];

      var filter = {};
      filter.universities = this.filterUniversities;
      filter.groups = this.filterGroups;
      filter.reasons = this.filterReason;
      filter.status = this.filterStatus;
      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;
      filter.cpf = this.filterCpf;
      filter.initialDate = initialDate;
      filter.finalDate = finalDate;

      RefundChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('modal-dialog',{ref:"refundModal",attrs:{"identification":_vm.stock-_vm.modal}},[_c('div',{staticClass:"modal-header"},[_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("×")]),_vm._v(" "),_c('h2',{staticClass:"modal-title"},[_vm._v("DETALHES DO REEMBOLSO")])]),_vm._v(" "),(_vm.currentRefundData)?_c('div',{staticClass:"modal-body"},[(_vm.refundDataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('label',[_vm._v("CPF:")]),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.currentRefundData.cpf))]),_vm._v(" "),_c('label',[_vm._v("OBSERVAÇÔES")]),_vm._v(" "),_c('p',[_vm._v(_vm._s(_vm.currentRefundData.observations))])]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"modal-footer"},[_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("Fechar")])])]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts},model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.universityOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Selecione as universidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.universityValueSelected},model:{value:(_vm.filterUniversities),callback:function ($$v) {_vm.filterUniversities=$$v},expression:"filterUniversities"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("GRUPOS")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.universityGroupOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Selecione os grupos","selectLabel":"","deselectLabel":""},on:{"input":_vm.universityValueSelected},model:{value:(_vm.filterGroups),callback:function ($$v) {_vm.filterGroups=$$v},expression:"filterGroups"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("STATUS")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.statusOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os status","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterStatus),callback:function ($$v) {_vm.filterStatus=$$v},expression:"filterStatus"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("MOTIVO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.reasonsOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os motivos","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterReason),callback:function ($$v) {_vm.filterReason=$$v},expression:"filterReason"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-3 col-sm-6"},[_c('div',{staticClass:"form-text-input"},[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CPF")]),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCpf),expression:"filterCpf"}],staticClass:"multiselect__input",staticStyle:{"color":"#647383","padding-left":"10px","height":"40px"},attrs:{"placeholder":"Filtro por cpf","type":"text"},domProps:{"value":(_vm.filterCpf)},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.loadData($event)},"input":function($event){if($event.target.composing){ return; }_vm.filterCpf=$event.target.value}}})])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          REEMBOLSOS\n        ")]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('table',{staticClass:"data-table data-table-tiny data-table-no-wrap",attrs:{"id":"bo-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',{staticClass:"clickable",on:{"click":function($event){return _vm.showRefundModal(entry)}}},[_c('td',[_vm._v(_vm._s(entry.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.education_group))]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(entry.carteira))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.farmer))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.quali))]),_vm._v(" "),_c('td',{staticClass:"no-wrap"},[_vm._v(_vm._s(entry.cpf))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(_vm.statuses[entry.status]))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.campus))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.reason))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.order_created))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.order_created_raw))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.order_paid))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.order_paid_raw))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.creation_date))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.creation_date_raw))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.update_date))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.update_date_raw))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.coupon_price))])])}),0)])])]):_vm._e()])])])],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel de Reembolsos\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{staticClass:"no-wrap"},[_c('span',{staticClass:"small-padding-right"},[_vm._v("ID IES")])]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Grupo")]),_vm._v(" "),_c('th',[_vm._v("Carteira")]),_vm._v(" "),_c('th',[_vm._v("Farmer")]),_vm._v(" "),_c('th',[_vm._v("Quali")]),_vm._v(" "),_c('th',[_vm._v("CPF")]),_vm._v(" "),_c('th',[_vm._v("Status")]),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("Campus")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Modalidade")])]),_vm._v(" "),_c('th',[_vm._v("Nível")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Turno")])]),_vm._v(" "),_c('th',[_vm._v("Motivo")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Data de criação da ordem")])]),_vm._v(" "),_c('th',[_vm._v("Data de criação da ordem R")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Data de pagamento da ordem")])]),_vm._v(" "),_c('th',[_vm._v("Data de pagamento da ordem R")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Data de criação")])]),_vm._v(" "),_c('th',[_vm._v("Data de criação R")]),_vm._v(" "),_c('th',[_c('span',{staticClass:"small-padding-right"},[_vm._v("Data de atualização")])]),_vm._v(" "),_c('th',[_vm._v("Data de atualização R")]),_vm._v(" "),_c('th',[_vm._v("Taxa Pré-Matrícula")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-30751cad", __vue__options__)
  } else {
    hotAPI.reload("data-v-30751cad", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/sazonality-chart.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loadingSazonality: true,
      currentPercent: null,
      sazonalityOptions: [],
      sazonalityDates: [],
      rawSazonality: [],
      sazonalityOption: null
    };
  },

  components: {
    ComparingChart: _comparingChart2.default
  },
  computed: {
    hasSazonalityOptions: function hasSazonalityOptions() {
      return this.sazonalityOptions.length > 0;
    }
  },
  props: ['value'],
  watch: {
    sazonalityOption: function sazonalityOption(value) {
      this.$emit('input', value);
    }
  },
  methods: {
    setLoader: function setLoader() {
      this.loadingSazonality = true;
    },
    setCurrentSazonality: function setCurrentSazonality(data) {
      var _this = this;

      this.sazonalityDates = data.dates;
      this.rawSazonality = data.raw_daily_contribution;
      this.sazonalityOptions = data.sazonality_options;
      this.sazonalityOption = data.current_sazonality;

      this.currentPercent = data.current_value_cum_contribution;

      this.$refs.cumSazonality.setXTick(false);
      this.$refs.cumSazonality.setYMax(100);
      this.$refs.cumSazonality.setLabels(data.dates);
      this.$refs.cumSazonality.setSeries(0, data.cum_contribution, "Sazonalidade Acumuldada");
      this.$refs.cumSazonality.setSeriesWithOptions(1, data.current_cum_contribution, "Atual", { seriesColor: '#fdc029', fill: true });
      this.$refs.cumSazonality.resetLoader();

      this.$refs.sazonality.setXTick(false);
      this.$refs.sazonality.setYTick(false);
      this.$refs.sazonality.setLabels(data.dates);
      this.$refs.sazonality.setSeries(0, data.daily_contribution, "Sazonalidade");
      this.$refs.sazonality.setSeriesWithOptions(1, data.current_daily_contribution, "Atual", { seriesColor: '#fdc029', fill: true });
      this.$refs.sazonality.resetLoader();

      this.$refs.cumSazonality.updateChart();
      this.$refs.sazonality.updateChart();

      this.$nextTick(function () {
        _this.loadingSazonality = false;
      });
    },
    exportSazonalityData: function exportSazonalityData() {
      var _this2 = this;

      var filename = "sazonalidade" + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
      var content = "Data;Sazonalidade\n";
      _lodash2.default.each(this.sazonalityDates, function (item, itemIndex) {
        content = content + item + ";" + _this2.rawSazonality[itemIndex] + "\n";
      });

      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.loadingSazonality)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('span',{staticStyle:{"color":"#c2c9cb","display":"flex","justify-content":"center"}},[_c('b',[_vm._v("Sazonalidade: ")]),_vm._v(" "),_c('span',{staticStyle:{"padding-left":"5px"}},[_vm._v(_vm._s(_vm.currentPercent))]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-download-alt clickable",staticStyle:{"padding-left":"5px"},on:{"click":_vm.exportSazonalityData}}),_vm._v(" "),(_vm.hasSazonalityOptions)?[_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.sazonalityOption),expression:"sazonalityOption"}],staticStyle:{"color":"#000000","background-color":"#ffffff","border-radius":"5px","margin-left":"10px"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.sazonalityOption=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_vm._l((_vm.sazonalityOptions),function(option){return [_c('option',{domProps:{"value":option.id}},[_vm._v("\n                 "+_vm._s(option.name)+"\n               ")])]})],2)]:_vm._e()],2),_vm._v(" "),_c('comparing-chart',{ref:"cumSazonality",attrs:{"export-link":false,"base-height":150,"export-name":"sazonalidade_acumulada"}}),_vm._v(" "),_c('comparing-chart',{ref:"sazonality",attrs:{"export-link":false,"base-height":150,"export-name":"sazonalidade"}})],1)])])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2c541bc7", __vue__options__)
  } else {
    hotAPI.reload("data-v-2c541bc7", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/scatter-chart.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _scatterChart = require('../js/components/vue-charts/scatter-chart');

var _scatterChart2 = _interopRequireDefault(_scatterChart);

var _chart = require('chart.js');

var _chart2 = _interopRequireDefault(_chart);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: false,
      baseSeriesColors: ['#35b6cc', '#fdc029', '#09b67c', '#bf265f'],
      chartData: {
        labels: [],
        datasets: []
      },
      exportChartData: {
        labels: [],
        datasets: []
      },
      exportChartOptions: {},
      chartOptions: {
        layout: {
          padding: {
            left: 0,
            right: 0,
            top: 50,
            bottom: 0
          }
        },
        tooltips: {
          enabled: true
        },
        extended: {
          drawRectangles: false,
          rectangles: [],
          drawValuesInChart: false,
          drawPercentageValuesInChart: false,
          useAlternativeDataSet: false
        },
        animation: false,
        responsive: true,
        maintainAspectRatio: false,
        legend: {
          position: 'bottom',
          labels: {
            fontColor: 'white',
            usePointStyle: true
          },
          onClick: this.onLegendClick
        },
        elements: { point: { radius: 2 } },
        scales: {
          xAxes: [{
            ticks: {
              display: true,
              fontColor: '#ffffff'
            },
            gridLines: {
              display: true,
              drawBorder: true
            },
            style: {
              color: '#ffffff'
            }
          }],
          yAxes: [{
            position: 'left',
            id: 'y-axis-0',
            ticks: {
              beginAtZero: true,
              display: true,
              fontColor: '#ffffff'
            }
          }, {
            position: 'right',
            id: 'y-axis-1',
            ticks: {
              display: true,
              fontColor: '#ffffff'
            }
          }]
        }
      }
    };
  },
  mounted: function mounted() {
    this.copyOptionsToExport();
  },

  props: {
    exportName: String,
    exportLink: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    baseHeight: {
      type: Number,
      default: function _default() {
        return 300;
      }
    }
  },
  components: {
    ScatterChart: _scatterChart2.default
  },
  computed: {
    exportFileName: function exportFileName() {
      if (_lodash2.default.isNil(this.exportName)) {
        return "chart.png";
      }
      return this.exportName + '.png';
    }
  },
  methods: {
    nDots: function nDots(input) {
      if (typeof input === 'number') {
        return 1;
      }

      var nDots = 0;
      var i = -1;
      while ((i = input.indexOf('.', i + 1)) != -1) {
        nDots++;
      }
      return nDots;
    },
    removeAditionalDots: function removeAditionalDots(input) {
      var first = input.indexOf('.');
      var i = -1;

      while ((i = input.indexOf('.', first + 1)) != -1) {
        input = input.slice(0, i) + input.slice(i + 1);
      }
      return eval(input);
    },
    emptyNull: function emptyNull(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      return value;
    },
    exportData: function exportData() {
      var baseName = this.exportName;
      if (_lodash2.default.isNil(baseName)) {
        baseName = 'scatter_data';
      }
      var filename = baseName + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
      var content = "Indice";

      if (!_lodash2.default.isNil(this.chartOptions.scales.xAxes[0].scaleLabel.labelString)) {
        content = this.chartOptions.scales.xAxes[0].scaleLabel.labelString;
      }
      for (var i = 0; i < this.chartData.datasets.length; i++) {
        content = content + ';' + this.chartData.datasets[i].label;
      }
      content = content + '\n';

      var firstDataset = this.chartData.datasets.values().next().value;
      for (var row = 0; row < firstDataset.data.length; row++) {
        content = content + firstDataset.data[row].x;
        for (var i = 0; i < this.chartData.datasets.length; i++) {
          content = content + ';' + this.emptyNull(this.chartData.datasets['' + i].data[row].y);
        }
        content = content + '\n';
      }
      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    },
    solvePlotData: function solvePlotData(point, index) {
      var _this = this;

      var chartInstance = this.$refs.chart.$data._chart;
      var mappedData = _lodash2.default.map(chartInstance.data.datasets[index].data, function (entry) {
        return { _model: { x: entry.x, y: entry.y, skip: false } };
      });

      var curve = _chart2.default.helpers.splineCurveMonotone(mappedData);


      var finalMapped = _lodash2.default.reduce(mappedData, function (acc, entry) {
        if (!_lodash2.default.isNil(entry._model["controlPointPreviousX"])) {
          var xValue = eval(entry._model["controlPointPreviousX"]);
          var yValue = entry._model["controlPointPreviousY"];
          if (typeof yValue === 'string') {
            if (yValue.indexOf('-') != -1) {
              yValue = eval(yValue);
            } else {
              if (_this.nDots(yValue) > 1) {
                yValue = _this.removeAditionalDots(yValue);
              } else {
                yValue = eval(yValue);
              }
            }
          }

          acc.push({ x: xValue, y: yValue });
        }
        acc.push({ x: entry._model.x, y: entry._model.y });
        if (!_lodash2.default.isNil(entry._model["controlPointNextX"])) {
          var _xValue = eval(entry._model["controlPointNextX"]);
          var _yValue = entry._model["controlPointNextY"];
          if (typeof _yValue === 'string') {
            if (_yValue.indexOf('-') != -1) {
              _yValue = eval(_yValue);
            } else {
              if (_this.nDots(_yValue) > 1) {
                _yValue = _this.removeAditionalDots(_yValue);
              } else {
                _yValue = eval(_yValue);
              }
            }
          }

          acc.push({ x: _xValue, y: _yValue });
        }
        return acc;
      }, []);

      var xScale = point.x;
      var yScale = point.y;

      if (_lodash2.default.isNil(yScale)) {

        var current = null;
        for (var j = 0; j < finalMapped.length; j++) {
          var next = finalMapped[j];
          var xPoint = point.x;
          if (!_lodash2.default.isNil(current)) {
            if (current.x > next.x) {
              if (xPoint > next.x && xPoint <= current.x) {
                console.log("yScale) ESTA DETRO DO INTERVALO 1 (" + current.x + ", " + current.y + ") - (" + next.x + ", " + next.y + ")");

                var diffX = current.x - next.x;
                var diffY = current.y - next.y;

                var minY = next.y;
                var refX = current.x;
                if (diffY < 0) {
                  diffY = next.y - current.y;
                  refX = next.x;
                  minY = current.y;
                }

                var relation = diffY / diffX;

                var xRelationDelta = xPoint - refX;
                if (xRelationDelta < 0) {
                  xRelationDelta = refX - xPoint;
                }
                var yInterpolated = xRelationDelta * relation + eval(minY);


                yScale = yInterpolated;
              }
            } else {
              if (xPoint > current.x && xPoint <= next.x) {
                console.log("yScale) ESTA DETRO DO INTERVALO 2 (" + current.x + ", " + current.y + ") - (" + next.x + ", " + next.y + ")");
              }
            }
          }

          current = next;
        }
      }

      if (_lodash2.default.isNil(xScale)) {
        var current = null;
        for (var j = 0; j < finalMapped.length; j++) {
          var _next = finalMapped[j];
          var yPoint = point.y;
          if (!_lodash2.default.isNil(current)) {
            if (current.y > _next.y) {
              if (yPoint > _next.y && yPoint <= current.y) {
                console.log("xScale) ESTA DETRO DO INTERVALO 1 (" + current.x + ", " + current.y + ") - (" + _next.x + ", " + _next.y + ")");
              }
            } else {
              if (yPoint > current.y && yPoint <= _next.y) {
                var _diffY = _next.y - current.y;

                var diffX = _next.x - current.x;
                var minX = current.x;
                var refY = current.y;
                if (diffX < 0) {
                  diffX = current.x - _next.x;
                  minX = _next.x;
                  refY = _next.y;
                }
                var _relation = diffX / _diffY;

                var yRelationDelta = yPoint - refY;
                if (yRelationDelta < 0) {
                  yRelationDelta = refY - yPoint;
                }
                var xInterpolated = yRelationDelta * _relation + eval(minX);

                xScale = xInterpolated;
              }
            }
          }
          current = _next;
        }
      }
      return { x: xScale, y: yScale };
    },
    onLegendClick: function onLegendClick(eventData, legendItem) {
      var _this2 = this;

      var index = legendItem.datasetIndex;
      var currentChart = this.$refs.chart.$data._chart;

      var meta = currentChart.getDatasetMeta(index);

      if (meta.hidden === null) {
        meta.hidden = true;
      } else {
        meta.hidden = null;
      }

      currentChart.update();

      var exportChart = this.$refs.exportChart.$data._chart;

      var newExportSet = [];
      _lodash2.default.each(this.chartData.datasets, function (entry, index) {
        var meta = currentChart.getDatasetMeta(index);
        if (meta.hidden) {} else {
          newExportSet.push(_this2.chartData.datasets[index]);
        }
      });

      this.exportChartData.datasets = newExportSet;

      exportChart.update();

      this.setExportChartLink();
    },
    setRectangles: function setRectangles(rectangles) {
      this.chartOptions.extended.drawRectangles = true;
      this.chartOptions.extended.rectangles = rectangles;
    },
    setXAxisTitle: function setXAxisTitle(index, label) {
      this.chartOptions.scales.xAxes[index].scaleLabel = {};
      this.chartOptions.scales.xAxes[index].scaleLabel.labelString = label;
      this.chartOptions.scales.xAxes[index].scaleLabel.display = true;
      this.chartOptions.scales.xAxes[index].scaleLabel.fontColor = '#ffffff';
    },
    setYAxisTitle: function setYAxisTitle(index, label) {
      this.chartOptions.scales.yAxes[index].scaleLabel = {};
      this.chartOptions.scales.yAxes[index].scaleLabel.labelString = label;
      this.chartOptions.scales.yAxes[index].scaleLabel.display = true;
      this.chartOptions.scales.yAxes[index].scaleLabel.fontColor = '#ffffff';
    },
    clearSeries: function clearSeries() {
      while (this.chartData.datasets.length > 0) {
        this.chartData.datasets.splice(0, 1);
        this.exportChartData.datasets.splice(0, 1);
      }
      this.updateChart();
    },
    copyOptionsToExport: function copyOptionsToExport() {
      this.exportChartOptions = _lodash2.default.cloneDeep(this.chartOptions);
      this.exportChartOptions.legend.labels.fontSize = 16;
      this.exportChartOptions.legend.labels.fontColor = '#000000';
      this.exportChartOptions.extended.drawValuesColor = '#000000';

      if (!_lodash2.default.isNil(this.exportChartOptions.extended)) {
        if (!_lodash2.default.isNil(this.exportChartOptions.extended.rectangles)) {
          _lodash2.default.each(this.exportChartOptions.extended.rectangles, function (entry) {
            entry.legendColor = '#000000';
          });
        }
      }

      _lodash2.default.each(this.exportChartOptions.scales.yAxes, function (entry) {
        if (!_lodash2.default.isNil(entry.scaleLabel)) {
          entry.scaleLabel.fontSize = 16;
          entry.scaleLabel.fontColor = '#000000';
          entry.ticks.fontSize = 16;
          entry.ticks.fontColor = '#000000';
        }
      });

      _lodash2.default.each(this.exportChartOptions.scales.xAxes, function (entry) {
        if (!_lodash2.default.isNil(entry.scaleLabel)) {
          entry.scaleLabel.fontSize = 16;
          entry.scaleLabel.fontColor = '#000000';
          entry.ticks.fontSize = 16;
          entry.ticks.fontColor = '#000000';
        }
      });
    },
    setDisplayLegend: function setDisplayLegend(value) {
      this.chartOptions.legend.display = value;
    },
    setYBeginAtZero: function setYBeginAtZero(value) {
      this.chartOptions.scales.yAxes[0].ticks.beginAtZero = value;
    },
    setAlternativeDataSet: function setAlternativeDataSet(value) {
      this.chartOptions.extended.useAlternativeDataSet = value;
    },
    setToolTips: function setToolTips(value) {
      this.chartOptions.tooltips.enabled = value;
    },
    setDrawValues: function setDrawValues(value) {
      this.chartOptions.extended.drawValuesInChart = value;
      this.chartOptions.extended.drawValuesColor = '#ffffff';
    },
    setYMax: function setYMax(value) {
      this.chartOptions.scales.yAxes[0].ticks.max = value;
      this.updateChart();
    },
    setLoader: function setLoader() {
      this.loading = true;
    },
    resetLoader: function resetLoader() {
      this.loading = false;
    },
    updateChart: function updateChart() {
      this.$refs.chart.updateChart();
      this.copyOptionsToExport();
      this.$refs.exportChart.updateChart();

      this.setExportChartLink();
    },
    setExportChartLink: function setExportChartLink() {
      var _this3 = this;

      this.$nextTick(function () {
        if (_this3.exportLink) {
          var element = _this3.$refs.exportChart.$data._chart.canvas;
          var chart_data = element.toDataURL("image/jpg");
          _this3.$refs.exportLink.href = chart_data;
        }
      });
    },
    setLabels: function setLabels(labels) {
      this.chartData.labels = labels;
    },
    setSeries: function setSeries(index, data, title) {
      this.setSeriesWithOptions(index, data, title, {});
    },
    setSeriesWithOptions: function setSeriesWithOptions(index, data, title, options) {
      if (index >= this.chartData.datasets.length) {
        var color = options.seriesColor;
        var fill = options.fill;
        if (_lodash2.default.isNil(color)) {
          color = this.baseSeriesColors[index];
        }
        if (_lodash2.default.isNil(fill)) {
          fill = false;
        }
        this.chartData.datasets.push({
          label: '',
          backgroundColor: color,
          borderColor: color,
          data: [],
          labelsData: [],
          fill: fill,
          borderWidth: 3,
          showLine: true,
          xAxisID: 'x-axis-1',
          yAxisID: 'y-axis-' + index,
          cubicInterpolationMode: 'monotone'
        });
      }
      this.chartData.datasets[index].data = data;
      this.chartData.datasets[index].label = title;

      if (options.labelsData) {
        this.chartData.datasets[index].labelsData = options.labelsData;
      }

      this.exportChartData = _lodash2.default.cloneDeep(this.chartData);
      _lodash2.default.each(this.exportChartData.datasets, function (dataset) {
        dataset.borderWidth = 3;
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"position":"relative"}},[(_vm.loading)?_c('div',{staticClass:"loader-container centered-loader-container"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.exportLink),expression:"exportLink"}],staticStyle:{"display":"flex","justify-content":"flex-end"}},[_c('div',{staticClass:"dropdown",staticStyle:{"height":"auto !important","border":"0 !important"},attrs:{"data-ref":"export-data"}},[_vm._m(0),_vm._v(" "),_c('ul',{staticClass:"dropdown-menu dropdown-menu-right"},[_c('li',[_c('a',{ref:"exportLink",staticClass:"clickable",attrs:{"download":_vm.exportFileName}},[_vm._v("Figura")])]),_vm._v(" "),_c('li',[_c('a',{staticClass:"clickable",on:{"click":function($event){return _vm.exportData()}}},[_vm._v("Dados")])])])])]),_vm._v(" "),_c('scatter-chart',{ref:"chart",attrs:{"data":_vm.chartData,"options":_vm.chartOptions,"height":_vm.baseHeight}}),_vm._v(" "),_c('scatter-chart',{ref:"exportChart",staticStyle:{"z-index":"-1","position":"absolute","width":"100%","top":"19px"},attrs:{"data":_vm.exportChartData,"options":_vm.exportChartOptions,"height":_vm.baseHeight}})],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{"height":"auto !important"},attrs:{"data-toggle":"dropdown"}},[_c('span',{staticClass:"glyphicon glyphicon-download"})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-e546647e", __vue__options__)
  } else {
    hotAPI.reload("data-v-e546647e", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/search-ranking-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

var _export = require('../js/utils/export');

var _export2 = _interopRequireDefault(_export);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      meanRank: null,

      filterKinds: null,
      filterLevels: null,
      filterCity: null,

      tableData: [],
      table: null,
      hasChartData: false,

      loadingFilters: true,
      dataLoading: false,
      currentFilter: null
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    BaseChart: _baseChart2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this = this;

    SearchRankingChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });

    SearchRankingChannel.on('chartData', function (payload) {
      return _this.receiveChartData(payload);
    });
    SearchRankingChannel.on('exportData', function (payload) {
      return _this.receiveExportData(payload);
    });

    SearchRankingChannel.on('citiesFilters', function (payload) {
      return _this.receiveCitiesFilters(payload);
    });

    this.loadFilters();
  },

  methods: {
    universitySelected: function universitySelected() {
      this.completeCities();
    },
    loadCities: function loadCities() {},
    loadCampuses: function loadCampuses() {
      console.log('loadCampuses');
    },
    primaryFilterSelected: function primaryFilterSelected() {},
    receiveCitiesFilters: function receiveCitiesFilters(data) {
      this.citiesOptions = data.cities;
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.locationOptions = data.locationTypes;

      this.loadingFilters = false;
    },
    emptyNull: function emptyNull(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      return value;
    },
    receiveExportData: function receiveExportData(data) {
      var _this2 = this;

      this.dataLoading = false;
      console.log("receiveExportData");

      var content = 'rank;pagina;id_curso;curso;cidade;pagos\n';
      _lodash2.default.each(data.skus, function (entry, entryIndex) {
        content = content + entry['rank'] + ';' + entry['pagina'] + ';' + entry['id_curso'] + ';' + entry['curso'] + ';' + entry['cidade'] + ';' + _this2.emptyNull(entry['pagos']) + '\n';
      });
      (0, _export2.default)("skus.csv", content);
    },
    receiveChartData: function receiveChartData(data) {
      var _this3 = this;

      console.log("receiveChartData#");

      this.hasChartData = true;
      this.meanRank = data.mean_rank;

      this.$refs.rankingChart.setYBeginAtZero(true);

      this.$refs.rankingChart.setLabels(data.pages);
      this.$refs.rankingChart.setSeries(0, data.counts, "Página");

      this.$nextTick(function () {
        _this3.$refs.rankingChart.updateChart();
      });

      this.dataLoading = false;
    },
    completeCities: function completeCities() {
      var filter = this.getFilters();
      console.log("filter: " + (0, _stringify2.default)(filter));
      if (_lodash2.default.isNil(filter.value) || filter.value == '') {
        this.citiesOptions = [];
        return;
      }

      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;
      SearchRankingChannel.push('completeCities', filter).receive('timeout', function (data) {
        console.log('cities complete timeout');
      });
    },
    loadFilters: function loadFilters() {
      SearchRankingChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    exportSkus: function exportSkus() {
      this.dataLoading = true;
      SearchRankingChannel.push('exportSkus', this.currentFilter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    },
    getFilters: function getFilters() {
      if (_lodash2.default.isNil(this.filterUniversity)) {
        return;
      }
      var filters = {
        value: this.filterUniversity
      };
      return filters;
    },
    loadData: function loadData() {
      var filter = this.getFilters();
      if (_lodash2.default.isNil(filter) || filter.value == '') {
        alert('Selecione uma IES');
        return;
      }

      if (_lodash2.default.isNil(this.filterCity)) {
        alert('Selecione a cidade');
        return;
      }

      if (_lodash2.default.isNil(this.filterKinds)) {
        alert('Selecione a modalidade');
        return;
      }

      this.meanRank = null;
      this.dataLoading = true;
      this.tableData = [];
      this.$refs.rankingChart.clearSeries();
      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;
      filter.state = this.filterCity.state;
      filter.city = this.filterCity.city;

      this.currentFilter = filter;

      SearchRankingChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","track-by":"id","placeholder":"Selecione a universidade","selectLabel":"","deselectLabel":""},on:{"input":_vm.universitySelected},model:{value:(_vm.filterUniversity),callback:function ($$v) {_vm.filterUniversity=$$v},expression:"filterUniversity"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"alow-empty":false,"options":_vm.citiesOptions,"label":"name","track-by":"name","placeholder":"Selecione a cidade","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterCity),callback:function ($$v) {_vm.filterCity=$$v},expression:"filterCity"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"alow-empty":false,"options":_vm.kindOptions,"label":"name","track-by":"id","placeholder":"Selecione uma modalidade","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasChartData),expression:"hasChartData"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          QUANTIDADE DE SKU's x Página rankeada\n\n          "),_c('span',{staticClass:"clickable",staticStyle:{"float":"right"},on:{"click":_vm.exportSkus}},[_vm._v("\n            Exportar SKU's\n          ")]),_vm._v(" "),(_vm.meanRank)?_c('p',[_vm._v("\n            Score médio: "+_vm._s(_vm.meanRank)+"\n          ")]):_vm._e()]),_vm._v(" "),_c('base-chart',{ref:"rankingChart",attrs:{"base-height":600,"export-name":'rankeamento_na_busca'}})],1)])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Ranking de busca ( Graduação )\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4bdb8df4", __vue__options__)
  } else {
    hotAPI.reload("data-v-4bdb8df4", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/search-shows-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _export = require('../js/utils/export');

var _export2 = _interopRequireDefault(_export);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],

      kindOptions: [],
      levelOptions: [],

      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      accountTypeOptions: [],

      groupOptions: [],

      filterKinds: null,
      filterLevels: null,
      filterCity: null,

      tableData: [],
      table: null,
      hasChartData: false,

      loadingFilters: true,
      dataLoading: false,

      dateRange: [],
      hasCompareChartData: false
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    BaseChart: _baseChart2.default,
    ComparingChart: _comparingChart2.default,
    CDatePicker: _customDatePicker2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this = this;

    SearchShowsChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    SearchShowsChannel.on('chartData', function (payload) {
      return _this.receiveChartData(payload);
    });
    SearchShowsChannel.on('comparingChartData', function (payload) {
      return _this.receiveCompragingChartData(payload);
    });

    SearchShowsChannel.on('chartDataEx', function (payload) {
      return _this.receiveChartDataEx(payload);
    });

    var yAxesConfig = [{
      position: 'left',
      id: 'y-axis-0',
      ticks: {
        display: true,
        fontColor: '#ffffff'
      }
    }, {
      position: 'right',
      id: 'y-axis-1',
      ticks: {
        display: true,
        fontColor: '#ffffff'
      }
    }];

    this.$refs.rankingChart.setYAxes(yAxesConfig);
    this.$refs.rankingChartEx.setYAxes(yAxesConfig);

    this.loadFilters();
  },

  methods: {
    primaryFilterSelected: function primaryFilterSelected() {
      console.log("primaryFilterSelected");
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.universityGroupOptions = data.groups;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.locationOptions = data.locationTypes;
      this.accountTypeOptions = data.accountTypes;

      this.dateRange = [(0, _moment2.default)(data.semesterStart).toDate(), (0, _moment2.default)().toDate()];

      this.loadingFilters = false;
    },
    receiveCompragingChartData: function receiveCompragingChartData(data) {
      var _this2 = this;

      console.log("receiveCompragingChartData#");

      this.hasCompareChartData = true;

      this.$refs.compareChart.setLabels(data.dates);
      this.$refs.compareChart.setSeries(0, data.shows, "Ano atual");
      this.$refs.compareChart.setSeries(1, data.previous_shows, "Ano anterior");

      this.$nextTick(function () {
        _this2.$refs.compareChart.updateChart();
      });
    },
    receiveChartDataEx: function receiveChartDataEx(data) {
      var _this3 = this;

      console.log("receiveChartDataEx#");

      this.hasChartData = true;

      this.$refs.rankingChartEx.setYMax(100);
      this.$refs.rankingChartEx.setXAxesStacked();
      this.$refs.rankingChartEx.setYAxesStacked();
      this.$refs.rankingChartEx.setLabels(data.dates);

      this.$refs.rankingChartEx.setSeriesWithOptions(0, data.visits, 'Visitas', { type: 'line', borderWidth: 4, yAxisID: 'y-axis-1' });

      for (var i = 0; i < 10; i++) {
        this.$refs.rankingChartEx.setSeriesWithOptions(i + 1, data.percents['' + (i + 1)], 'Posi\xE7\xE3o ' + (i + 1), {});
      }
      this.$refs.rankingChartEx.setSeriesWithOptions(11, data.percents['11'], 'Outras p\xE1ginas', {});

      this.$nextTick(function () {
        _this3.$refs.rankingChartEx.updateChart();
      });

      this.$refs.rankingChartEx.setYAxisTitle("Percentual", 0);
      this.$refs.rankingChartEx.setYAxisTitle("Visitas", 1);

      this.dataLoading = false;
    },
    receiveChartData: function receiveChartData(data) {
      var _this4 = this;

      console.log("receiveChartData#");

      this.hasChartData = true;

      this.$refs.rankingChart.setXAxesStacked();
      this.$refs.rankingChart.setYAxesStacked();
      this.$refs.rankingChart.setLabels(data.dates);

      this.$refs.rankingChart.setSeriesWithOptions(0, data.sums, 'Total', { type: 'line', borderWidth: 4, yAxisID: 'y-axis-1' });

      for (var i = 0; i < 5; i++) {
        this.$refs.rankingChart.setSeriesWithOptions(i + 1, data.percents['' + (i + 1)], 'P\xE1gina ' + (i + 1), {});
      }

      this.$nextTick(function () {
        _this4.$refs.rankingChart.updateChart();
      });

      this.$refs.rankingChart.setYAxisTitle("Percentual", 0);
      this.$refs.rankingChart.setYAxisTitle("Exibições", 1);

      this.dataLoading = false;
    },
    loadFilters: function loadFilters() {
      SearchShowsChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      if (!this.$refs.filter.validateFilter()) {
        return;
      }

      var filter = this.$refs.filter.filterSelected();
      console.log("loadData filter: " + (0, _stringify2.default)(filter));

      this.tableData = [];
      this.$refs.rankingChart.clearSeries();
      this.$refs.rankingChartEx.clearSeries();
      this.$refs.compareChart.clearSeries();
      this.dataLoading = true;

      filter.initialDate = this.dateRange[0];
      filter.finalDate = this.dateRange[1];
      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;

      SearchShowsChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-11"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-group-options":_vm.universityGroupOptions,"university-options":_vm.universityOptions,"account-type-options":_vm.accountTypeOptions},on:{"valueSelected":_vm.primaryFilterSelected}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',{},[_c('label',{attrs:{"for":"date"}},[_vm._v("PERÍODO")]),_vm._v(" "),_c('c-date-picker',{model:{value:(_vm.dateRange),callback:function ($$v) {_vm.dateRange=$$v},expression:"dateRange"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Selecione uma modalidade","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasCompareChartData),expression:"hasCompareChartData"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Número de exibições em primeira página por usuário distinto\n        ")]),_vm._v(" "),_c('base-chart',{ref:"compareChart",attrs:{"base-height":600,"export-name":'impressoes_na_busca'}})],1)])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasChartData),expression:"hasChartData"}],staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Percentual de visualizações por página de aparição\n        ")]),_vm._v(" "),_c('base-chart',{ref:"rankingChart",attrs:{"base-height":600,"export-name":'impressoes_na_busca'}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("\n          Percentual de visualizações por posição de aparição + Visitas com origem na busca\n        ")]),_vm._v(" "),_c('base-chart',{ref:"rankingChartEx",attrs:{"base-height":600,"export-name":'impressoes_na_busca'}})],1)])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Painel de exibições na busca\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-63693626", __vue__options__)
  } else {
    hotAPI.reload("data-v-63693626", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/search-simulator.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _baseChart = require('./base-chart');

var _baseChart2 = _interopRequireDefault(_baseChart);

var _export = require('../js/utils/export');

var _export2 = _interopRequireDefault(_export);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      filterOptions: [],
      universityOptions: [],
      universityGroupOptions: [],
      dealOwnerOptions: [],
      accountTypeOptions: [],
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      coursesOptions: [],
      meanRank: null,

      filterKinds: null,
      filterLevels: null,
      filterCity: null,

      tableData: [],
      table: null,
      hasChartData: false,

      loadingFilters: true,
      dataLoading: false,
      currentFilter: null,
      filterCourse: null
    };
  },

  components: {
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default,
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    BaseChart: _baseChart2.default
  },
  computed: {
    hasData: function hasData() {
      return this.tableData.length > 0;
    }
  },
  mounted: function mounted() {
    var _this = this;

    SearchSimulatorChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    SearchSimulatorChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });

    this.loadFilters();
  },

  methods: {
    loadCities: function loadCities() {},
    loadCampuses: function loadCampuses() {
      console.log('loadCampuses');
    },
    primaryFilterSelected: function primaryFilterSelected() {},
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      this.tableData = data.entries;

      this.$nextTick(function () {
        _this2.table = new _datatable2.default('#search-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 30,
          order: [7, 'desc']
        });
      });

      this.dataLoading = false;
    },
    receiveFilters: function receiveFilters(data) {
      this.universityOptions = data.universities;
      this.filterOptions = data.filters;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.locationOptions = data.locationTypes;
      this.citiesOptions = data.cities;
      this.coursesOptions = data.courses;

      this.filterLevels = [this.levelOptions[0]];

      this.loadingFilters = false;
    },
    loadFilters: function loadFilters() {
      SearchSimulatorChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    loadData: function loadData() {
      this.dataLoading = true;
      this.tableData = [];

      var filter = {};

      filter.kinds = this.filterKinds;
      filter.levels = this.filterLevels;
      if (!_lodash2.default.isNil(this.filterCity)) {
        filter.city_id = this.filterCity.city_id;
      }
      filter.course = this.filterCourse;

      this.currentFilter = filter;

      SearchSimulatorChannel.push('loadData', filter).receive('timeout', function (data) {
        console.log('loadData timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loadingFilters || _vm.dataLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CURSO")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"alow-empty":false,"options":_vm.coursesOptions,"label":"name","track-by":"name","placeholder":"Selecione o curso","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterCourse),callback:function ($$v) {_vm.filterCourse=$$v},expression:"filterCourse"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-4 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("CIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"alow-empty":false,"options":_vm.citiesOptions,"label":"name","track-by":"name","placeholder":"Selecione a cidade","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterCity),callback:function ($$v) {_vm.filterCity=$$v},expression:"filterCity"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("UNIVERSIDADE")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"label":"name","track-by":"id","placeholder":"Todas as universidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterUniversity),callback:function ($$v) {_vm.filterUniversity=$$v},expression:"filterUniversity"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEIS")]),_vm._v(" "),_c('multiselect',{attrs:{"multiple":true,"options":_vm.levelOptions,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADES")]),_vm._v(" "),_c('multiselect',{attrs:{"multiple":true,"options":_vm.kindOptions,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6 col-sm-12"},[_c('div',{staticClass:"default-margin-top flex-vertical-centered"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.loadData}},[_vm._v("\n                  Atualizar\n                ")])])])])])])])]),_vm._v(" "),(_vm.hasData)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel panel-default"},[_c('table',{staticClass:"data-table data-table-tiny",attrs:{"id":"search-table"}},[_vm._m(1),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(entry){return _c('tr',[_c('td',[_vm._v(_vm._s(entry.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.discount_percentage))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_kind))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_level))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.course_shift))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.offered_price))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.relevance_score))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(entry.state))])])}),0)])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Simulador de busca\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("Desconto")]),_vm._v(" "),_c('th',[_vm._v("Modalidade")]),_vm._v(" "),_c('th',[_vm._v("Nível")]),_vm._v(" "),_c('th',[_vm._v("Turno")]),_vm._v(" "),_c('th',[_vm._v("Preço Oferecido")]),_vm._v(" "),_c('th',[_vm._v("Relevance Score")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-4e69d85d", __vue__options__)
  } else {
    hotAPI.reload("data-v-4e69d85d", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/snow-flakes.vue", function(exports, require, module) {
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"snowflakes"},[_c('div',{staticClass:"snowflake"},[_vm._v("\n  ❅\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n  ❆\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n  ❅\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n  ❆\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n  ❅\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n  ❆\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n    ❅\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n    ❆\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n    ❅\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n    ❆\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n    ❅\n  ")]),_vm._v(" "),_c('div',{staticClass:"snowflake"},[_vm._v("\n    ❆\n  ")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-49ec4b5a", __vue__options__)
  } else {
    hotAPI.reload("data-v-49ec4b5a", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/sold-courses-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _customSearchMultiselect = require('./custom-search-multiselect');

var _customSearchMultiselect2 = _interopRequireDefault(_customSearchMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: true,
      tableData: [],
      table: null,
      filterKinds: null,
      filterLevels: null,
      kindOptions: [],
      levelOptions: [],
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      universityOptions: [],
      filterIes: [],
      iesFilterLoading: false
    };
  },
  mounted: function mounted() {
    var _this = this;

    SoldCoursesChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    SoldCoursesChannel.on('filters', function (payload) {
      return _this.receiveFilters(payload);
    });
    SoldCoursesChannel.on('citiesComplete', function (payload) {
      return _this.receiveCitiesComplete(payload);
    });
    SoldCoursesChannel.on('universitiesComplete', function (payload) {
      return _this.receiveUniversitiesComplete(payload);
    });

    this.loadFilters();
    this.loadUniversities();
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    LocationFilter: _locationFilter2.default,
    CsMultiselect: _customSearchMultiselect2.default
  },
  methods: {
    kindValueSelected: function kindValueSelected() {
      this.loadData();
      this.loadUniversities();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    },
    levelValueSelected: function levelValueSelected() {
      this.loadData();
      this.loadUniversities();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    },
    iesValueSelected: function iesValueSelected() {
      this.loadData();
      if (this.$refs.locationFilter.locationFilter() == 'city') {
        this.loadCities();
      }
    },
    locationRemoved: function locationRemoved() {
      this.loadData();
      this.loadUniversities();
    },
    loadCities: function loadCities() {
      this.$refs.locationFilter.setCitiesLoader(true);
      var params = this.filterParams();
      SoldCoursesChannel.push('completeCities', params).receive('timeout', function (data) {
        console.log('complete timeout');
      });
    },
    locationSelected: function locationSelected() {
      this.loadData();
      this.loadUniversities();
    },
    receiveCitiesComplete: function receiveCitiesComplete(data) {
      this.citiesOptions = data.cities;
      this.$refs.locationFilter.setCitiesLoader(false);
    },
    receiveUniversitiesComplete: function receiveUniversitiesComplete(data) {
      this.universityOptions = data.universities;
      this.iesFilterLoading = false;
    },
    receiveFilters: function receiveFilters(data) {
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.locationOptions = data.locations;
      this.regionsOptions = data.regions;
      this.statesOptions = data.states;
      this.loadData();
    },
    receiveTableData: function receiveTableData(data) {
      var _this2 = this;

      console.log("receiveTableData");

      this.tableData = data.courses;
      this.showIes = data.show_ies_column;
      this.loading = false;

      this.$nextTick(function () {
        var ordering = 5;
        if (_this2.showIes) {
          ordering = 6;
        }
        _this2.table = new _datatable2.default('#report-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          order: [ordering, 'desc']
        });
      });
    },
    loadUniversities: function loadUniversities() {
      this.iesFilterLoading = true;
      var params = this.filterParams();
      SoldCoursesChannel.push('completeUniversities', params).receive('timeout', function (data) {
        console.log('completeUniversities timeout');
      });
    },
    loadFilters: function loadFilters() {
      SoldCoursesChannel.push('loadFilters').receive('timeout', function (data) {
        console.log('filters timeout');
      });
    },
    filterParams: function filterParams() {
      var params = {
        kinds: this.filterKinds,
        levels: this.filterLevels,
        universities: this.filterIes
      };
      if (this.$refs.locationFilter.locationValue()) {
        params.locationType = this.$refs.locationFilter.locationFilter();
        params.locationValue = this.$refs.locationFilter.locationValue();
      }
      return params;
    },
    loadData: function loadData() {
      this.tableData = [];
      var params = this.filterParams();
      SoldCoursesChannel.push('loadData', params).receive('timeout', function (data) {
        console.log('load timeout');
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel panel-default"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('location-filter',{ref:"locationFilter",attrs:{"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"cities-options":_vm.citiesOptions},on:{"cityLocationSelected":_vm.loadCities,"locationValueSelected":_vm.locationSelected,"locationTypeRemoved":_vm.locationRemoved}})],1),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-4 col-sm-6"},[(_vm.iesFilterLoading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("IES")]),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.universityOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as IES's","selectLabel":"","deselectLabel":""},on:{"input":_vm.iesValueSelected},model:{value:(_vm.filterIes),callback:function ($$v) {_vm.filterIes=$$v},expression:"filterIes"}})],1)])])])])])]),_vm._v(" "),(_vm.tableData.length > 0)?_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[_c('div',{staticClass:"panel-body no-lat-padding"},[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"report-table"}},[_c('thead',{attrs:{"id":"table-header"}},[_c('tr',[(_vm.showIes)?_c('th',[_vm._v("IES")]):_vm._e(),_vm._v(" "),_c('th',[_vm._v("Curso")]),_vm._v(" "),_c('th',[_vm._v("Modalidade")]),_vm._v(" "),_c('th',[_vm._v("Nível")]),_vm._v(" "),_c('th',[_vm._v("Cidade")]),_vm._v(" "),_c('th',[_vm._v("Estado")]),_vm._v(" "),_c('th',[_vm._v("Pagos")]),_vm._v(" "),_c('th',[_vm._v("Desconto médio")]),_vm._v(" "),_c('th',[_vm._v("Offered médio")])])]),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(course){return _c('tr',[(_vm.showIes)?_c('td',[_vm._v(_vm._s(course.university_name))]):_vm._e(),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.clean_canonical_course_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.parent_kind_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.parent_level_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.city))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.state))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.paids))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(course.average_discount)+" %")]),_vm._v(" "),_c('td',[_vm._v("R$ "+_vm._s(course.average_offered_price))])])}),0)])])])])]):_vm._e()])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Cursos mais vendidos ( janela de 1 ano )\n      ")])])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-697903b4", __vue__options__)
  } else {
    hotAPI.reload("data-v-697903b4", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/stock-panel.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

var _messageDialog = require('../js/components/message-dialog');

var _messageDialog2 = _interopRequireDefault(_messageDialog);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _panelPrimaryFilter = require('./panel-primary-filter');

var _panelPrimaryFilter2 = _interopRequireDefault(_panelPrimaryFilter);

var _locationFilter = require('./location-filter');

var _locationFilter2 = _interopRequireDefault(_locationFilter);

var _customDatePicker = require('./custom-date-picker');

var _customDatePicker2 = _interopRequireDefault(_customDatePicker);

var _modalDialog = require('./modal-dialog');

var _modalDialog2 = _interopRequireDefault(_modalDialog);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      loading: false,
      filterKinds: null,
      filterLevels: null,
      universityOptions: [],
      universitySugestions: [],
      kindOptions: [],
      levelOptions: [],
      filterOptions: [],
      universityGroupOptions: [],
      accountTypeOptions: [],
      stockData: null,
      stockDatachart: null,
      stockSeriesNames: null,
      locationOptions: [],
      regionsOptions: [],
      statesOptions: [],
      citiesOptions: [],
      campusOptions: [],
      priceChartData: false,
      discountChartData: false,
      stockChartData: false,
      filterCanonicals: '20_top_clean',
      exportDate: null,
      lastDate: null,
      shortcuts: [],
      currentCoursesType: null,
      reportIndex: null,
      currentFilterType: null,
      metadataField: null,
      metadataExportField: null,
      exportMetadataField: false,
      grouping: null,
      gropingOptions: [],
      baseGropingOptions: [{ name: 'IES', id: 'ies' }, { name: 'Grupo', id: 'group' }],
      showGroupingData: false,
      gropingSemesterOptions: [],
      groupingSemester: null,
      seriesOptions: [{ name: '5', id: 5 }, { name: '10', id: 10 }, { name: '15', id: 15 }, { name: '20', id: 20 }],
      nGroupingSeries: null,
      groupedDates: [],
      groupedSkus: [],
      groupedPrices: [],
      groupedDiscounts: [],
      groupsKeys: [],
      groupsKeysNames: [],
      gropingOrderingOptions: [{ name: 'SKU\'s', id: 'skus' }, { name: 'Desconto', id: 'discount' }, { name: 'Preço', id: 'price' }],
      groupingOrdering: [],
      showFrozenData: false,
      showMeanPanel: true,
      showDepthPanel: false,
      farmRegionsOptions: [],
      dealOwnersOptions: []
    };
  },

  components: {
    Multiselect: _vueMultiselect2.default,
    ComparingChart: _comparingChart2.default,
    PanelPrimaryFilter: _panelPrimaryFilter2.default,
    LocationFilter: _locationFilter2.default,
    CDatePicker: _customDatePicker2.default,
    ModalDialog: _modalDialog2.default,
    CsMultiselect: _vueMultiselect2.default
  },
  watch: {
    nGroupingSeries: function nGroupingSeries(value) {
      this.setGroupCharts();
    }
  },
  mounted: function mounted() {
    var _this = this;

    console.log("mounted");

    this.lastDate = (0, _moment2.default)().subtract(1, 'days').toDate();
    this.exportDate = this.lastDate;

    StockChannel.on('stockError', function (payload) {
      return _this.receiveStockError(payload);
    });
    StockChannel.on('citiesComplete', function (payload) {
      return _this.receiveCitiesComplete(payload);
    });
    StockChannel.on('campusComplete', function (payload) {
      return _this.receiveCampusComplete(payload);
    });

    StockChannel.on('meansData', function (payload) {
      return _this.receiveStockMeans(payload);
    });
    StockChannel.on('filterData', function (payload) {
      return _this.receiveFilterData(payload);
    });
    StockChannel.on('skuExportData', function (payload) {
      return _this.receiveExportData(payload);
    });
    StockChannel.on('iesReportData', function (payload) {
      return _this.receiveReportData(payload);
    });
    StockChannel.on('groupData', function (payload) {
      return _this.receiveGroupData(payload);
    });
    StockChannel.on('frozenData', function (payload) {
      return _this.receiveFrozenData(payload);
    });
    StockChannel.on('depthData', function (payload) {
      return _this.receiveDepthData(payload);
    });

    this.nGroupingSeries = this.seriesOptions[0];
    this.groupingOrdering = this.gropingOrderingOptions[0];

    this.loading = true;
    this.loadFilters();
  },

  methods: {
    showMeans: function showMeans() {
      this.showMeanPanel = true;
      this.showDepthPanel = false;

      this.updateMeansCharts();
    },
    showDepths: function showDepths() {
      console.log("showDepths");
      this.showMeanPanel = false;
      this.showDepthPanel = true;

      this.updateDepthCharts();
    },
    hideGrouping: function hideGrouping() {
      this.showGroupingData = false;
      this.$refs.groupedStockChart.clearSeries();
    },
    executeGroup: function executeGroup() {
      if (_lodash2.default.isNil(this.groupingSemester)) {
        alert('Selecione o semestre');
        return;
      }
      if (_lodash2.default.isNil(this.grouping)) {
        alert('Selecione o agrupamento');
        return;
      }
      if (_lodash2.default.isNil(this.groupingOrdering)) {
        alert('Selecione a ordenação');
        return;
      }

      this.$refs.groupingModal.setLoader();
      var currentFilter = this.$refs.filter.filterSelected();

      var locationType = this.$refs.locationFilter.locationFilter();
      var locationValue = this.$refs.locationFilter.locationValue();

      var parameters = {
        type: currentFilter.type,
        value: currentFilter.value,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        locationType: locationType,
        locationValue: locationValue,
        courses: this.filterCanonicals,
        grouping: this.grouping,
        groupingSemester: this.groupingSemester,
        groupingOrdering: this.groupingOrdering
      };

      StockChannel.push('groupStats', parameters).receive('timeout', function (data) {
        console.log('groupStats timeout');
      });
    },
    currenFilterMap: function currenFilterMap() {
      var currentFilter = this.$refs.filter.filterSelected();
      var parameters = {
        type: currentFilter.type,
        value: currentFilter.value,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        locationType: this.$refs.locationFilter.locationFilter(),
        locationValue: this.$refs.locationFilter.locationValue(),
        courses: this.filterCanonicals,
        date: this.exportDate
      };
      return parameters;
    },
    exportReportData: function exportReportData() {
      console.log("exportReportData");
      this.$refs.reportModal.setLoader();
      var parameters = this.currenFilterMap();
      parameters.dayIndex = this.reportIndex;

      StockChannel.push('reportIes', parameters).receive('timeout', function () {
        console.log("export timeout");
      });
    },
    exportSkuData: function exportSkuData() {
      console.log("exportSkuData");
      this.$refs.exportModal.setLoader();

      if (!_lodash2.default.isNil(this.metadataExportField) && this.metadataExportField != '') {
        this.metadataField = this.metadataExportField;
      }

      var currentFilter = this.$refs.filter.filterSelected();
      var parameters = {
        type: currentFilter.type,
        value: currentFilter.value,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        locationType: this.$refs.locationFilter.locationFilter(),
        locationValue: this.$refs.locationFilter.locationValue(),
        courses: this.filterCanonicals,
        date: this.exportDate
      };

      StockChannel.push('exportSkus', parameters).receive('timeout', function () {
        console.log("export timeout");
      });
    },
    emptyNull: function emptyNull(value) {
      if (_lodash2.default.isNil(value)) {
        return "";
      }
      return value;
    },
    showExportModal: function showExportModal() {
      this.exportMetadataField = false;
      this.metadataExportField = null;
      this.$refs.exportModal.show();
    },
    showReportModal: function showReportModal() {
      this.$refs.reportModal.show();
    },
    showGroupingModal: function showGroupingModal() {
      this.$refs.groupingModal.show();
    },
    loadCampuses: function loadCampuses() {
      console.log("loadCampuses");
      this.$refs.locationFilter.setCampusLoader(true);
      var currentFilter = this.$refs.filter.filterSelected();
      var parameters = { type: currentFilter.type, value: currentFilter.value, kinds: this.filterKinds, levels: this.filterLevels };
      StockChannel.push('completeCampus', parameters).receive('timeout', function () {
        console.log("campus timeout");
      });
    },
    loadCities: function loadCities() {
      console.log("loadCities");
      this.$refs.locationFilter.setCitiesLoader(true);
      var currentFilter = this.$refs.filter.filterSelected();
      var parameters = { type: currentFilter.type, value: currentFilter.value, kinds: this.filterKinds, levels: this.filterLevels };
      StockChannel.push('completeCities', parameters).receive('timeout', function () {
        console.log("cities timeout");
      });
    },
    loadFilters: function loadFilters() {
      StockChannel.push('loadFilters').receive('timeout', function () {
        console.log('filters timeout');
      });
    },
    setGroupCharts: function setGroupCharts() {
      var _this2 = this;

      this.$refs.groupedStockChart.clearSeries();
      this.$refs.groupedPriceChart.clearSeries();
      this.$refs.groupedDiscountChart.clearSeries();

      this.$refs.groupedStockChart.setLabels(this.groupedDates);
      this.$refs.groupedPriceChart.setLabels(this.groupedDates);
      this.$refs.groupedDiscountChart.setLabels(this.groupedDates);

      var maximo = this.nGroupingSeries.id;
      for (var i = 0; i < maximo; i++) {
        this.$refs.groupedStockChart.setSeries(i, this.groupedSkus[this.groupsKeys[i]], '' + this.groupsKeysNames[i]);
        this.$refs.groupedPriceChart.setSeries(i, this.groupedPrices[this.groupsKeys[i]], '' + this.groupsKeysNames[i]);
        this.$refs.groupedDiscountChart.setSeries(i, this.groupedDiscounts[this.groupsKeys[i]], '' + this.groupsKeysNames[i]);
      }

      this.$nextTick(function () {
        _this2.$refs.groupedStockChart.updateChart();
        _this2.$refs.groupedPriceChart.updateChart();
        _this2.$refs.groupedDiscountChart.updateChart();
      });
    },
    receiveDepthData: function receiveDepthData(data) {
      var _this3 = this;

      this.$refs.deepStockChart.clearSeries();
      this.$refs.flatStockChart.clearSeries();

      this.$refs.deepStockChart.setLabels(data.dates);

      this.$refs.deepStockChart.setSeries(0, data.deep_skus_sem2, data.semester_2);
      this.$refs.deepStockChart.setSeries(1, data.deep_skus_sem1, data.semester_1);
      this.$refs.deepStockChart.setSeries(2, data.deep_skus, data.semester);

      this.$refs.flatStockChart.setLabels(data.dates);
      this.$refs.flatStockChart.setSeries(0, data.flat_skus_sem2, data.semester_2);
      this.$refs.flatStockChart.setSeries(1, data.flat_skus_sem1, data.semester_1);
      this.$refs.flatStockChart.setSeries(2, data.flat_skus, data.semester);

      this.$nextTick(function () {
        _this3.$refs.deepStockChart.updateChart();
        _this3.$refs.flatStockChart.updateChart();
      });
    },
    receiveFrozenData: function receiveFrozenData(data) {
      var _this4 = this;

      console.log('receiveFrozenData');

      this.showFrozenData = true;

      this.$refs.frozenStockChart.setLabels(data.dates);
      this.$refs.frozenStockChart.setSeries(0, data.skus, data.semester);

      if (!_lodash2.default.isNil(data.current_point)) {
        this.$refs.frozenStockChart.setCurrentPoint(data.current_point);
      }

      this.$nextTick(function () {
        _this4.$refs.frozenStockChart.updateChart();
      });
    },
    receiveGroupData: function receiveGroupData(data) {
      console.log('receiveGroupData keys: ' + (0, _stringify2.default)(data.keys));
      this.showGroupingData = true;

      this.$refs.groupingModal.resetLoader();
      this.$refs.groupingModal.close();

      this.groupedDates = data.dates;
      this.groupedSkus = data.grouped_skus;
      this.groupedPrices = data.grouped_prices;
      this.groupedDiscounts = data.grouped_discounts;
      this.groupsKeys = data.keys;
      this.groupsKeysNames = data.keys_names;

      this.setGroupCharts();
    },
    receiveReportData: function receiveReportData(data) {
      var _this5 = this;

      console.log('receiveReportData');
      this.$refs.reportModal.resetLoader();
      this.$refs.reportModal.close();

      if (data.report.length === 0) {
        alert("Nenhum dado para o dia selecionado");
      } else {
        var filename = "ies_report_" + (0, _moment2.default)().format('DD_MM_YYYY') + '.csv';
        var content = "ID_IES;IES;sem-2;sem-1;sem\n";
        _lodash2.default.each(data.report, function (item, itemIndex) {
          content = content + item['id'] + ";" + item['name'] + ";" + _this5.emptyNull(item['sem_2']) + ";" + _this5.emptyNull(item['sem_1']) + ";" + _this5.emptyNull(item['sem']) + "\n";
        });

        var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
        saveAs(blob, filename);
      }
    },
    receiveExportData: function receiveExportData(data) {
      var _this6 = this;

      console.log('receiveExportData');
      this.$refs.exportModal.resetLoader();
      this.$refs.exportModal.close();

      if (data.courses.length === 0) {
        alert("Nenhum SKU para a data selecionada");
      } else {
        var filename = "skus_em_" + (0, _moment2.default)(this.exportDate).format('DD_MM_YYYY') + '.csv';
        var content = "Curso;Nivel;Modalidade;Turno;Campus;IES;Curso Canônico;Curso Canônico RAIZ";
        if (!_lodash2.default.isNil(this.metadataField)) {
          content = content + ";metadata";
        }
        content = content + "\n";
        _lodash2.default.each(data.courses, function (item, itemIndex) {
          console.log((0, _stringify2.default)(item));
          content = content + item['name'] + ";" + item['level'] + ";" + item['kind'] + ";" + item['shift'] + ";" + item['campus_name'] + ";" + item['university_name'] + ";" + item['canonical_name'] + ";" + item['root_canonical_name'];
          if (!_lodash2.default.isNil(_this6.metadataField)) {
            if (!_lodash2.default.isNil(item['metadata'])) {
              content = content + ";" + _this6.emptyNull(item['metadata'][_this6.metadataField]);
            } else {
              content = content + ";";
            }
          }
          content = content + "\n";
        });

        var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
        saveAs(blob, filename);
      }
    },
    receiveFilterData: function receiveFilterData(data) {
      this.universityOptions = data.universities;
      this.universitySugestions = data.universities;
      this.kindOptions = data.kinds;
      this.levelOptions = data.levels;
      this.filterOptions = data.filters;
      this.universityGroupOptions = data.groups;
      this.accountTypeOptions = data.accountTypes;
      this.locationOptions = data.locations;
      this.regionsOptions = data.regions;
      this.statesOptions = data.states;
      this.farmRegionsOptions = data.farm_regions;
      this.dealOwnersOptions = data.deal_owners;
      this.loading = false;
      console.log("dealOwnersOptions: " + (0, _stringify2.default)(this.dealOwnersOptions));
    },
    receiveCitiesComplete: function receiveCitiesComplete(data) {
      this.citiesOptions = data.cities;
      this.$refs.locationFilter.setCitiesLoader(false);
    },
    receiveCampusComplete: function receiveCampusComplete(data) {
      this.campusOptions = data.campuses;
      this.$refs.locationFilter.setCampusLoader(false);
    },
    receiveStockMeans: function receiveStockMeans(data) {
      var _this7 = this;

      console.log("receiveStockMeans");

      this.loading = false;
      this.discountChartData = true;
      this.priceChartData = true;
      this.stockChartData = true;

      this.reportIndex = data.current_point;

      this.currentCoursesType = data.courses_type;

      this.$refs.discountChart.setXAxisTitle('Dia da captação');
      this.$refs.priceChart.setXAxisTitle('Dia da captação');
      this.$refs.stockChart.setXAxisTitle('Dia da captação');

      if (!_lodash2.default.isNil(data.current_point)) {
        this.$refs.discountChart.setCurrentPoint(data.current_point);
        this.$refs.priceChart.setCurrentPoint(data.current_point);
        this.$refs.stockChart.setCurrentPoint(data.current_point);
      }

      this.$refs.discountChart.setLabels(data.dates);
      this.$refs.priceChart.setLabels(data.dates);
      this.$refs.stockChart.setLabels(data.dates);

      this.$refs.discountChart.setSeries(0, data.discounts2, data.semester_2);
      this.$refs.priceChart.setSeries(0, data.prices2, data.semester_2);

      this.$refs.discountChart.setSeries(1, data.discounts1, data.semester_1);
      this.$refs.priceChart.setSeries(1, data.prices1, data.semester_1);

      this.$refs.discountChart.setSeries(2, data.discounts, data.semester);
      this.$refs.priceChart.setSeries(2, data.prices, data.semester);

      this.$refs.stockChart.setSeries(0, data.count_sem2, data.semester_2);
      this.$refs.stockChart.setSeries(1, data.count_sem1, data.semester_1);
      this.$refs.stockChart.setSeries(2, data.count_sem, data.semester);
      this.$refs.stockChart.resetLoader();
      this.$refs.discountChart.resetLoader();
      this.$refs.priceChart.resetLoader();

      this.gropingSemesterOptions = [];
      this.gropingSemesterOptions.push({ id: data.semester_id, name: data.semester });
      this.gropingSemesterOptions.push({ id: data.semester_1_id, name: data.semester_1 });
      this.gropingSemesterOptions.push({ id: data.semester_2_id, name: data.semester_2 });

      this.groupingSemester = this.gropingSemesterOptions[0];

      this.$nextTick(function () {
        _this7.$refs.discountChart.updateChart();
        _this7.$refs.priceChart.updateChart();
        _this7.$refs.stockChart.updateChart();
      });
    },
    updateMeansCharts: function updateMeansCharts() {
      var _this8 = this;

      this.$nextTick(function () {
        _this8.$refs.frozenStockChart.updateChart();
        _this8.$refs.discountChart.updateChart();
        _this8.$refs.priceChart.updateChart();
        _this8.$refs.stockChart.updateChart();
      });
    },
    updateDepthCharts: function updateDepthCharts() {
      var _this9 = this;

      this.$nextTick(function () {
        _this9.$refs.flatStockChart.updateChart();
        _this9.$refs.deepStockChart.updateChart();
      });
    },
    receiveStockError: function receiveStockError(data) {
      var dialog = new _messageDialog2.default("global-dialog", "danger", "Erro");
      dialog.show("Erro ao gerar análise");
      this.loading = false;
    },
    loadGroupingOptions: function loadGroupingOptions() {
      console.log("CURR: " + this.currentFilterType + " A: " + (0, _stringify2.default)(this.baseGropingOptions));
      if (this.currentFilterType == 'account_type') {
        this.gropingOptions = _lodash2.default.filter(this.baseGropingOptions, function (entry) {
          return entry.id != 'account_type';
        });
      } else {
        this.gropingOptions = this.baseGropingOptions;
      }
    },
    execute: function execute() {
      var currentFilter = this.$refs.filter.filterSelected();
      if (_lodash2.default.isNil(currentFilter)) {
        alert("Selecione o filtro");
        return;
      }
      if ((_lodash2.default.isNil(currentFilter.value) || currentFilter.value == '') && currentFilter.type != 'all') {
        alert("Selecione o filtro");
        return;
      }

      var locationType = this.$refs.locationFilter.locationFilter();
      var locationValue = this.$refs.locationFilter.locationValue();
      if (!_lodash2.default.isNil(locationType)) {
        if (_lodash2.default.isNil(locationValue) || locationValue == '') {
          alert('Selecione o valor para localização');
          return;
        }
      }

      this.loading = true;

      this.showFrozenData = false;
      this.$refs.stockChart.setLoader();
      this.$refs.discountChart.setLoader();
      this.$refs.priceChart.setLoader();

      this.$refs.stockChart.clearSeries();
      this.$refs.discountChart.clearSeries();
      this.$refs.priceChart.clearSeries();

      this.stockChartData = null;
      this.discountChartData = false;
      this.priceChartData = false;

      this.showGroupingData = false;
      this.$refs.groupedStockChart.clearSeries();
      this.$refs.frozenStockChart.clearSeries();

      this.$refs.deepStockChart.clearSeries();
      this.$refs.flatStockChart.clearSeries();

      this.currentFilterType = currentFilter.type;
      var parameters = {
        type: currentFilter.type,
        value: currentFilter.value,
        kinds: this.filterKinds,
        levels: this.filterLevels,
        locationType: locationType,
        locationValue: locationValue,
        courses: this.filterCanonicals
      };

      StockChannel.push('stats', { parameters: parameters }).receive('timeout', function (data) {
        console.log('stats timeout');
      });

      this.loadGroupingOptions();
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid"},[_vm._m(0),_vm._v(" "),_c('div',{staticClass:"row",staticStyle:{"position":"relative"}},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('panel-primary-filter',{ref:"filter",attrs:{"filter-options":_vm.filterOptions,"university-group-options":_vm.universityGroupOptions,"university-options":_vm.universityOptions,"account-type-options":_vm.accountTypeOptions,"farm-region-options":_vm.farmRegionsOptions,"deal-owner-options":_vm.dealOwnersOptions}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("MODALIDADE")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.kindOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todas as modalidades","selectLabel":"","deselectLabel":""},on:{"input":_vm.kindValueSelected},model:{value:(_vm.filterKinds),callback:function ($$v) {_vm.filterKinds=$$v},expression:"filterKinds"}})],1)]),_vm._v(" "),_c('div',{staticClass:"col-md-2 col-sm-6"},[_c('div',[_c('label',{attrs:{"for":"level-filter"}},[_vm._v("NÍVEL")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.levelOptions,"multiple":true,"label":"name","track-by":"id","placeholder":"Todos os níveis","selectLabel":"","deselectLabel":""},on:{"input":_vm.levelValueSelected},model:{value:(_vm.filterLevels),callback:function ($$v) {_vm.filterLevels=$$v},expression:"filterLevels"}})],1)]),_vm._v(" "),_c('location-filter',{ref:"locationFilter",attrs:{"location-options":_vm.locationOptions,"regions-options":_vm.regionsOptions,"states-options":_vm.statesOptions,"cities-options":_vm.citiesOptions,"campus-options":_vm.campusOptions},on:{"cityLocationSelected":_vm.loadCities,"campusLocationSelected":_vm.loadCampuses}})],1),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 col-sm-12"},[_c('div',[_c('label',{attrs:{"for":"kind-filter"}},[_vm._v("CURSOS")]),_vm._v(" "),_c('div',{staticClass:"col-md-12 col-sm-12 tiny-margin-left"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCanonicals),expression:"filterCanonicals"}],attrs:{"type":"radio","id":"20_top_clean","name":"canonicals_filter","value":"20_top_clean","checked":""},domProps:{"checked":_vm._q(_vm.filterCanonicals,"20_top_clean")},on:{"change":function($event){_vm.filterCanonicals="20_top_clean"}}}),_vm._v(" "),_vm._m(1),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCanonicals),expression:"filterCanonicals"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","id":"20_top","name":"canonicals_filter","value":"20_top"},domProps:{"checked":_vm._q(_vm.filterCanonicals,"20_top")},on:{"change":function($event){_vm.filterCanonicals="20_top"}}}),_vm._v(" "),_vm._m(2),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.filterCanonicals),expression:"filterCanonicals"}],staticStyle:{"margin-left":"10px"},attrs:{"type":"radio","id":"all","name":"canonicals_filter","value":"all"},domProps:{"checked":_vm._q(_vm.filterCanonicals,"all")},on:{"change":function($event){_vm.filterCanonicals="all"}}}),_vm._v(" "),_vm._m(3)])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12 default-margin-top"},[_c('button',{staticClass:"btn-submit",on:{"click":_vm.execute}},[_vm._v("\n            Executar\n          ")])])])])]),_vm._v(" "),_c('modal-dialog',{ref:"groupingModal",attrs:{"identification":"grouping-modal"}},[_c('div',{staticClass:"modal-header"},[_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("×")]),_vm._v(" "),_c('h2',{staticClass:"modal-title"},[_vm._v("Agupamento")]),_vm._v(" "),_c('div',{staticClass:"modal-body"},[_c('label',[_vm._v("SELECIONE O SEMESTRE")]),_c('br'),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.gropingSemesterOptions,"label":"name","track-by":"id","placeholder":"Selecione o semestre","selectLabel":"","deselectLabel":""},model:{value:(_vm.groupingSemester),callback:function ($$v) {_vm.groupingSemester=$$v},expression:"groupingSemester"}}),_vm._v(" "),_c('label',[_vm._v("SELECIONE O AGRUPAMENTO")]),_c('br'),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.gropingOptions,"label":"name","track-by":"id","placeholder":"Selecione o agrupamento","selectLabel":"","deselectLabel":""},model:{value:(_vm.grouping),callback:function ($$v) {_vm.grouping=$$v},expression:"grouping"}}),_vm._v(" "),_c('label',[_vm._v("SELECIONE A ORDENAÇÃO")]),_c('br'),_vm._v(" "),_c('cs-multiselect',{attrs:{"options":_vm.gropingOrderingOptions,"label":"name","track-by":"id","placeholder":"Selecione a ordenação","selectLabel":"","deselectLabel":""},model:{value:(_vm.groupingOrdering),callback:function ($$v) {_vm.groupingOrdering=$$v},expression:"groupingOrdering"}}),_vm._v(" "),_c('button',{staticClass:"btn-submit default-margin-top",on:{"click":_vm.executeGroup}},[_vm._v("\n          Agrupar\n        ")])],1)])]),_vm._v(" "),_c('modal-dialog',{ref:"reportModal",attrs:{"identification":"report-modal"}},[_c('div',{staticClass:"modal-header"},[_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("×")]),_vm._v(" "),_c('h2',{staticClass:"modal-title"},[_vm._v("Relatório IES")])]),_vm._v(" "),_c('div',{staticClass:"modal-body"},[_c('label',[_vm._v("SELECIONE O INDICE DA DATA")]),_c('br'),_vm._v(" "),_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.reportIndex),expression:"reportIndex"}],staticClass:"multiselect__input",staticStyle:{"color":"#647383","padding-left":"10px","height":"40px"},attrs:{"type":"text"},domProps:{"value":(_vm.reportIndex)},on:{"input":function($event){if($event.target.composing){ return; }_vm.reportIndex=$event.target.value}}})]),_vm._v(" "),_c('div',{staticClass:"modal-footer"},[_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button"},on:{"click":_vm.exportReportData}},[_vm._v("Exportar")]),_vm._v(" "),_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("Fechar")])])]),_vm._v(" "),_c('modal-dialog',{ref:"exportModal",attrs:{"identification":"stock-modal"}},[_c('div',{staticClass:"modal-header"},[_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("×")]),_vm._v(" "),_c('h2',{staticClass:"modal-title"},[_vm._v("Exportar SKU's")])]),_vm._v(" "),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-6"},[_c('label',[_vm._v("SELECIONE UMA DATA PARA EXPORTAR")]),_c('br'),_vm._v(" "),_c('c-date-picker',{attrs:{"shortcuts":_vm.shortcuts,"range":false,"not-after":_vm.lastDate},model:{value:(_vm.exportDate),callback:function ($$v) {_vm.exportDate=$$v},expression:"exportDate"}})],1),_vm._v(" "),_c('div',{staticClass:"col-md-6"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.exportMetadataField),expression:"exportMetadataField"}],staticStyle:{"margin-right":"8px"},attrs:{"type":"checkbox"},domProps:{"checked":Array.isArray(_vm.exportMetadataField)?_vm._i(_vm.exportMetadataField,null)>-1:(_vm.exportMetadataField)},on:{"change":function($event){var $$a=_vm.exportMetadataField,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.exportMetadataField=$$a.concat([$$v]))}else{$$i>-1&&(_vm.exportMetadataField=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.exportMetadataField=$$c}}}}),_c('label',[_vm._v("EXPORTAR CAMPO DO METADATA")]),_vm._v(" "),(_vm.exportMetadataField)?[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.metadataExportField),expression:"metadataExportField"}],staticClass:"multiselect__input",staticStyle:{"color":"#000000","height":"40px"},attrs:{"type":"text"},domProps:{"value":(_vm.metadataExportField)},on:{"input":function($event){if($event.target.composing){ return; }_vm.metadataExportField=$event.target.value}}})]:_vm._e()],2)])]),_vm._v(" "),_c('div',{staticClass:"modal-footer"},[_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button"},on:{"click":_vm.exportSkuData}},[_vm._v("Exportar")]),_vm._v(" "),_c('button',{staticClass:"btn btn-submit",attrs:{"type":"button","data-dismiss":"modal"}},[_vm._v("Fechar")])])]),_vm._v(" "),_c('div',{staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"row"},[_c('ul',{staticClass:"nav navbar-nav justify-content-center"},[_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showMeanPanel}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showMeans}},[_vm._v("SKU's e médias")])]),_vm._v(" "),_c('li',{staticClass:"navbar__item",class:{'active' : _vm.showDepthPanel}},[_c('a',{staticClass:"nav-link clickable",on:{"click":_vm.showDepths}},[_vm._v("Profundidade")])])])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showDepthPanel),expression:"showDepthPanel"}],staticClass:"panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom default-margin-top"},[_vm._v("NÚMERO DE SKUS PROFUNDOS ( SKU's com mais de uma ordem em 7 dias)")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"deepStockChart",attrs:{"export-name":"deep_skus"}})],1)]),_vm._v(" "),_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom default-margin-top"},[_vm._v("NÚMERO DE SKUS RASOS ( SKU's com apenas uma ordem em 7 dias)")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"flatStockChart",attrs:{"export-name":"flat_skus"}})],1)])]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showMeanPanel),expression:"showMeanPanel"}],staticClass:"panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom default-margin-top"},[_vm._v("\n        NÚMERO DE SKUS DISPONÍVEIS\n\n        "),_c('span',{staticClass:"clickable",staticStyle:{"float":"right"},on:{"click":_vm.showExportModal}},[_vm._v("\n          Exportar SKU's\n        ")]),_vm._v(" "),_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentFilterType && _vm.currentFilterType != 'university'),expression:"currentFilterType && currentFilterType != 'university'"}],staticClass:"clickable",staticStyle:{"margin-right":"40px","float":"right"},on:{"click":_vm.showReportModal}},[_vm._v("\n          Relatório IES\n        ")]),_vm._v(" "),(_vm.showGroupingData)?[_c('span',{staticClass:"clickable",staticStyle:{"margin-right":"40px","float":"right"},on:{"click":_vm.hideGrouping}},[_vm._v("\n            Desagrupar\n          ")])]:[_c('span',{directives:[{name:"show",rawName:"v-show",value:(_vm.currentFilterType && _vm.currentFilterType != 'university'),expression:"currentFilterType && currentFilterType != 'university'"}],staticClass:"clickable",staticStyle:{"margin-right":"40px","float":"right"},on:{"click":_vm.showGroupingModal}},[_vm._v("\n          Agrupar\n        ")])],_vm._v(" "),(_vm.currentCoursesType != 'all')?[_vm._v("\n          ( SKU's dos 20 cursos canônicos "),(_vm.currentCoursesType == '20_top_clean')?[_vm._v("mãe")]:_vm._e(),_vm._v(" mais vendidos "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[(_vm.currentCoursesType == '20_top_clean')?[_c('p',[_vm._v("O curso canônico mãe do SKU está entre os mais vendidos")])]:[_c('p',[_vm._v("O curso canônico diretamente ligado ao SKU está entre os mais vendidos")])],_vm._v(" "),_c('p',[_vm._v("Os 20 cursos canônicos mais vendidos são:")]),_vm._v("\n                Administração"),_c('br'),_vm._v("\n                Análise e Desenvolvimento de Sistemas"),_c('br'),_vm._v("\n                Arquitetura e Urbanismo"),_c('br'),_vm._v("\n                Biomedicina"),_c('br'),_vm._v("\n                Ciências Contábeis"),_c('br'),_vm._v("\n                Direito"),_c('br'),_vm._v("\n                Educação Física"),_c('br'),_vm._v("\n                Enfermagem"),_c('br'),_vm._v("\n                Engenharia Civil"),_c('br'),_vm._v("\n                Engenharia de Produção"),_c('br'),_vm._v("\n                Engenharia Mecânica"),_c('br'),_vm._v("\n                Estética"),_c('br'),_vm._v("\n                Farmácia"),_c('br'),_vm._v("\n                Fisioterapia"),_c('br'),_vm._v("\n                Logística"),_c('br'),_vm._v("\n                Nutrição"),_c('br'),_vm._v("\n                Pedagogia"),_c('br'),_vm._v("\n                Psicologia"),_c('br'),_vm._v("\n                Publicidade e Propaganda"),_c('br'),_vm._v("\n                Recursos Humanos"),_c('br')],2)])]),_vm._v(" )\n        ")]:_vm._e()],2),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"stockChart",attrs:{"export-name":"skus"}})],1)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showGroupingData),expression:"showGroupingData"}],staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("NÚMERO DE SKUS ( AGRUPADO )")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-3"},[_c('label',[_vm._v("NÚMERO DE SÉRIES")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.seriesOptions,"label":"name","placeholder":"Selecione o número de séries","selectLabel":"","deselectLabel":"","selectedLabel":""},model:{value:(_vm.nGroupingSeries),callback:function ($$v) {_vm.nGroupingSeries=$$v},expression:"nGroupingSeries"}})],1)]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"groupedStockChart",attrs:{"export-name":"skus_agrupado"}})],1)])]),_vm._v(" "),[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom default-margin-top"},[_vm._v("NÚMERO DE SKUS COM OFERTAS CONGELADAS")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"frozenStockChart",attrs:{"export-name":"frozen_skus"}})],1)])],_vm._v(" "),[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom default-margin-top"},[_vm._v("MÉDIA DO DESCONTO OFERECIDO DISPONÍVEL NO SITE")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"discountChart",attrs:{"export-name":"desconto"}})],1)])],_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showGroupingData),expression:"showGroupingData"}],staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("MÉDIA DO DESCONTO ( AGRUPADO )")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"groupedDiscountChart",attrs:{"export-name":"desconto_agrupado"}})],1)])]),_vm._v(" "),[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom default-margin-top"},[_vm._v("MÉDIA DO PREÇO OFERECIDO DISPONÍVEL NO SITE")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"priceChart",attrs:{"export-name":"preco"}})],1)])],_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.showGroupingData),expression:"showGroupingData"}],staticClass:"panel report-panel panel-default"},[_c('div',{staticClass:"panel-heading panel-heading--spaced-bottom"},[_vm._v("MÉDIA DO PREÇO ( AGRUPADO )")]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('comparing-chart',{ref:"groupedPriceChart",attrs:{"export-name":"preco_agrupado"}})],1)])])],2)])],1)}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        Estoque\n      ")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"20_top_clean"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("\n                  TOP 20 EM VENDAS (Curso Mãe)\n                  "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_c('p',[_vm._v("O curso canônico mãe do SKU está entre os mais vendidos")])])])])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"20_top"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("\n                  TOP 20 EM VENDAS\n                  "),_c('span',{staticClass:"glyphicon glyphicon-info-sign tooltip__icon"},[_c('div',{staticClass:"tooltip__content"},[_c('span',[_c('p',[_vm._v("O curso canônico diretamente ligado ao SKU está entre os mais vendidos")])])])])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{"for":"all"}},[_c('span',{staticClass:"tiny-padding-left",staticStyle:{"font-size":"18px"}},[_vm._v("TODOS")])])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-d4ae0482", __vue__options__)
  } else {
    hotAPI.reload("data-v-d4ae0482", __vue__options__)
  }
})()}
});

;require.register("web/static/templates/user-home.vue", function(exports, require, module) {
;(function(){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _gaugeChart = require('../js/components/gauge-chart');

var _gaugeChart2 = _interopRequireDefault(_gaugeChart);

var _solidGaugeChart = require('../js/components/solid-gauge-chart');

var _solidGaugeChart2 = _interopRequireDefault(_solidGaugeChart);

var _datatable = require('../js/components/datatable');

var _datatable2 = _interopRequireDefault(_datatable);

var _snowFlakes = require('./snow-flakes');

var _snowFlakes2 = _interopRequireDefault(_snowFlakes);

var _comparingChart = require('./comparing-chart');

var _comparingChart2 = _interopRequireDefault(_comparingChart);

var _vueMultiselect = require('vue-multiselect');

var _vueMultiselect2 = _interopRequireDefault(_vueMultiselect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  data: function data() {
    return {
      totalGoal: '',
      loading: true,
      loadingSazonality: true,
      identifier: '',
      baseDate: null,
      tableData: [],
      hideSensitiveData: false,
      totalChart: null,
      farmChart: null,
      farmChartIntermediate: null,
      currentPercent: null,
      rawSazonality: [],
      sazonalityDates: [],
      sazonalityOptions: [],

      table: null,
      sazonalityOption: null,
      filterLevels: null,
      levelOptions: [],
      productLineOption: null,
      productLineOptions: [],
      farmRegionOption: null,
      farmRegionOptions: [],
      hasData: false,
      initialized: false,
      capturePeriod: null,
      fullVelocimeter: null
    };
  },
  mounted: function mounted() {
    var _this = this;

    HomeChannel.on('tableData', function (payload) {
      return _this.receiveTableData(payload);
    });
    HomeChannel.on('sazonalityData', function (payload) {
      return _this.receiveSazonalityData(payload);
    });
    HomeChannel.on('filterData', function (payload) {
      return _this.receiveFilterData(payload);
    });
    HomeChannel.on('totalGoal', function (payload) {
      return _this.receiveTotalGoal(payload);
    });

    this.loadFilters();
    this.loadTotalGoal();

    this.capturePeriod = document.getElementById("capture-period").value;
  },

  watch: {
    sazonalityOption: function sazonalityOption(value) {
      if (!this.initialized) {
        return;
      }
      this.loadSazonality();
    },

    productLineOption: function productLineOption(value) {
      if (!_lodash2.default.isNil(value)) {
        this.sazonalityOption = value.id;
      }
      if (!this.initialized) {
        return;
      }
      this.loadData();
    },

    farmRegionOption: function farmRegionOption(value) {
      if (!this.initialized) {
        return;
      }
      this.loadData();
    }
  },
  components: {
    SnowFlakes: _snowFlakes2.default,
    ComparingChart: _comparingChart2.default,
    Multiselect: _vueMultiselect2.default
  },
  computed: {
    chartsClass: function chartsClass() {
      if (this.capturePeriod != 6 || !_lodash2.default.isNil(this.productLineOption) && this.productLineOption.id == 8) {
        return "col-md-4 col-sm-12 no-padding";
      }
      return "col-md-3 col-sm-12 no-padding";
    },
    hasIntermediateChart: function hasIntermediateChart() {
      if (this.capturePeriod != 6 || !_lodash2.default.isNil(this.productLineOption) && this.productLineOption.id == 8) {
        return false;
      }
      return true;
    },
    hasSazonalityOptions: function hasSazonalityOptions() {
      return this.sazonalityOptions.length > 0;
    },
    hasProductLineOptions: function hasProductLineOptions() {
      return this.productLineOptions.length > 1;
    },
    hasRegionFilter: function hasRegionFilter() {
      return !_lodash2.default.isNil(this.productLineOption) && this.productLineOption.id == 10;
    }
  },
  methods: {
    loadTotalGoal: function loadTotalGoal() {
      HomeChannel.push('loadTotalGoal').receive('timeout', function () {
        console.log('loadTotalGoal fimeout');
      });
    },
    createCharts: function createCharts() {
      this.farmChart = new _gaugeChart2.default('time-chart-farmer', {
        title: 'Meta total',
        tooltip: ' % de parcerias'
      });

      this.farmChartIntermediate = new _gaugeChart2.default('time-chart-farmer-intermediate', {
        title: 'Meta intermediária',
        tooltip: ' % de parcerias'
      });

      this.createFullGoalChart();
    },
    createFullGoalChart: function createFullGoalChart() {
      if (!_lodash2.default.isNil(this.totalChart)) {
        this.totalChart.destroy();
      }

      this.totalChart = new _gaugeChart2.default('time-chart-total', {
        title: 'Meta empresa',
        tooltip: ' % de parcerias'
      });

      this.totalChart.getSeries(0).setData([]);
      this.totalChart.getSeries(0).addPoint(this.fullVelocimeter);
    },
    loadSazonality: function loadSazonality() {
      console.log("loadSazonality");
      var params = {
        product_line_id: this.sazonalityOption
      };
      this.loadingSazonality = true;
      HomeChannel.push('loadSazonality', params).receive('timeout', function () {
        console.log('loadSazonality fimeout');
      });
    },
    loadFilters: function loadFilters() {
      HomeChannel.push('loadFilters').receive('timeout', function () {
        console.log('filters fimeout');
      });
    },
    exportSazonalityData: function exportSazonalityData() {
      var _this2 = this;

      var filename = "sazonalidade" + "_" + (0, _moment2.default)().format('MM_DD_YYYY_hh_mm_ss_a') + '.csv';
      var content = "Data;Sazonalidade\n";
      _lodash2.default.each(this.sazonalityDates, function (item, itemIndex) {
        content = content + item + ";" + _this2.rawSazonality[itemIndex] + "\n";
      });

      var blob = new Blob([content], { type: "text/plain;charset=utf-8" });
      saveAs(blob, filename);
    },
    receiveTotalGoal: function receiveTotalGoal(data) {
      this.fullVelocimeter = data.total_goal;
      this.createFullGoalChart();
    },
    receiveSazonalityData: function receiveSazonalityData(data) {
      var _this3 = this;

      console.log("receiveSazonalityData");

      this.sazonalityDates = data.dates;
      this.rawSazonality = data.raw_daily_contribution;
      this.sazonalityOptions = data.sazonality_options;
      this.sazonalityOption = data.current_sazonality;
      this.currentPercent = data.current_value_cum_contribution;

      this.$refs.cumSazonality.setXTick(false);
      this.$refs.cumSazonality.setYMax(100);

      this.$refs.cumSazonality.setLabels(data.dates);
      this.$refs.cumSazonality.setSeries(0, data.cum_contribution, "Sazonalidade Acumuldada");
      this.$refs.cumSazonality.setSeriesWithOptions(1, data.current_cum_contribution, "Atual", { seriesColor: '#fdc029', fill: true });
      this.$refs.cumSazonality.resetLoader();

      this.$refs.sazonality.setXTick(false);
      this.$refs.sazonality.setYTick(false);

      this.$refs.sazonality.setLabels(data.dates);
      this.$refs.sazonality.setSeries(0, data.daily_contribution, "Sazonalidade");
      this.$refs.sazonality.setSeriesWithOptions(1, data.current_daily_contribution, "Atual", { seriesColor: '#fdc029', fill: true });
      this.$refs.sazonality.resetLoader();

      this.$refs.cumSazonality.updateChart();
      this.$refs.sazonality.updateChart();

      this.$nextTick(function () {
        _this3.loadingSazonality = false;
      });
    },
    receiveFilterData: function receiveFilterData(data) {
      var _this4 = this;

      this.productLineOptions = data.productLineOptions;
      this.farmRegionOptions = data.farm_regions;
      if (!_lodash2.default.isNil(data.current_product_line)) {
        var filteredOptions = _lodash2.default.filter(this.productLineOptions, function (entry) {
          return entry.id === data.current_product_line;
        });
        this.productLineOption = filteredOptions[0];
      }
      this.$nextTick(function () {
        _this4.loadData();
        _this4.loadSazonality();
        _this4.initialized = true;
      });
    },
    receiveTableData: function receiveTableData(data) {
      var _this5 = this;

      this.tableData = data.university_goals;
      this.baseDate = data.last_date;
      this.identifier = data.panel_identification;
      this.totalGoal = data.total_goal;
      this.loading = false;
      this.hasData = true;

      this.createCharts();

      var columnDefs = [];
      if (this.capturePeriod != 6) {
        columnDefs = [{ targets: [11, 14], visible: false }];
      }

      this.$nextTick(function () {
        _this5.table = new _datatable2.default('#report-table', {
          paging: true,
          deferRender: true,
          searchDelay: 500,
          pageLength: 10,
          columnDefs: columnDefs,
          order: [9, 'desc']
        });
        _this5.recalculateTotals();
        var instance = _this5;
        _this5.table.onFilter(function () {
          setTimeout(function () {
            instance.recalculateTotals();
          }, 300);
        });
      });
    },
    recalculateTotals: function recalculateTotals() {
      var newPercent = 0;
      var newPercentIntermediate = 0;
      var nRows = this.table.getFilteredRows().nodes().length;
      if (nRows > 0) {
        var filteredData = this.table.getFilteredRows().data();

        var movelGoalColumn = 10;
        var intermediateMovelGoalColumn = 11;
        var realizedColumn = 12;

        var realized = 0;
        var movel_goal = 0;
        var movel_goal_intermediate = 0;
        for (var i = 0; i < nRows; i++) {
          if (filteredData[i][22] === 'Sim') {
            movel_goal += filteredData[i][movelGoalColumn].parseMoney();
            movel_goal_intermediate += filteredData[i][intermediateMovelGoalColumn].parseMoney();
            realized += filteredData[i][realizedColumn].parseMoney();
          }
        }

        $("#mobile-goal").text(movel_goal.formatMoney(2));
        $("#mobile-goal-intermediate").text(movel_goal_intermediate.formatMoney(2));
        $("#total-realized").text(realized.formatMoney(2));

        console.log("movel_goal: " + movel_goal + " movel_goal_intermediate+ " + movel_goal_intermediate + " realized: " + realized);

        newPercent = parseFloat((realized / movel_goal * 100).toFixed(2));
        newPercentIntermediate = parseFloat((realized / movel_goal_intermediate * 100).toFixed(2));
      }

      this.farmChart.getSeries(0).setData([]);
      this.farmChart.getSeries(0).addPoint(newPercent);

      this.farmChartIntermediate.getSeries(0).setData([]);
      this.farmChartIntermediate.getSeries(0).addPoint(newPercentIntermediate);
    },
    destroyCharts: function destroyCharts() {
      if (!_lodash2.default.isNil(this.farmChart)) {
        this.farmChart.destroy();
      }
      if (!_lodash2.default.isNil(this.farmChartIntermediate)) {
        this.farmChartIntermediate.destroy();
      }
    },
    loadData: function loadData() {
      var _this6 = this;

      this.destroyCharts();
      var params = {};
      if (!_lodash2.default.isNil(this.productLineOption)) {
        params.product_line_id = this.productLineOption.id;
      }

      if (!_lodash2.default.isNil(this.farmRegionOption)) {
        params.farm_region = this.farmRegionOption.id;
      }
      this.loading = true;
      this.hasData = false;

      HomeChannel.push("loadData", params).receive('timeout', function () {
        console.log("load timeout");
      });

      this.$nextTick(function () {
        _this6.createFullGoalChart();
      });
    }
  }
};
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"container-fluid",staticStyle:{"position":"relative"}},[_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-12"},[_c('h2',{staticClass:"content-header"},[_vm._v("\n        "+_vm._s(_vm.identifier)+" - "),(_vm.baseDate)?_c('span',[_vm._v("Meta móvel atualizada em: "+_vm._s(_vm.baseDate))]):_vm._e()])])]),_vm._v(" "),_c('div',{staticClass:"row"},[(_vm.loading)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"charts-panels col-md-12"},[_c('div',{class:_vm.chartsClass},[_vm._m(0)]),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.hasIntermediateChart),expression:"hasIntermediateChart"}],class:_vm.chartsClass},[_vm._m(1)]),_vm._v(" "),_c('div',{class:_vm.chartsClass},[_vm._m(2)]),_vm._v(" "),_c('div',{class:_vm.chartsClass},[(_vm.loadingSazonality)?_c('div',{staticClass:"transparent-loader"},[_c('div',{staticClass:"loader"})]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('span',{staticStyle:{"color":"#c2c9cb","display":"flex","justify-content":"center"}},[_c('b',[_vm._v("Sazonalidade: ")]),_vm._v(" "),_c('span',{staticStyle:{"padding-left":"5px"}},[_vm._v(_vm._s(_vm.currentPercent))]),_vm._v(" "),_c('span',{staticClass:"glyphicon glyphicon-download-alt clickable",staticStyle:{"padding-left":"5px"},on:{"click":_vm.exportSazonalityData}}),_vm._v(" "),(_vm.hasSazonalityOptions)?[_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.sazonalityOption),expression:"sazonalityOption"}],staticStyle:{"color":"#000000","background-color":"#ffffff","border-radius":"5px","margin-left":"10px"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.sazonalityOption=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_vm._l((_vm.sazonalityOptions),function(option){return [_c('option',{domProps:{"value":option.id}},[_vm._v("\n                       "+_vm._s(option.name)+"\n                     ")])]})],2)]:_vm._e()],2),_vm._v(" "),_c('comparing-chart',{ref:"cumSazonality",attrs:{"export-link":false,"base-height":150,"export-name":"sazonalidade_acumulada"}}),_vm._v(" "),_c('comparing-chart',{ref:"sazonality",attrs:{"export-link":false,"base-height":150,"export-name":"sazonalidade"}})],1)])])])]),_vm._v(" "),_c('div',{staticClass:"row"},[_c('div',{staticClass:"col-md-12"},[_c('div',{staticClass:"panel report-panel"},[(_vm.hasProductLineOptions)?_c('div',{staticClass:"row"},[_c('div',{staticStyle:{"float":"right","margin-top":"-10px"}},[_c('label',[_vm._v("LINHA DE PRODUTO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.productLineOptions,"label":"name","track-by":"id","placeholder":"Todas as linhas de produto","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.productLineOption),callback:function ($$v) {_vm.productLineOption=$$v},expression:"productLineOption"}})],1),_vm._v(" "),(_vm.hasRegionFilter)?_c('div',{staticStyle:{"float":"right","margin-top":"-10px","margin-right":"20px"}},[_c('label',[_vm._v("REGIÃO")]),_vm._v(" "),_c('multiselect',{attrs:{"options":_vm.farmRegionOptions,"label":"name","track-by":"id","placeholder":"Todas as regiões","selectLabel":"","deselectLabel":"","selectedLabel":"Selecionado"},model:{value:(_vm.farmRegionOption),callback:function ($$v) {_vm.farmRegionOption=$$v},expression:"farmRegionOption"}})],1):_vm._e()]):_vm._e(),_vm._v(" "),_c('div',{staticClass:"panel-body no-lat-padding"},[(_vm.hasData)?_c('div',[_c('table',{staticClass:"data-table sticky-header",attrs:{"id":"report-table"}},[_vm._m(3),_vm._v(" "),_c('tbody',_vm._l((_vm.tableData),function(university){return _c('tr',[_c('td',[_vm._v(_vm._s(university.university_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.university_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.education_group_id))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.education_group_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.farm_region))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.product_line_name))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.period))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.owner))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.quality_owner))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.semester_goal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.mobile_goal))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.mobile_goal_intermediate))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.realized))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.speed_intermediate))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.legacy_speed))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.visits))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.initiateds)+" ")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.mean_income))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.conversion))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.new_orders_per_visits))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.paid_per_new_orders))]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.accountable)+" ")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.last_day_velocity)+" ")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.last_week_velocity)+" ")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.last_week_goal)+" ")]),_vm._v(" "),_c('td',[_vm._v(_vm._s(university.last_week_revenue)+" ")]),_vm._v(" "),_c('td',[_vm._v("C"+_vm._s(university.account_type))])])}),0),_vm._v(" "),_c('tfoot',[_c('tr',[_vm._m(4),_vm._v(" "),_c('td',[_c('span',{staticClass:"no-wrap",attrs:{"id":"total-goal"}},[_vm._v(_vm._s(_vm.totalGoal))])]),_vm._v(" "),_vm._m(5),_vm._v(" "),_vm._m(6),_vm._v(" "),_vm._m(7),_vm._v(" "),_c('td',{attrs:{"colspan":"13"}})])])])]):_vm._e()])])])])])}
__vue__options__.staticRenderFns = [function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('div',{staticClass:"chart chart-padding",attrs:{"id":"time-chart-farmer"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('div',{staticClass:"chart chart-padding",attrs:{"id":"time-chart-farmer-intermediate"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"panel"},[_c('div',{staticClass:"panel-body"},[_c('div',{staticClass:"chart chart-padding",attrs:{"id":"time-chart-total"}})])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{attrs:{"id":"table-header"}},[_c('tr',[_c('th',[_vm._v("IES ID")]),_vm._v(" "),_c('th',[_vm._v("IES")]),_vm._v(" "),_c('th',[_vm._v("Grupo ID")]),_vm._v(" "),_c('th',[_vm._v("Grupo")]),_vm._v(" "),_c('th',[_vm._v("Região")]),_vm._v(" "),_c('th',[_vm._v("Segmento")]),_vm._v(" "),_c('th',[_vm._v("Período")]),_vm._v(" "),_c('th',[_vm._v("Farm")]),_vm._v(" "),_c('th',[_vm._v("Qualidade")]),_vm._v(" "),_c('th',[_vm._v("Meta semestre (R$)")]),_vm._v(" "),_c('th',[_vm._v("Meta móvel (R$)")]),_vm._v(" "),_c('th',[_vm._v("Meta móvel (intermediária) (R$)")]),_vm._v(" "),_c('th',[_vm._v("Realizado (R$)")]),_vm._v(" "),_c('th',[_vm._v("LTV Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("LTV Speed (intermediária) (%)")]),_vm._v(" "),_c('th',[_vm._v("Speed (%)")]),_vm._v(" "),_c('th',[_vm._v("Visitas em ofertas")]),_vm._v(" "),_c('th',[_vm._v("Ordens")]),_vm._v(" "),_c('th',[_vm._v("Faturamento por ordem (R$)")]),_vm._v(" "),_c('th',[_vm._v("Conversão")]),_vm._v(" "),_c('th',[_vm._v("Atratividade")]),_vm._v(" "),_c('th',[_vm._v("Sucesso")]),_vm._v(" "),_c('th',[_vm._v("Accountable")]),_vm._v(" "),_c('th',[_vm._v("Speed 1D (%)")]),_vm._v(" "),_c('th',[_vm._v("Speed 7D (%)")]),_vm._v(" "),_c('th',[_vm._v("Goal 7D (R$)")]),_vm._v(" "),_c('th',[_vm._v("Revenue 7D (R$)")]),_vm._v(" "),_c('th',[_vm._v("Carteira")])])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',{staticStyle:{"text-align":"right"},attrs:{"colspan":"9"}},[_c('b',[_vm._v("Totais:")])])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',[_c('span',{staticClass:"no-wrap",attrs:{"id":"mobile-goal"}})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',[_c('span',{staticClass:"no-wrap",attrs:{"id":"mobile-goal-intermediate"}})])},function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',[_c('span',{staticClass:"no-wrap",attrs:{"id":"total-realized"}})])}]
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-382ab753", __vue__options__)
  } else {
    hotAPI.reload("data-v-382ab753", __vue__options__)
  }
})()}
});

;require.alias("buffer/index.js", "buffer");
require.alias("process/browser.js", "process");process = require('process');require.register("___globals___", function(exports, require, module) {
  

// Auto-loaded modules from config.npm.globals.
window.Vue = require("vue/dist/vue.js");


});})();require('___globals___');

require('web/static/js/app');
//# sourceMappingURL=app.js.map